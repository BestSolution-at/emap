/*
* generated by Xtext
*/
package at.bestsolution.persistence.emap.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class EMapGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class EMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMapping");
		private final Assignment cRootAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cRootAlternatives_0 = (Alternatives)cRootAssignment.eContents().get(0);
		private final RuleCall cRootEMappingBundleParserRuleCall_0_0 = (RuleCall)cRootAlternatives_0.eContents().get(0);
		private final RuleCall cRootEMappingEntityDefParserRuleCall_0_1 = (RuleCall)cRootAlternatives_0.eContents().get(1);
		
		//EMapping:
		//
		//	root=(EMappingBundle | EMappingEntityDef);
		public ParserRule getRule() { return rule; }

		//root=(EMappingBundle | EMappingEntityDef)
		public Assignment getRootAssignment() { return cRootAssignment; }

		//EMappingBundle | EMappingEntityDef
		public Alternatives getRootAlternatives_0() { return cRootAlternatives_0; }

		//EMappingBundle
		public RuleCall getRootEMappingBundleParserRuleCall_0_0() { return cRootEMappingBundleParserRuleCall_0_0; }

		//EMappingEntityDef
		public RuleCall getRootEMappingEntityDefParserRuleCall_0_1() { return cRootEMappingEntityDefParserRuleCall_0_1; }
	}

	public class EMappingBundleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMappingBundle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Keyword cBundleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntitiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cEntitiesEMappingEntityCrossReference_4_0 = (CrossReference)cEntitiesAssignment_4.eContents().get(0);
		private final RuleCall cEntitiesEMappingEntityIDTerminalRuleCall_4_0_1 = (RuleCall)cEntitiesEMappingEntityCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEntitiesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cEntitiesEMappingEntityCrossReference_5_1_0 = (CrossReference)cEntitiesAssignment_5_1.eContents().get(0);
		private final RuleCall cEntitiesEMappingEntityIDTerminalRuleCall_5_1_0_1 = (RuleCall)cEntitiesEMappingEntityCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EMappingBundle:
		//
		//	imports+=Import* "bundle" name=ID "{" entities+=[EMappingEntity] ("," entities+=[EMappingEntity])* "}";
		public ParserRule getRule() { return rule; }

		//imports+=Import* "bundle" name=ID "{" entities+=[EMappingEntity] ("," entities+=[EMappingEntity])* "}"
		public Group getGroup() { return cGroup; }

		//imports+=Import*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }

		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }

		//"bundle"
		public Keyword getBundleKeyword_1() { return cBundleKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//entities+=[EMappingEntity]
		public Assignment getEntitiesAssignment_4() { return cEntitiesAssignment_4; }

		//[EMappingEntity]
		public CrossReference getEntitiesEMappingEntityCrossReference_4_0() { return cEntitiesEMappingEntityCrossReference_4_0; }

		//ID
		public RuleCall getEntitiesEMappingEntityIDTerminalRuleCall_4_0_1() { return cEntitiesEMappingEntityIDTerminalRuleCall_4_0_1; }

		//("," entities+=[EMappingEntity])*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//entities+=[EMappingEntity]
		public Assignment getEntitiesAssignment_5_1() { return cEntitiesAssignment_5_1; }

		//[EMappingEntity]
		public CrossReference getEntitiesEMappingEntityCrossReference_5_1_0() { return cEntitiesEMappingEntityCrossReference_5_1_0; }

		//ID
		public RuleCall getEntitiesEMappingEntityIDTerminalRuleCall_5_1_0_1() { return cEntitiesEMappingEntityIDTerminalRuleCall_5_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EMappingEntityDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMappingEntityDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPackageAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPackagePackageDeclarationParserRuleCall_0_0 = (RuleCall)cPackageAssignment_0.eContents().get(0);
		private final Assignment cImportsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportsImportParserRuleCall_1_0 = (RuleCall)cImportsAssignment_1.eContents().get(0);
		private final Assignment cEntityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEntityEMappingEntityParserRuleCall_2_0 = (RuleCall)cEntityAssignment_2.eContents().get(0);
		
		//EMappingEntityDef:
		//
		//	package=PackageDeclaration imports+=Import* entity=EMappingEntity;
		public ParserRule getRule() { return rule; }

		//package=PackageDeclaration imports+=Import* entity=EMappingEntity
		public Group getGroup() { return cGroup; }

		//package=PackageDeclaration
		public Assignment getPackageAssignment_0() { return cPackageAssignment_0; }

		//PackageDeclaration
		public RuleCall getPackagePackageDeclarationParserRuleCall_0_0() { return cPackagePackageDeclarationParserRuleCall_0_0; }

		//imports+=Import*
		public Assignment getImportsAssignment_1() { return cImportsAssignment_1; }

		//Import
		public RuleCall getImportsImportParserRuleCall_1_0() { return cImportsImportParserRuleCall_1_0; }

		//entity=EMappingEntity
		public Assignment getEntityAssignment_2() { return cEntityAssignment_2; }

		//EMappingEntity
		public RuleCall getEntityEMappingEntityParserRuleCall_2_0() { return cEntityEMappingEntityParserRuleCall_2_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cImportedNamespaceAlternatives_1_0 = (Alternatives)cImportedNamespaceAssignment_1.eContents().get(0);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0 = (RuleCall)cImportedNamespaceAlternatives_1_0.eContents().get(0);
		private final RuleCall cImportedNamespaceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cImportedNamespaceAlternatives_1_0.eContents().get(1);
		
		//Import:
		//
		//	"import" importedNamespace=(QualifiedNameWithWildcard | QualifiedName);
		public ParserRule getRule() { return rule; }

		//"import" importedNamespace=(QualifiedNameWithWildcard | QualifiedName)
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=(QualifiedNameWithWildcard | QualifiedName)
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//QualifiedNameWithWildcard | QualifiedName
		public Alternatives getImportedNamespaceAlternatives_1_0() { return cImportedNamespaceAlternatives_1_0; }

		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0; }

		//QualifiedName
		public RuleCall getImportedNamespaceQualifiedNameParserRuleCall_1_0_1() { return cImportedNamespaceQualifiedNameParserRuleCall_1_0_1; }
	}

	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//PackageDeclaration:
		//
		//	"package" name=QualifiedName ";";
		public ParserRule getRule() { return rule; }

		//"package" name=QualifiedName ";"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class EMappingEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMappingEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cAbstractAbstractKeyword_0_0 = (Keyword)cAbstractAssignment_0.eContents().get(0);
		private final Keyword cEntityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cExtensionTypeAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Alternatives cExtensionTypeAlternatives_3_0_0 = (Alternatives)cExtensionTypeAssignment_3_0.eContents().get(0);
		private final Keyword cExtensionTypeExtendsKeyword_3_0_0_0 = (Keyword)cExtensionTypeAlternatives_3_0_0.eContents().get(0);
		private final Keyword cExtensionTypeDerivedKeyword_3_0_0_1 = (Keyword)cExtensionTypeAlternatives_3_0_0.eContents().get(1);
		private final Assignment cParentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cParentEMappingEntityCrossReference_3_1_0 = (CrossReference)cParentAssignment_3_1.eContents().get(0);
		private final RuleCall cParentEMappingEntityQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cParentEMappingEntityCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEtypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEtypeETypeParserRuleCall_5_0 = (RuleCall)cEtypeAssignment_5.eContents().get(0);
		private final Keyword cAttributesKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAttributesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAttributesEAttributeParserRuleCall_8_0 = (RuleCall)cAttributesAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cAttributesAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cAttributesEAttributeParserRuleCall_9_1_0 = (RuleCall)cAttributesAssignment_9_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cQueriesKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cNamedQueriesAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cNamedQueriesENamedQueryParserRuleCall_11_2_0 = (RuleCall)cNamedQueriesAssignment_11_2.eContents().get(0);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cNamedQueriesAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final RuleCall cNamedQueriesENamedQueryParserRuleCall_11_3_1_0 = (RuleCall)cNamedQueriesAssignment_11_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cAsKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cTableNameAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cTableNameIDTerminalRuleCall_13_1_0 = (RuleCall)cTableNameAssignment_13_1.eContents().get(0);
		
		//EMappingEntity:
		//
		//	abstract?="abstract"? "entity" name=ID (extensionType=("extends" | "derived") parent=[EMappingEntity|QualifiedName])?
		//
		//	"{" etype=EType "attributes" "{" attributes+=EAttribute ("," attributes+=EAttribute)* "}" ("queries" "{"
		//
		//	namedQueries+=ENamedQuery ("," namedQueries+=ENamedQuery)* "}")? "}" ("as" tableName=ID)?;
		public ParserRule getRule() { return rule; }

		//abstract?="abstract"? "entity" name=ID (extensionType=("extends" | "derived") parent=[EMappingEntity|QualifiedName])?
		//
		//"{" etype=EType "attributes" "{" attributes+=EAttribute ("," attributes+=EAttribute)* "}" ("queries" "{"
		//
		//namedQueries+=ENamedQuery ("," namedQueries+=ENamedQuery)* "}")? "}" ("as" tableName=ID)?
		public Group getGroup() { return cGroup; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_0() { return cAbstractAssignment_0; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_0_0() { return cAbstractAbstractKeyword_0_0; }

		//"entity"
		public Keyword getEntityKeyword_1() { return cEntityKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(extensionType=("extends" | "derived") parent=[EMappingEntity|QualifiedName])?
		public Group getGroup_3() { return cGroup_3; }

		//extensionType=("extends" | "derived")
		public Assignment getExtensionTypeAssignment_3_0() { return cExtensionTypeAssignment_3_0; }

		//"extends" | "derived"
		public Alternatives getExtensionTypeAlternatives_3_0_0() { return cExtensionTypeAlternatives_3_0_0; }

		//"extends"
		public Keyword getExtensionTypeExtendsKeyword_3_0_0_0() { return cExtensionTypeExtendsKeyword_3_0_0_0; }

		//"derived"
		public Keyword getExtensionTypeDerivedKeyword_3_0_0_1() { return cExtensionTypeDerivedKeyword_3_0_0_1; }

		//parent=[EMappingEntity|QualifiedName]
		public Assignment getParentAssignment_3_1() { return cParentAssignment_3_1; }

		//[EMappingEntity|QualifiedName]
		public CrossReference getParentEMappingEntityCrossReference_3_1_0() { return cParentEMappingEntityCrossReference_3_1_0; }

		//QualifiedName
		public RuleCall getParentEMappingEntityQualifiedNameParserRuleCall_3_1_0_1() { return cParentEMappingEntityQualifiedNameParserRuleCall_3_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//etype=EType
		public Assignment getEtypeAssignment_5() { return cEtypeAssignment_5; }

		//EType
		public RuleCall getEtypeETypeParserRuleCall_5_0() { return cEtypeETypeParserRuleCall_5_0; }

		//"attributes"
		public Keyword getAttributesKeyword_6() { return cAttributesKeyword_6; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//attributes+=EAttribute
		public Assignment getAttributesAssignment_8() { return cAttributesAssignment_8; }

		//EAttribute
		public RuleCall getAttributesEAttributeParserRuleCall_8_0() { return cAttributesEAttributeParserRuleCall_8_0; }

		//("," attributes+=EAttribute)*
		public Group getGroup_9() { return cGroup_9; }

		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }

		//attributes+=EAttribute
		public Assignment getAttributesAssignment_9_1() { return cAttributesAssignment_9_1; }

		//EAttribute
		public RuleCall getAttributesEAttributeParserRuleCall_9_1_0() { return cAttributesEAttributeParserRuleCall_9_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }

		//("queries" "{" namedQueries+=ENamedQuery ("," namedQueries+=ENamedQuery)* "}")?
		public Group getGroup_11() { return cGroup_11; }

		//"queries"
		public Keyword getQueriesKeyword_11_0() { return cQueriesKeyword_11_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }

		//namedQueries+=ENamedQuery
		public Assignment getNamedQueriesAssignment_11_2() { return cNamedQueriesAssignment_11_2; }

		//ENamedQuery
		public RuleCall getNamedQueriesENamedQueryParserRuleCall_11_2_0() { return cNamedQueriesENamedQueryParserRuleCall_11_2_0; }

		//("," namedQueries+=ENamedQuery)*
		public Group getGroup_11_3() { return cGroup_11_3; }

		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }

		//namedQueries+=ENamedQuery
		public Assignment getNamedQueriesAssignment_11_3_1() { return cNamedQueriesAssignment_11_3_1; }

		//ENamedQuery
		public RuleCall getNamedQueriesENamedQueryParserRuleCall_11_3_1_0() { return cNamedQueriesENamedQueryParserRuleCall_11_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11_4() { return cRightCurlyBracketKeyword_11_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }

		//("as" tableName=ID)?
		public Group getGroup_13() { return cGroup_13; }

		//"as"
		public Keyword getAsKeyword_13_0() { return cAsKeyword_13_0; }

		//tableName=ID
		public Assignment getTableNameAssignment_13_1() { return cTableNameAssignment_13_1; }

		//ID
		public RuleCall getTableNameIDTerminalRuleCall_13_1_0() { return cTableNameIDTerminalRuleCall_13_1_0; }
	}

	public class EAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPkAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPkPrimarykeyKeyword_0_0 = (Keyword)cPkAssignment_0.eContents().get(0);
		private final Assignment cPropertyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPropertyQualifiedNameParserRuleCall_1_0 = (RuleCall)cPropertyAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cColumnNameAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cColumnNameIDTerminalRuleCall_3_0_0 = (RuleCall)cColumnNameAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cResolveKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cEntityAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cEntityENamedQueryCrossReference_3_1_1_0 = (CrossReference)cEntityAssignment_3_1_1.eContents().get(0);
		private final RuleCall cEntityENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1 = (RuleCall)cEntityENamedQueryCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Assignment cParametersAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cParametersIDTerminalRuleCall_3_1_3_0 = (RuleCall)cParametersAssignment_3_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_1_4 = (Keyword)cGroup_3_1.eContents().get(4);
		
		//EAttribute:
		//
		//	pk?="primarykey"? property=QualifiedName "=>" (columnName=ID | "resolve" entity=[ENamedQuery|QualifiedName] "("
		//
		//	parameters+=ID ")");
		public ParserRule getRule() { return rule; }

		//pk?="primarykey"? property=QualifiedName "=>" (columnName=ID | "resolve" entity=[ENamedQuery|QualifiedName] "("
		//
		//parameters+=ID ")")
		public Group getGroup() { return cGroup; }

		//pk?="primarykey"?
		public Assignment getPkAssignment_0() { return cPkAssignment_0; }

		//"primarykey"
		public Keyword getPkPrimarykeyKeyword_0_0() { return cPkPrimarykeyKeyword_0_0; }

		//property=QualifiedName
		public Assignment getPropertyAssignment_1() { return cPropertyAssignment_1; }

		//QualifiedName
		public RuleCall getPropertyQualifiedNameParserRuleCall_1_0() { return cPropertyQualifiedNameParserRuleCall_1_0; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_2() { return cEqualsSignGreaterThanSignKeyword_2; }

		//columnName=ID | "resolve" entity=[ENamedQuery|QualifiedName] "(" parameters+=ID ")"
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//columnName=ID
		public Assignment getColumnNameAssignment_3_0() { return cColumnNameAssignment_3_0; }

		//ID
		public RuleCall getColumnNameIDTerminalRuleCall_3_0_0() { return cColumnNameIDTerminalRuleCall_3_0_0; }

		//"resolve" entity=[ENamedQuery|QualifiedName] "(" parameters+=ID ")"
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"resolve"
		public Keyword getResolveKeyword_3_1_0() { return cResolveKeyword_3_1_0; }

		//entity=[ENamedQuery|QualifiedName]
		public Assignment getEntityAssignment_3_1_1() { return cEntityAssignment_3_1_1; }

		//[ENamedQuery|QualifiedName]
		public CrossReference getEntityENamedQueryCrossReference_3_1_1_0() { return cEntityENamedQueryCrossReference_3_1_1_0; }

		//QualifiedName
		public RuleCall getEntityENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1() { return cEntityENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1_2() { return cLeftParenthesisKeyword_3_1_2; }

		//parameters+=ID
		public Assignment getParametersAssignment_3_1_3() { return cParametersAssignment_3_1_3; }

		//ID
		public RuleCall getParametersIDTerminalRuleCall_3_1_3_0() { return cParametersIDTerminalRuleCall_3_1_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_1_4() { return cRightParenthesisKeyword_3_1_4; }
	}

	public class ENamedQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ENamedQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cParametersAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cParametersEParameterParserRuleCall_1_1_0 = (RuleCall)cParametersAssignment_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cQueriesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQueriesEQueryParserRuleCall_3_0 = (RuleCall)cQueriesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ENamedQuery:
		//
		//	name=ID ("(" parameters+=EParameter* ")")? "{" queries+=EQuery "}";
		public ParserRule getRule() { return rule; }

		//name=ID ("(" parameters+=EParameter* ")")? "{" queries+=EQuery "}"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//("(" parameters+=EParameter* ")")?
		public Group getGroup_1() { return cGroup_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }

		//parameters+=EParameter*
		public Assignment getParametersAssignment_1_1() { return cParametersAssignment_1_1; }

		//EParameter
		public RuleCall getParametersEParameterParserRuleCall_1_1_0() { return cParametersEParameterParserRuleCall_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//queries+=EQuery
		public Assignment getQueriesAssignment_3() { return cQueriesAssignment_3; }

		//EQuery
		public RuleCall getQueriesEQueryParserRuleCall_3_0() { return cQueriesEQueryParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class EParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeIDTerminalRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//EParameter:
		//
		//	type=ID name=ID;
		public ParserRule getRule() { return rule; }

		//type=ID name=ID
		public Group getGroup() { return cGroup; }

		//type=ID
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_0_0() { return cTypeIDTerminalRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class EQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cDbTypeAlternatives_0_0 = (Alternatives)cDbTypeAssignment_0.eContents().get(0);
		private final Keyword cDbTypeDefaultKeyword_0_0_0 = (Keyword)cDbTypeAlternatives_0_0.eContents().get(0);
		private final RuleCall cDbTypeSTRINGTerminalRuleCall_0_0_1 = (RuleCall)cDbTypeAlternatives_0_0.eContents().get(1);
		private final Assignment cMappingAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMappingEObjectSectionParserRuleCall_1_0 = (RuleCall)cMappingAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cFROMKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cFromAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cFromSTRINGTerminalRuleCall_2_0_1_0 = (RuleCall)cFromAssignment_2_0_1.eContents().get(0);
		private final Keyword cWHEREKeyword_2_0_2 = (Keyword)cGroup_2_0.eContents().get(2);
		private final Assignment cWhereAssignment_2_0_3 = (Assignment)cGroup_2_0.eContents().get(3);
		private final RuleCall cWhereSTRINGTerminalRuleCall_2_0_3_0 = (RuleCall)cWhereAssignment_2_0_3.eContents().get(0);
		private final Assignment cAllAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cAllSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cAllAssignment_2_1.eContents().get(0);
		
		//EQuery:
		//
		//	dbType=("default" | STRING) mapping=EObjectSection ("FROM" from=STRING "WHERE" where=STRING | all=STRING);
		public ParserRule getRule() { return rule; }

		//dbType=("default" | STRING) mapping=EObjectSection ("FROM" from=STRING "WHERE" where=STRING | all=STRING)
		public Group getGroup() { return cGroup; }

		//dbType=("default" | STRING)
		public Assignment getDbTypeAssignment_0() { return cDbTypeAssignment_0; }

		//"default" | STRING
		public Alternatives getDbTypeAlternatives_0_0() { return cDbTypeAlternatives_0_0; }

		//"default"
		public Keyword getDbTypeDefaultKeyword_0_0_0() { return cDbTypeDefaultKeyword_0_0_0; }

		//STRING
		public RuleCall getDbTypeSTRINGTerminalRuleCall_0_0_1() { return cDbTypeSTRINGTerminalRuleCall_0_0_1; }

		//mapping=EObjectSection
		public Assignment getMappingAssignment_1() { return cMappingAssignment_1; }

		//EObjectSection
		public RuleCall getMappingEObjectSectionParserRuleCall_1_0() { return cMappingEObjectSectionParserRuleCall_1_0; }

		//"FROM" from=STRING "WHERE" where=STRING | all=STRING
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"FROM" from=STRING "WHERE" where=STRING
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"FROM"
		public Keyword getFROMKeyword_2_0_0() { return cFROMKeyword_2_0_0; }

		//from=STRING
		public Assignment getFromAssignment_2_0_1() { return cFromAssignment_2_0_1; }

		//STRING
		public RuleCall getFromSTRINGTerminalRuleCall_2_0_1_0() { return cFromSTRINGTerminalRuleCall_2_0_1_0; }

		//"WHERE"
		public Keyword getWHEREKeyword_2_0_2() { return cWHEREKeyword_2_0_2; }

		//where=STRING
		public Assignment getWhereAssignment_2_0_3() { return cWhereAssignment_2_0_3; }

		//STRING
		public RuleCall getWhereSTRINGTerminalRuleCall_2_0_3_0() { return cWhereSTRINGTerminalRuleCall_2_0_3_0; }

		//all=STRING
		public Assignment getAllAssignment_2_1() { return cAllAssignment_2_1; }

		//STRING
		public RuleCall getAllSTRINGTerminalRuleCall_2_1_0() { return cAllSTRINGTerminalRuleCall_2_1_0; }
	}

	public class EObjectSectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EObjectSection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEntityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cEntityEMappingEntityCrossReference_0_0 = (CrossReference)cEntityAssignment_0.eContents().get(0);
		private final RuleCall cEntityEMappingEntityIDTerminalRuleCall_0_0_1 = (RuleCall)cEntityEMappingEntityCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cPrefixAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cPrefixIDTerminalRuleCall_1_0_0 = (RuleCall)cPrefixAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cAttributesAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cAttributesEMappingAttributeParserRuleCall_1_1_1_0 = (RuleCall)cAttributesAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_1_2 = (Group)cGroup_1_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cAttributesAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final RuleCall cAttributesEMappingAttributeParserRuleCall_1_1_2_1_0 = (RuleCall)cAttributesAssignment_1_1_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_1_3 = (Keyword)cGroup_1_1.eContents().get(3);
		
		//EObjectSection:
		//
		//	entity=[EMappingEntity] (prefix=ID ("{" attributes+=EMappingAttribute ("," attributes+=EMappingAttribute)* "}")?)?;
		public ParserRule getRule() { return rule; }

		//entity=[EMappingEntity] (prefix=ID ("{" attributes+=EMappingAttribute ("," attributes+=EMappingAttribute)* "}")?)?
		public Group getGroup() { return cGroup; }

		//entity=[EMappingEntity]
		public Assignment getEntityAssignment_0() { return cEntityAssignment_0; }

		//[EMappingEntity]
		public CrossReference getEntityEMappingEntityCrossReference_0_0() { return cEntityEMappingEntityCrossReference_0_0; }

		//ID
		public RuleCall getEntityEMappingEntityIDTerminalRuleCall_0_0_1() { return cEntityEMappingEntityIDTerminalRuleCall_0_0_1; }

		//(prefix=ID ("{" attributes+=EMappingAttribute ("," attributes+=EMappingAttribute)* "}")?)?
		public Group getGroup_1() { return cGroup_1; }

		//prefix=ID
		public Assignment getPrefixAssignment_1_0() { return cPrefixAssignment_1_0; }

		//ID
		public RuleCall getPrefixIDTerminalRuleCall_1_0_0() { return cPrefixIDTerminalRuleCall_1_0_0; }

		//("{" attributes+=EMappingAttribute ("," attributes+=EMappingAttribute)* "}")?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_1_0() { return cLeftCurlyBracketKeyword_1_1_0; }

		//attributes+=EMappingAttribute
		public Assignment getAttributesAssignment_1_1_1() { return cAttributesAssignment_1_1_1; }

		//EMappingAttribute
		public RuleCall getAttributesEMappingAttributeParserRuleCall_1_1_1_0() { return cAttributesEMappingAttributeParserRuleCall_1_1_1_0; }

		//("," attributes+=EMappingAttribute)*
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }

		//","
		public Keyword getCommaKeyword_1_1_2_0() { return cCommaKeyword_1_1_2_0; }

		//attributes+=EMappingAttribute
		public Assignment getAttributesAssignment_1_1_2_1() { return cAttributesAssignment_1_1_2_1; }

		//EMappingAttribute
		public RuleCall getAttributesEMappingAttributeParserRuleCall_1_1_2_1_0() { return cAttributesEMappingAttributeParserRuleCall_1_1_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_1_3() { return cRightCurlyBracketKeyword_1_1_3; }
	}

	public class EMappingAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMappingAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPkAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPkPrimarykeyKeyword_0_0 = (Keyword)cPkAssignment_0.eContents().get(0);
		private final Assignment cPropertyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPropertyQualifiedNameParserRuleCall_1_0 = (RuleCall)cPropertyAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cColumnNameAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cColumnNameIDTerminalRuleCall_3_0_0 = (RuleCall)cColumnNameAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cResolveKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cEntityAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cEntityENamedQueryCrossReference_3_1_1_0 = (CrossReference)cEntityAssignment_3_1_1.eContents().get(0);
		private final RuleCall cEntityENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1 = (RuleCall)cEntityENamedQueryCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Assignment cParametersAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cParametersIDTerminalRuleCall_3_1_3_0 = (RuleCall)cParametersAssignment_3_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_1_4 = (Keyword)cGroup_3_1.eContents().get(4);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Keyword cMapKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cMapAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cMapEObjectSectionParserRuleCall_3_2_1_0 = (RuleCall)cMapAssignment_3_2_1.eContents().get(0);
		
		//EMappingAttribute:
		//
		//	pk?="primarykey"? property=QualifiedName "=>" (columnName=ID | "resolve" entity=[ENamedQuery|QualifiedName] "("
		//
		//	parameters+=ID ")" | "map" map=EObjectSection);
		public ParserRule getRule() { return rule; }

		//pk?="primarykey"? property=QualifiedName "=>" (columnName=ID | "resolve" entity=[ENamedQuery|QualifiedName] "("
		//
		//parameters+=ID ")" | "map" map=EObjectSection)
		public Group getGroup() { return cGroup; }

		//pk?="primarykey"?
		public Assignment getPkAssignment_0() { return cPkAssignment_0; }

		//"primarykey"
		public Keyword getPkPrimarykeyKeyword_0_0() { return cPkPrimarykeyKeyword_0_0; }

		//property=QualifiedName
		public Assignment getPropertyAssignment_1() { return cPropertyAssignment_1; }

		//QualifiedName
		public RuleCall getPropertyQualifiedNameParserRuleCall_1_0() { return cPropertyQualifiedNameParserRuleCall_1_0; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_2() { return cEqualsSignGreaterThanSignKeyword_2; }

		//columnName=ID | "resolve" entity=[ENamedQuery|QualifiedName] "(" parameters+=ID ")" | "map" map=EObjectSection
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//columnName=ID
		public Assignment getColumnNameAssignment_3_0() { return cColumnNameAssignment_3_0; }

		//ID
		public RuleCall getColumnNameIDTerminalRuleCall_3_0_0() { return cColumnNameIDTerminalRuleCall_3_0_0; }

		//"resolve" entity=[ENamedQuery|QualifiedName] "(" parameters+=ID ")"
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"resolve"
		public Keyword getResolveKeyword_3_1_0() { return cResolveKeyword_3_1_0; }

		//entity=[ENamedQuery|QualifiedName]
		public Assignment getEntityAssignment_3_1_1() { return cEntityAssignment_3_1_1; }

		//[ENamedQuery|QualifiedName]
		public CrossReference getEntityENamedQueryCrossReference_3_1_1_0() { return cEntityENamedQueryCrossReference_3_1_1_0; }

		//QualifiedName
		public RuleCall getEntityENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1() { return cEntityENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1_2() { return cLeftParenthesisKeyword_3_1_2; }

		//parameters+=ID
		public Assignment getParametersAssignment_3_1_3() { return cParametersAssignment_3_1_3; }

		//ID
		public RuleCall getParametersIDTerminalRuleCall_3_1_3_0() { return cParametersIDTerminalRuleCall_3_1_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_1_4() { return cRightParenthesisKeyword_3_1_4; }

		//"map" map=EObjectSection
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"map"
		public Keyword getMapKeyword_3_2_0() { return cMapKeyword_3_2_0; }

		//map=EObjectSection
		public Assignment getMapAssignment_3_2_1() { return cMapAssignment_3_2_1; }

		//EObjectSection
		public RuleCall getMapEObjectSectionParserRuleCall_3_2_1_0() { return cMapEObjectSectionParserRuleCall_3_2_1_0; }
	}

	public class ETypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEtypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cUrlAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUrlSTRINGTerminalRuleCall_1_0 = (RuleCall)cUrlAssignment_1.eContents().get(0);
		private final Keyword cNumberSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//EType:
		//
		//	"etype" url=STRING "#" name=ID;
		public ParserRule getRule() { return rule; }

		//"etype" url=STRING "#" name=ID
		public Group getGroup() { return cGroup; }

		//"etype"
		public Keyword getEtypeKeyword_0() { return cEtypeKeyword_0; }

		//url=STRING
		public Assignment getUrlAssignment_1() { return cUrlAssignment_1; }

		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_1_0() { return cUrlSTRINGTerminalRuleCall_1_0; }

		//"#"
		public Keyword getNumberSignKeyword_2() { return cNumberSignKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//(=> "." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//=> "."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//QualifiedNameWithWildcard:
		//
		//	QualifiedName "." "*";
		public ParserRule getRule() { return rule; }

		//QualifiedName "." "*"
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//"*"
		public Keyword getAsteriskKeyword_2() { return cAsteriskKeyword_2; }
	}
	
	
	private EMappingElements pEMapping;
	private EMappingBundleElements pEMappingBundle;
	private EMappingEntityDefElements pEMappingEntityDef;
	private ImportElements pImport;
	private PackageDeclarationElements pPackageDeclaration;
	private EMappingEntityElements pEMappingEntity;
	private EAttributeElements pEAttribute;
	private ENamedQueryElements pENamedQuery;
	private EParameterElements pEParameter;
	private EQueryElements pEQuery;
	private EObjectSectionElements pEObjectSection;
	private EMappingAttributeElements pEMappingAttribute;
	private ETypeElements pEType;
	private QualifiedNameElements pQualifiedName;
	private QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public EMapGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.bestsolution.persistence.emap.EMap".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//EMapping:
	//
	//	root=(EMappingBundle | EMappingEntityDef);
	public EMappingElements getEMappingAccess() {
		return (pEMapping != null) ? pEMapping : (pEMapping = new EMappingElements());
	}
	
	public ParserRule getEMappingRule() {
		return getEMappingAccess().getRule();
	}

	//EMappingBundle:
	//
	//	imports+=Import* "bundle" name=ID "{" entities+=[EMappingEntity] ("," entities+=[EMappingEntity])* "}";
	public EMappingBundleElements getEMappingBundleAccess() {
		return (pEMappingBundle != null) ? pEMappingBundle : (pEMappingBundle = new EMappingBundleElements());
	}
	
	public ParserRule getEMappingBundleRule() {
		return getEMappingBundleAccess().getRule();
	}

	//EMappingEntityDef:
	//
	//	package=PackageDeclaration imports+=Import* entity=EMappingEntity;
	public EMappingEntityDefElements getEMappingEntityDefAccess() {
		return (pEMappingEntityDef != null) ? pEMappingEntityDef : (pEMappingEntityDef = new EMappingEntityDefElements());
	}
	
	public ParserRule getEMappingEntityDefRule() {
		return getEMappingEntityDefAccess().getRule();
	}

	//Import:
	//
	//	"import" importedNamespace=(QualifiedNameWithWildcard | QualifiedName);
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//PackageDeclaration:
	//
	//	"package" name=QualifiedName ";";
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return (pPackageDeclaration != null) ? pPackageDeclaration : (pPackageDeclaration = new PackageDeclarationElements());
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}

	//EMappingEntity:
	//
	//	abstract?="abstract"? "entity" name=ID (extensionType=("extends" | "derived") parent=[EMappingEntity|QualifiedName])?
	//
	//	"{" etype=EType "attributes" "{" attributes+=EAttribute ("," attributes+=EAttribute)* "}" ("queries" "{"
	//
	//	namedQueries+=ENamedQuery ("," namedQueries+=ENamedQuery)* "}")? "}" ("as" tableName=ID)?;
	public EMappingEntityElements getEMappingEntityAccess() {
		return (pEMappingEntity != null) ? pEMappingEntity : (pEMappingEntity = new EMappingEntityElements());
	}
	
	public ParserRule getEMappingEntityRule() {
		return getEMappingEntityAccess().getRule();
	}

	//EAttribute:
	//
	//	pk?="primarykey"? property=QualifiedName "=>" (columnName=ID | "resolve" entity=[ENamedQuery|QualifiedName] "("
	//
	//	parameters+=ID ")");
	public EAttributeElements getEAttributeAccess() {
		return (pEAttribute != null) ? pEAttribute : (pEAttribute = new EAttributeElements());
	}
	
	public ParserRule getEAttributeRule() {
		return getEAttributeAccess().getRule();
	}

	//ENamedQuery:
	//
	//	name=ID ("(" parameters+=EParameter* ")")? "{" queries+=EQuery "}";
	public ENamedQueryElements getENamedQueryAccess() {
		return (pENamedQuery != null) ? pENamedQuery : (pENamedQuery = new ENamedQueryElements());
	}
	
	public ParserRule getENamedQueryRule() {
		return getENamedQueryAccess().getRule();
	}

	//EParameter:
	//
	//	type=ID name=ID;
	public EParameterElements getEParameterAccess() {
		return (pEParameter != null) ? pEParameter : (pEParameter = new EParameterElements());
	}
	
	public ParserRule getEParameterRule() {
		return getEParameterAccess().getRule();
	}

	//EQuery:
	//
	//	dbType=("default" | STRING) mapping=EObjectSection ("FROM" from=STRING "WHERE" where=STRING | all=STRING);
	public EQueryElements getEQueryAccess() {
		return (pEQuery != null) ? pEQuery : (pEQuery = new EQueryElements());
	}
	
	public ParserRule getEQueryRule() {
		return getEQueryAccess().getRule();
	}

	//EObjectSection:
	//
	//	entity=[EMappingEntity] (prefix=ID ("{" attributes+=EMappingAttribute ("," attributes+=EMappingAttribute)* "}")?)?;
	public EObjectSectionElements getEObjectSectionAccess() {
		return (pEObjectSection != null) ? pEObjectSection : (pEObjectSection = new EObjectSectionElements());
	}
	
	public ParserRule getEObjectSectionRule() {
		return getEObjectSectionAccess().getRule();
	}

	//EMappingAttribute:
	//
	//	pk?="primarykey"? property=QualifiedName "=>" (columnName=ID | "resolve" entity=[ENamedQuery|QualifiedName] "("
	//
	//	parameters+=ID ")" | "map" map=EObjectSection);
	public EMappingAttributeElements getEMappingAttributeAccess() {
		return (pEMappingAttribute != null) ? pEMappingAttribute : (pEMappingAttribute = new EMappingAttributeElements());
	}
	
	public ParserRule getEMappingAttributeRule() {
		return getEMappingAttributeAccess().getRule();
	}

	//EType:
	//
	//	"etype" url=STRING "#" name=ID;
	public ETypeElements getETypeAccess() {
		return (pEType != null) ? pEType : (pEType = new ETypeElements());
	}
	
	public ParserRule getETypeRule() {
		return getETypeAccess().getRule();
	}

	//QualifiedName:
	//
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//
	//	QualifiedName "." "*";
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return (pQualifiedNameWithWildcard != null) ? pQualifiedNameWithWildcard : (pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements());
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//terminal ID:
	//
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
