/*
 * generated by Xtext
 */
package at.bestsolution.persistence.emap.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class EMapGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class EMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EMapping");
		private final Assignment cRootAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cRootAlternatives_0 = (Alternatives)cRootAssignment.eContents().get(0);
		private final RuleCall cRootEMappingBundleParserRuleCall_0_0 = (RuleCall)cRootAlternatives_0.eContents().get(0);
		private final RuleCall cRootEMappingEntityDefParserRuleCall_0_1 = (RuleCall)cRootAlternatives_0.eContents().get(1);
		
		//EMapping:
		//	root=(EMappingBundle | EMappingEntityDef);
		@Override public ParserRule getRule() { return rule; }

		//root=(EMappingBundle | EMappingEntityDef)
		public Assignment getRootAssignment() { return cRootAssignment; }

		//(EMappingBundle | EMappingEntityDef)
		public Alternatives getRootAlternatives_0() { return cRootAlternatives_0; }

		//EMappingBundle
		public RuleCall getRootEMappingBundleParserRuleCall_0_0() { return cRootEMappingBundleParserRuleCall_0_0; }

		//EMappingEntityDef
		public RuleCall getRootEMappingEntityDefParserRuleCall_0_1() { return cRootEMappingEntityDefParserRuleCall_0_1; }
	}

	public class EMappingBundleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EMappingBundle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Keyword cBundleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cParentBundleAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cParentBundleEMappingBundleCrossReference_3_1_0 = (CrossReference)cParentBundleAssignment_3_1.eContents().get(0);
		private final RuleCall cParentBundleEMappingBundleQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cParentBundleEMappingBundleCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPredefinedKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPredefAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cPredefEPredefParserRuleCall_5_2_0 = (RuleCall)cPredefAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPredefAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cPredefEPredefParserRuleCall_5_3_1_0 = (RuleCall)cPredefAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Assignment cEntitiesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cEntitiesEBundleEntityParserRuleCall_6_0 = (RuleCall)cEntitiesAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cEntitiesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cEntitiesEBundleEntityParserRuleCall_7_1_0 = (RuleCall)cEntitiesAssignment_7_1.eContents().get(0);
		private final Assignment cTypeDefsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTypeDefsESQLTypeDefParserRuleCall_8_0 = (RuleCall)cTypeDefsAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cGeneratorKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cGeneratorsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cGeneratorsEGeneratorDefParserRuleCall_9_2_0 = (RuleCall)cGeneratorsAssignment_9_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cDatabasesKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cDatabasesAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cDatabasesSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cDatabasesAssignment_11_1.eContents().get(0);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final Keyword cCommaKeyword_11_2_0 = (Keyword)cGroup_11_2.eContents().get(0);
		private final Assignment cDatabasesAssignment_11_2_1 = (Assignment)cGroup_11_2.eContents().get(1);
		private final RuleCall cDatabasesSTRINGTerminalRuleCall_11_2_1_0 = (RuleCall)cDatabasesAssignment_11_2_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cColsortKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cColSortAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cColSortColSortEnumRuleCall_12_1_0 = (RuleCall)cColSortAssignment_12_1.eContents().get(0);
		
		//EMappingBundle:
		//	imports+=Import*
		//	'bundle' name=ID ('extends' parentBundle=[EMappingBundle|QualifiedName])? '{' ('predefined' '{' predef+=EPredef (','
		//	predef+=EPredef)* '}')?
		//	entities+=EBundleEntity (',' entities+=EBundleEntity)*
		//	typeDefs+=ESQLTypeDef* ('generator' '{'
		//	generators+=EGeneratorDef+
		//	'}')?
		//	'}' ('databases' databases+=STRING (',' databases+=STRING)*)? ('colsort' colSort=ColSort)?;
		@Override public ParserRule getRule() { return rule; }

		//imports+=Import* 'bundle' name=ID ('extends' parentBundle=[EMappingBundle|QualifiedName])? '{' ('predefined' '{'
		//predef+=EPredef (',' predef+=EPredef)* '}')? entities+=EBundleEntity (',' entities+=EBundleEntity)*
		//typeDefs+=ESQLTypeDef* ('generator' '{' generators+=EGeneratorDef+ '}')? '}' ('databases' databases+=STRING (','
		//databases+=STRING)*)? ('colsort' colSort=ColSort)?
		public Group getGroup() { return cGroup; }

		//imports+=Import*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }

		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }

		//'bundle'
		public Keyword getBundleKeyword_1() { return cBundleKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//('extends' parentBundle=[EMappingBundle|QualifiedName])?
		public Group getGroup_3() { return cGroup_3; }

		//'extends'
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }

		//parentBundle=[EMappingBundle|QualifiedName]
		public Assignment getParentBundleAssignment_3_1() { return cParentBundleAssignment_3_1; }

		//[EMappingBundle|QualifiedName]
		public CrossReference getParentBundleEMappingBundleCrossReference_3_1_0() { return cParentBundleEMappingBundleCrossReference_3_1_0; }

		//QualifiedName
		public RuleCall getParentBundleEMappingBundleQualifiedNameParserRuleCall_3_1_0_1() { return cParentBundleEMappingBundleQualifiedNameParserRuleCall_3_1_0_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//('predefined' '{' predef+=EPredef (',' predef+=EPredef)* '}')?
		public Group getGroup_5() { return cGroup_5; }

		//'predefined'
		public Keyword getPredefinedKeyword_5_0() { return cPredefinedKeyword_5_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//predef+=EPredef
		public Assignment getPredefAssignment_5_2() { return cPredefAssignment_5_2; }

		//EPredef
		public RuleCall getPredefEPredefParserRuleCall_5_2_0() { return cPredefEPredefParserRuleCall_5_2_0; }

		//(',' predef+=EPredef)*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//','
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//predef+=EPredef
		public Assignment getPredefAssignment_5_3_1() { return cPredefAssignment_5_3_1; }

		//EPredef
		public RuleCall getPredefEPredefParserRuleCall_5_3_1_0() { return cPredefEPredefParserRuleCall_5_3_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }

		//entities+=EBundleEntity
		public Assignment getEntitiesAssignment_6() { return cEntitiesAssignment_6; }

		//EBundleEntity
		public RuleCall getEntitiesEBundleEntityParserRuleCall_6_0() { return cEntitiesEBundleEntityParserRuleCall_6_0; }

		//(',' entities+=EBundleEntity)*
		public Group getGroup_7() { return cGroup_7; }

		//','
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//entities+=EBundleEntity
		public Assignment getEntitiesAssignment_7_1() { return cEntitiesAssignment_7_1; }

		//EBundleEntity
		public RuleCall getEntitiesEBundleEntityParserRuleCall_7_1_0() { return cEntitiesEBundleEntityParserRuleCall_7_1_0; }

		//typeDefs+=ESQLTypeDef*
		public Assignment getTypeDefsAssignment_8() { return cTypeDefsAssignment_8; }

		//ESQLTypeDef
		public RuleCall getTypeDefsESQLTypeDefParserRuleCall_8_0() { return cTypeDefsESQLTypeDefParserRuleCall_8_0; }

		//('generator' '{' generators+=EGeneratorDef+ '}')?
		public Group getGroup_9() { return cGroup_9; }

		//'generator'
		public Keyword getGeneratorKeyword_9_0() { return cGeneratorKeyword_9_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }

		//generators+=EGeneratorDef+
		public Assignment getGeneratorsAssignment_9_2() { return cGeneratorsAssignment_9_2; }

		//EGeneratorDef
		public RuleCall getGeneratorsEGeneratorDefParserRuleCall_9_2_0() { return cGeneratorsEGeneratorDefParserRuleCall_9_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_9_3() { return cRightCurlyBracketKeyword_9_3; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }

		//('databases' databases+=STRING (',' databases+=STRING)*)?
		public Group getGroup_11() { return cGroup_11; }

		//'databases'
		public Keyword getDatabasesKeyword_11_0() { return cDatabasesKeyword_11_0; }

		//databases+=STRING
		public Assignment getDatabasesAssignment_11_1() { return cDatabasesAssignment_11_1; }

		//STRING
		public RuleCall getDatabasesSTRINGTerminalRuleCall_11_1_0() { return cDatabasesSTRINGTerminalRuleCall_11_1_0; }

		//(',' databases+=STRING)*
		public Group getGroup_11_2() { return cGroup_11_2; }

		//','
		public Keyword getCommaKeyword_11_2_0() { return cCommaKeyword_11_2_0; }

		//databases+=STRING
		public Assignment getDatabasesAssignment_11_2_1() { return cDatabasesAssignment_11_2_1; }

		//STRING
		public RuleCall getDatabasesSTRINGTerminalRuleCall_11_2_1_0() { return cDatabasesSTRINGTerminalRuleCall_11_2_1_0; }

		//('colsort' colSort=ColSort)?
		public Group getGroup_12() { return cGroup_12; }

		//'colsort'
		public Keyword getColsortKeyword_12_0() { return cColsortKeyword_12_0; }

		//colSort=ColSort
		public Assignment getColSortAssignment_12_1() { return cColSortAssignment_12_1; }

		//ColSort
		public RuleCall getColSortColSortEnumRuleCall_12_1_0() { return cColSortColSortEnumRuleCall_12_1_0; }
	}

	public class EPredefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EPredef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cEPredefSequenceAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cSequenceKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cNameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cNameAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cEPredefTableAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cTableKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		
		//EPredef:
		//	{EPredefSequence} 'sequence' name=STRING | {EPredefTable} 'table' name=STRING;
		@Override public ParserRule getRule() { return rule; }

		//{EPredefSequence} 'sequence' name=STRING | {EPredefTable} 'table' name=STRING
		public Alternatives getAlternatives() { return cAlternatives; }

		//{EPredefSequence} 'sequence' name=STRING
		public Group getGroup_0() { return cGroup_0; }

		//{EPredefSequence}
		public Action getEPredefSequenceAction_0_0() { return cEPredefSequenceAction_0_0; }

		//'sequence'
		public Keyword getSequenceKeyword_0_1() { return cSequenceKeyword_0_1; }

		//name=STRING
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_2_0() { return cNameSTRINGTerminalRuleCall_0_2_0; }

		//{EPredefTable} 'table' name=STRING
		public Group getGroup_1() { return cGroup_1; }

		//{EPredefTable}
		public Action getEPredefTableAction_1_0() { return cEPredefTableAction_1_0; }

		//'table'
		public Keyword getTableKeyword_1_1() { return cTableKeyword_1_1; }

		//name=STRING
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_2_0() { return cNameSTRINGTerminalRuleCall_1_2_0; }
	}

	public class EGeneratorDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EGeneratorDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cParametersAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cParametersEGeneratorConfigValueParserRuleCall_1_1_0 = (RuleCall)cParametersAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//EGeneratorDef:
		//	name=ID ('{'
		//	parameters+=EGeneratorConfigValue+
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID ('{' parameters+=EGeneratorConfigValue+ '}')?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//('{' parameters+=EGeneratorConfigValue+ '}')?
		public Group getGroup_1() { return cGroup_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }

		//parameters+=EGeneratorConfigValue+
		public Assignment getParametersAssignment_1_1() { return cParametersAssignment_1_1; }

		//EGeneratorConfigValue
		public RuleCall getParametersEGeneratorConfigValueParserRuleCall_1_1_0() { return cParametersEGeneratorConfigValueParserRuleCall_1_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}

	public class EGeneratorConfigValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EGeneratorConfigValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyIDTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cSimpleValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cSimpleValueSTRINGTerminalRuleCall_2_0_0 = (RuleCall)cSimpleValueAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cChildrenAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cChildrenEGeneratorConfigValueParserRuleCall_2_1_1_0 = (RuleCall)cChildrenAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		
		//EGeneratorConfigValue:
		//	key=ID ':' (simpleValue=STRING | '{'
		//	children+=EGeneratorConfigValue+
		//	'}');
		@Override public ParserRule getRule() { return rule; }

		//key=ID ':' (simpleValue=STRING | '{' children+=EGeneratorConfigValue+ '}')
		public Group getGroup() { return cGroup; }

		//key=ID
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//ID
		public RuleCall getKeyIDTerminalRuleCall_0_0() { return cKeyIDTerminalRuleCall_0_0; }

		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//(simpleValue=STRING | '{' children+=EGeneratorConfigValue+ '}')
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//simpleValue=STRING
		public Assignment getSimpleValueAssignment_2_0() { return cSimpleValueAssignment_2_0; }

		//STRING
		public RuleCall getSimpleValueSTRINGTerminalRuleCall_2_0_0() { return cSimpleValueSTRINGTerminalRuleCall_2_0_0; }

		//'{' children+=EGeneratorConfigValue+ '}'
		public Group getGroup_2_1() { return cGroup_2_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1_0() { return cLeftCurlyBracketKeyword_2_1_0; }

		//children+=EGeneratorConfigValue+
		public Assignment getChildrenAssignment_2_1_1() { return cChildrenAssignment_2_1_1; }

		//EGeneratorConfigValue
		public RuleCall getChildrenEGeneratorConfigValueParserRuleCall_2_1_1_0() { return cChildrenEGeneratorConfigValueParserRuleCall_2_1_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_2_1_2() { return cRightCurlyBracketKeyword_2_1_2; }
	}

	public class EBundleEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EBundleEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEntityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cEntityEMappingEntityCrossReference_0_0 = (CrossReference)cEntityAssignment_0.eContents().get(0);
		private final RuleCall cEntityEMappingEntityIDTerminalRuleCall_0_0_1 = (RuleCall)cEntityEMappingEntityCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cPkConstraintKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cPkConstraintNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cPkConstraintNameSTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cPkConstraintNameAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Assignment cFkConstraintsAssignment_1_2_0 = (Assignment)cGroup_1_2.eContents().get(0);
		private final RuleCall cFkConstraintsEFkConstraintParserRuleCall_1_2_0_0 = (RuleCall)cFkConstraintsAssignment_1_2_0.eContents().get(0);
		private final Group cGroup_1_2_1 = (Group)cGroup_1_2.eContents().get(1);
		private final Keyword cCommaKeyword_1_2_1_0 = (Keyword)cGroup_1_2_1.eContents().get(0);
		private final Assignment cFkConstraintsAssignment_1_2_1_1 = (Assignment)cGroup_1_2_1.eContents().get(1);
		private final RuleCall cFkConstraintsEFkConstraintParserRuleCall_1_2_1_1_0 = (RuleCall)cFkConstraintsAssignment_1_2_1_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Assignment cUniqueContraintsAssignment_1_3_0 = (Assignment)cGroup_1_3.eContents().get(0);
		private final RuleCall cUniqueContraintsEUniqueConstraintParserRuleCall_1_3_0_0 = (RuleCall)cUniqueContraintsAssignment_1_3_0.eContents().get(0);
		private final Group cGroup_1_3_1 = (Group)cGroup_1_3.eContents().get(1);
		private final Keyword cCommaKeyword_1_3_1_0 = (Keyword)cGroup_1_3_1.eContents().get(0);
		private final Assignment cUniqueContraintsAssignment_1_3_1_1 = (Assignment)cGroup_1_3_1.eContents().get(1);
		private final RuleCall cUniqueContraintsEUniqueConstraintParserRuleCall_1_3_1_1_0 = (RuleCall)cUniqueContraintsAssignment_1_3_1_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Assignment cIndicesAssignment_1_4_0 = (Assignment)cGroup_1_4.eContents().get(0);
		private final RuleCall cIndicesEIndexParserRuleCall_1_4_0_0 = (RuleCall)cIndicesAssignment_1_4_0.eContents().get(0);
		private final Group cGroup_1_4_1 = (Group)cGroup_1_4.eContents().get(1);
		private final Keyword cCommaKeyword_1_4_1_0 = (Keyword)cGroup_1_4_1.eContents().get(0);
		private final Assignment cIndicesAssignment_1_4_1_1 = (Assignment)cGroup_1_4_1.eContents().get(1);
		private final RuleCall cIndicesEIndexParserRuleCall_1_4_1_1_0 = (RuleCall)cIndicesAssignment_1_4_1_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Assignment cTypeDefsAssignment_1_5_0 = (Assignment)cGroup_1_5.eContents().get(0);
		private final RuleCall cTypeDefsESQLAttTypeDefParserRuleCall_1_5_0_0 = (RuleCall)cTypeDefsAssignment_1_5_0.eContents().get(0);
		private final Group cGroup_1_5_1 = (Group)cGroup_1_5.eContents().get(1);
		private final Keyword cCommaKeyword_1_5_1_0 = (Keyword)cGroup_1_5_1.eContents().get(0);
		private final Assignment cTypeDefsAssignment_1_5_1_1 = (Assignment)cGroup_1_5_1.eContents().get(1);
		private final RuleCall cTypeDefsESQLAttTypeDefParserRuleCall_1_5_1_1_0 = (RuleCall)cTypeDefsAssignment_1_5_1_1.eContents().get(0);
		private final Assignment cRestAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cRestERestServiceMappingParserRuleCall_1_6_0 = (RuleCall)cRestAssignment_1_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_7 = (Keyword)cGroup_1.eContents().get(7);
		
		//EBundleEntity:
		//	entity=[EMappingEntity] ('{' ('pk-constraint' pkConstraintName=STRING)? (fkConstraints+=EFkConstraint (','
		//	fkConstraints+=EFkConstraint)*)? (uniqueContraints+=EUniqueConstraint (',' uniqueContraints+=EUniqueConstraint)*)?
		//	(indices+=EIndex (',' indices+=EIndex)*)? (typeDefs+=ESQLAttTypeDef (',' typeDefs+=ESQLAttTypeDef)*)?
		//	rest=ERestServiceMapping?
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }

		//entity=[EMappingEntity] ('{' ('pk-constraint' pkConstraintName=STRING)? (fkConstraints+=EFkConstraint (','
		//fkConstraints+=EFkConstraint)*)? (uniqueContraints+=EUniqueConstraint (',' uniqueContraints+=EUniqueConstraint)*)?
		//(indices+=EIndex (',' indices+=EIndex)*)? (typeDefs+=ESQLAttTypeDef (',' typeDefs+=ESQLAttTypeDef)*)?
		//rest=ERestServiceMapping? '}')?
		public Group getGroup() { return cGroup; }

		//entity=[EMappingEntity]
		public Assignment getEntityAssignment_0() { return cEntityAssignment_0; }

		//[EMappingEntity]
		public CrossReference getEntityEMappingEntityCrossReference_0_0() { return cEntityEMappingEntityCrossReference_0_0; }

		//ID
		public RuleCall getEntityEMappingEntityIDTerminalRuleCall_0_0_1() { return cEntityEMappingEntityIDTerminalRuleCall_0_0_1; }

		//('{' ('pk-constraint' pkConstraintName=STRING)? (fkConstraints+=EFkConstraint (',' fkConstraints+=EFkConstraint)*)?
		//(uniqueContraints+=EUniqueConstraint (',' uniqueContraints+=EUniqueConstraint)*)? (indices+=EIndex (','
		//indices+=EIndex)*)? (typeDefs+=ESQLAttTypeDef (',' typeDefs+=ESQLAttTypeDef)*)? rest=ERestServiceMapping? '}')?
		public Group getGroup_1() { return cGroup_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }

		//('pk-constraint' pkConstraintName=STRING)?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//'pk-constraint'
		public Keyword getPkConstraintKeyword_1_1_0() { return cPkConstraintKeyword_1_1_0; }

		//pkConstraintName=STRING
		public Assignment getPkConstraintNameAssignment_1_1_1() { return cPkConstraintNameAssignment_1_1_1; }

		//STRING
		public RuleCall getPkConstraintNameSTRINGTerminalRuleCall_1_1_1_0() { return cPkConstraintNameSTRINGTerminalRuleCall_1_1_1_0; }

		//(fkConstraints+=EFkConstraint (',' fkConstraints+=EFkConstraint)*)?
		public Group getGroup_1_2() { return cGroup_1_2; }

		//fkConstraints+=EFkConstraint
		public Assignment getFkConstraintsAssignment_1_2_0() { return cFkConstraintsAssignment_1_2_0; }

		//EFkConstraint
		public RuleCall getFkConstraintsEFkConstraintParserRuleCall_1_2_0_0() { return cFkConstraintsEFkConstraintParserRuleCall_1_2_0_0; }

		//(',' fkConstraints+=EFkConstraint)*
		public Group getGroup_1_2_1() { return cGroup_1_2_1; }

		//','
		public Keyword getCommaKeyword_1_2_1_0() { return cCommaKeyword_1_2_1_0; }

		//fkConstraints+=EFkConstraint
		public Assignment getFkConstraintsAssignment_1_2_1_1() { return cFkConstraintsAssignment_1_2_1_1; }

		//EFkConstraint
		public RuleCall getFkConstraintsEFkConstraintParserRuleCall_1_2_1_1_0() { return cFkConstraintsEFkConstraintParserRuleCall_1_2_1_1_0; }

		//(uniqueContraints+=EUniqueConstraint (',' uniqueContraints+=EUniqueConstraint)*)?
		public Group getGroup_1_3() { return cGroup_1_3; }

		//uniqueContraints+=EUniqueConstraint
		public Assignment getUniqueContraintsAssignment_1_3_0() { return cUniqueContraintsAssignment_1_3_0; }

		//EUniqueConstraint
		public RuleCall getUniqueContraintsEUniqueConstraintParserRuleCall_1_3_0_0() { return cUniqueContraintsEUniqueConstraintParserRuleCall_1_3_0_0; }

		//(',' uniqueContraints+=EUniqueConstraint)*
		public Group getGroup_1_3_1() { return cGroup_1_3_1; }

		//','
		public Keyword getCommaKeyword_1_3_1_0() { return cCommaKeyword_1_3_1_0; }

		//uniqueContraints+=EUniqueConstraint
		public Assignment getUniqueContraintsAssignment_1_3_1_1() { return cUniqueContraintsAssignment_1_3_1_1; }

		//EUniqueConstraint
		public RuleCall getUniqueContraintsEUniqueConstraintParserRuleCall_1_3_1_1_0() { return cUniqueContraintsEUniqueConstraintParserRuleCall_1_3_1_1_0; }

		//(indices+=EIndex (',' indices+=EIndex)*)?
		public Group getGroup_1_4() { return cGroup_1_4; }

		//indices+=EIndex
		public Assignment getIndicesAssignment_1_4_0() { return cIndicesAssignment_1_4_0; }

		//EIndex
		public RuleCall getIndicesEIndexParserRuleCall_1_4_0_0() { return cIndicesEIndexParserRuleCall_1_4_0_0; }

		//(',' indices+=EIndex)*
		public Group getGroup_1_4_1() { return cGroup_1_4_1; }

		//','
		public Keyword getCommaKeyword_1_4_1_0() { return cCommaKeyword_1_4_1_0; }

		//indices+=EIndex
		public Assignment getIndicesAssignment_1_4_1_1() { return cIndicesAssignment_1_4_1_1; }

		//EIndex
		public RuleCall getIndicesEIndexParserRuleCall_1_4_1_1_0() { return cIndicesEIndexParserRuleCall_1_4_1_1_0; }

		//(typeDefs+=ESQLAttTypeDef (',' typeDefs+=ESQLAttTypeDef)*)?
		public Group getGroup_1_5() { return cGroup_1_5; }

		//typeDefs+=ESQLAttTypeDef
		public Assignment getTypeDefsAssignment_1_5_0() { return cTypeDefsAssignment_1_5_0; }

		//ESQLAttTypeDef
		public RuleCall getTypeDefsESQLAttTypeDefParserRuleCall_1_5_0_0() { return cTypeDefsESQLAttTypeDefParserRuleCall_1_5_0_0; }

		//(',' typeDefs+=ESQLAttTypeDef)*
		public Group getGroup_1_5_1() { return cGroup_1_5_1; }

		//','
		public Keyword getCommaKeyword_1_5_1_0() { return cCommaKeyword_1_5_1_0; }

		//typeDefs+=ESQLAttTypeDef
		public Assignment getTypeDefsAssignment_1_5_1_1() { return cTypeDefsAssignment_1_5_1_1; }

		//ESQLAttTypeDef
		public RuleCall getTypeDefsESQLAttTypeDefParserRuleCall_1_5_1_1_0() { return cTypeDefsESQLAttTypeDefParserRuleCall_1_5_1_1_0; }

		//rest=ERestServiceMapping?
		public Assignment getRestAssignment_1_6() { return cRestAssignment_1_6; }

		//ERestServiceMapping
		public RuleCall getRestERestServiceMappingParserRuleCall_1_6_0() { return cRestERestServiceMappingParserRuleCall_1_6_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_1_7() { return cRightCurlyBracketKeyword_1_7; }
	}

	public class EIndexElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EIndex");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndexKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAttributesEAttributeCrossReference_3_0 = (CrossReference)cAttributesAssignment_3.eContents().get(0);
		private final RuleCall cAttributesEAttributeQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cAttributesEAttributeCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cAttributesEAttributeCrossReference_4_1_0 = (CrossReference)cAttributesAssignment_4_1.eContents().get(0);
		private final RuleCall cAttributesEAttributeQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cAttributesEAttributeCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//EIndex:
		//	'index' name=STRING '(' attributes+=[EAttribute|QualifiedName] (',' attributes+=[EAttribute|QualifiedName])* ')';
		@Override public ParserRule getRule() { return rule; }

		//'index' name=STRING '(' attributes+=[EAttribute|QualifiedName] (',' attributes+=[EAttribute|QualifiedName])* ')'
		public Group getGroup() { return cGroup; }

		//'index'
		public Keyword getIndexKeyword_0() { return cIndexKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//attributes+=[EAttribute|QualifiedName]
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//[EAttribute|QualifiedName]
		public CrossReference getAttributesEAttributeCrossReference_3_0() { return cAttributesEAttributeCrossReference_3_0; }

		//QualifiedName
		public RuleCall getAttributesEAttributeQualifiedNameParserRuleCall_3_0_1() { return cAttributesEAttributeQualifiedNameParserRuleCall_3_0_1; }

		//(',' attributes+=[EAttribute|QualifiedName])*
		public Group getGroup_4() { return cGroup_4; }

		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//attributes+=[EAttribute|QualifiedName]
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//[EAttribute|QualifiedName]
		public CrossReference getAttributesEAttributeCrossReference_4_1_0() { return cAttributesEAttributeCrossReference_4_1_0; }

		//QualifiedName
		public RuleCall getAttributesEAttributeQualifiedNameParserRuleCall_4_1_0_1() { return cAttributesEAttributeQualifiedNameParserRuleCall_4_1_0_1; }

		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class EFkConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EFkConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFkConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAttributeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributeEAttributeCrossReference_1_0 = (CrossReference)cAttributeAssignment_1.eContents().get(0);
		private final RuleCall cAttributeEAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cAttributeEAttributeCrossReference_1_0.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//EFkConstraint:
		//	'fk-constraint' attribute=[EAttribute|QualifiedName] name=STRING;
		@Override public ParserRule getRule() { return rule; }

		//'fk-constraint' attribute=[EAttribute|QualifiedName] name=STRING
		public Group getGroup() { return cGroup; }

		//'fk-constraint'
		public Keyword getFkConstraintKeyword_0() { return cFkConstraintKeyword_0; }

		//attribute=[EAttribute|QualifiedName]
		public Assignment getAttributeAssignment_1() { return cAttributeAssignment_1; }

		//[EAttribute|QualifiedName]
		public CrossReference getAttributeEAttributeCrossReference_1_0() { return cAttributeEAttributeCrossReference_1_0; }

		//QualifiedName
		public RuleCall getAttributeEAttributeQualifiedNameParserRuleCall_1_0_1() { return cAttributeEAttributeQualifiedNameParserRuleCall_1_0_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
	}

	public class EUniqueConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EUniqueConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUniqueConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAttributesEAttributeCrossReference_3_0 = (CrossReference)cAttributesAssignment_3.eContents().get(0);
		private final RuleCall cAttributesEAttributeQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cAttributesEAttributeCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cAttributesEAttributeCrossReference_4_1_0 = (CrossReference)cAttributesAssignment_4_1.eContents().get(0);
		private final RuleCall cAttributesEAttributeQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cAttributesEAttributeCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//EUniqueConstraint:
		//	'unique-constraint' name=STRING '(' attributes+=[EAttribute|QualifiedName] (','
		//	attributes+=[EAttribute|QualifiedName])* ')';
		@Override public ParserRule getRule() { return rule; }

		//'unique-constraint' name=STRING '(' attributes+=[EAttribute|QualifiedName] (',' attributes+=[EAttribute|QualifiedName])*
		//')'
		public Group getGroup() { return cGroup; }

		//'unique-constraint'
		public Keyword getUniqueConstraintKeyword_0() { return cUniqueConstraintKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//attributes+=[EAttribute|QualifiedName]
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//[EAttribute|QualifiedName]
		public CrossReference getAttributesEAttributeCrossReference_3_0() { return cAttributesEAttributeCrossReference_3_0; }

		//QualifiedName
		public RuleCall getAttributesEAttributeQualifiedNameParserRuleCall_3_0_1() { return cAttributesEAttributeQualifiedNameParserRuleCall_3_0_1; }

		//(',' attributes+=[EAttribute|QualifiedName])*
		public Group getGroup_4() { return cGroup_4; }

		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//attributes+=[EAttribute|QualifiedName]
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//[EAttribute|QualifiedName]
		public CrossReference getAttributesEAttributeCrossReference_4_1_0() { return cAttributesEAttributeCrossReference_4_1_0; }

		//QualifiedName
		public RuleCall getAttributesEAttributeQualifiedNameParserRuleCall_4_1_0_1() { return cAttributesEAttributeQualifiedNameParserRuleCall_4_1_0_1; }

		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class ESQLAttTypeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ESQLAttTypeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSqlTypeDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAttributeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributeEAttributeCrossReference_1_0 = (CrossReference)cAttributeAssignment_1.eContents().get(0);
		private final RuleCall cAttributeEAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cAttributeEAttributeCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDbTypesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDbTypesESQLDbTypeParserRuleCall_3_0 = (RuleCall)cDbTypesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDbTypesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDbTypesESQLDbTypeParserRuleCall_4_1_0 = (RuleCall)cDbTypesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ESQLAttTypeDef:
		//	"sql-type-def" attribute=[EAttribute|QualifiedName] '{' dbTypes+=ESQLDbType (',' dbTypes+=ESQLDbType)* '}';
		@Override public ParserRule getRule() { return rule; }

		//"sql-type-def" attribute=[EAttribute|QualifiedName] '{' dbTypes+=ESQLDbType (',' dbTypes+=ESQLDbType)* '}'
		public Group getGroup() { return cGroup; }

		//"sql-type-def"
		public Keyword getSqlTypeDefKeyword_0() { return cSqlTypeDefKeyword_0; }

		//attribute=[EAttribute|QualifiedName]
		public Assignment getAttributeAssignment_1() { return cAttributeAssignment_1; }

		//[EAttribute|QualifiedName]
		public CrossReference getAttributeEAttributeCrossReference_1_0() { return cAttributeEAttributeCrossReference_1_0; }

		//QualifiedName
		public RuleCall getAttributeEAttributeQualifiedNameParserRuleCall_1_0_1() { return cAttributeEAttributeQualifiedNameParserRuleCall_1_0_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//dbTypes+=ESQLDbType
		public Assignment getDbTypesAssignment_3() { return cDbTypesAssignment_3; }

		//ESQLDbType
		public RuleCall getDbTypesESQLDbTypeParserRuleCall_3_0() { return cDbTypesESQLDbTypeParserRuleCall_3_0; }

		//(',' dbTypes+=ESQLDbType)*
		public Group getGroup_4() { return cGroup_4; }

		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//dbTypes+=ESQLDbType
		public Assignment getDbTypesAssignment_4_1() { return cDbTypesAssignment_4_1; }

		//ESQLDbType
		public RuleCall getDbTypesESQLDbTypeParserRuleCall_4_1_0() { return cDbTypesESQLDbTypeParserRuleCall_4_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ESQLTypeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ESQLTypeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSqlTypeDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEtypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEtypeETypeParserRuleCall_1_0 = (RuleCall)cEtypeAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDbTypesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDbTypesESQLDbTypeParserRuleCall_3_0 = (RuleCall)cDbTypesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDbTypesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDbTypesESQLDbTypeParserRuleCall_4_1_0 = (RuleCall)cDbTypesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ESQLTypeDef:
		//	"sql-type-def" etype=EType '{' dbTypes+=ESQLDbType (',' dbTypes+=ESQLDbType)* '}';
		@Override public ParserRule getRule() { return rule; }

		//"sql-type-def" etype=EType '{' dbTypes+=ESQLDbType (',' dbTypes+=ESQLDbType)* '}'
		public Group getGroup() { return cGroup; }

		//"sql-type-def"
		public Keyword getSqlTypeDefKeyword_0() { return cSqlTypeDefKeyword_0; }

		//etype=EType
		public Assignment getEtypeAssignment_1() { return cEtypeAssignment_1; }

		//EType
		public RuleCall getEtypeETypeParserRuleCall_1_0() { return cEtypeETypeParserRuleCall_1_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//dbTypes+=ESQLDbType
		public Assignment getDbTypesAssignment_3() { return cDbTypesAssignment_3; }

		//ESQLDbType
		public RuleCall getDbTypesESQLDbTypeParserRuleCall_3_0() { return cDbTypesESQLDbTypeParserRuleCall_3_0; }

		//(',' dbTypes+=ESQLDbType)*
		public Group getGroup_4() { return cGroup_4; }

		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//dbTypes+=ESQLDbType
		public Assignment getDbTypesAssignment_4_1() { return cDbTypesAssignment_4_1; }

		//ESQLDbType
		public RuleCall getDbTypesESQLDbTypeParserRuleCall_4_1_0() { return cDbTypesESQLDbTypeParserRuleCall_4_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ESQLDbTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ESQLDbType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cDbTypeAlternatives_0_0 = (Alternatives)cDbTypeAssignment_0.eContents().get(0);
		private final Keyword cDbTypeDefaultKeyword_0_0_0 = (Keyword)cDbTypeAlternatives_0_0.eContents().get(0);
		private final RuleCall cDbTypeSTRINGTerminalRuleCall_0_0_1 = (RuleCall)cDbTypeAlternatives_0_0.eContents().get(1);
		private final Assignment cSqlTypeDefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSqlTypeDefSTRINGTerminalRuleCall_1_0 = (RuleCall)cSqlTypeDefAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSizeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSizeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSizeSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cSizeAssignment_2_1.eContents().get(0);
		
		//ESQLDbType:
		//	dbType=('default' | STRING) sqlTypeDef=STRING ('size' size=STRING)?;
		@Override public ParserRule getRule() { return rule; }

		//dbType=('default' | STRING) sqlTypeDef=STRING ('size' size=STRING)?
		public Group getGroup() { return cGroup; }

		//dbType=('default' | STRING)
		public Assignment getDbTypeAssignment_0() { return cDbTypeAssignment_0; }

		//('default' | STRING)
		public Alternatives getDbTypeAlternatives_0_0() { return cDbTypeAlternatives_0_0; }

		//'default'
		public Keyword getDbTypeDefaultKeyword_0_0_0() { return cDbTypeDefaultKeyword_0_0_0; }

		//STRING
		public RuleCall getDbTypeSTRINGTerminalRuleCall_0_0_1() { return cDbTypeSTRINGTerminalRuleCall_0_0_1; }

		//sqlTypeDef=STRING
		public Assignment getSqlTypeDefAssignment_1() { return cSqlTypeDefAssignment_1; }

		//STRING
		public RuleCall getSqlTypeDefSTRINGTerminalRuleCall_1_0() { return cSqlTypeDefSTRINGTerminalRuleCall_1_0; }

		//('size' size=STRING)?
		public Group getGroup_2() { return cGroup_2; }

		//'size'
		public Keyword getSizeKeyword_2_0() { return cSizeKeyword_2_0; }

		//size=STRING
		public Assignment getSizeAssignment_2_1() { return cSizeAssignment_2_1; }

		//STRING
		public RuleCall getSizeSTRINGTerminalRuleCall_2_1_0() { return cSizeSTRINGTerminalRuleCall_2_1_0; }
	}

	public class ERestServiceMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ERestServiceMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWebserviceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cERestServiceMappingAction_1 = (Action)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cServiceMethodsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cServiceMethodsENamedServiceQueryParserRuleCall_2_1_0 = (RuleCall)cServiceMethodsAssignment_2_1.eContents().get(0);
		private final Assignment cCustomServiceMethodsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cCustomServiceMethodsECustomServiceMethodsParserRuleCall_2_2_0 = (RuleCall)cCustomServiceMethodsAssignment_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cRestAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cRestRestKeyword_3_0 = (Keyword)cRestAssignment_3.eContents().get(0);
		
		////EServiceMappingList:
		////	'webservice' packageName=QualifiedName '{'
		////		serviceDefinition += EServiceMapping*
		////	'}'
		////;
		//ERestServiceMapping:
		//	'webservice' {ERestServiceMapping} ('{'
		//	serviceMethods+=ENamedServiceQuery*
		//	customServiceMethods+=ECustomServiceMethods*
		//	'}')? rest?='rest';
		@Override public ParserRule getRule() { return rule; }

		//'webservice' {ERestServiceMapping} ('{' serviceMethods+=ENamedServiceQuery* customServiceMethods+=ECustomServiceMethods*
		//'}')? rest?='rest'
		public Group getGroup() { return cGroup; }

		//'webservice'
		public Keyword getWebserviceKeyword_0() { return cWebserviceKeyword_0; }

		//{ERestServiceMapping}
		public Action getERestServiceMappingAction_1() { return cERestServiceMappingAction_1; }

		//('{' serviceMethods+=ENamedServiceQuery* customServiceMethods+=ECustomServiceMethods* '}')?
		public Group getGroup_2() { return cGroup_2; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//serviceMethods+=ENamedServiceQuery*
		public Assignment getServiceMethodsAssignment_2_1() { return cServiceMethodsAssignment_2_1; }

		//ENamedServiceQuery
		public RuleCall getServiceMethodsENamedServiceQueryParserRuleCall_2_1_0() { return cServiceMethodsENamedServiceQueryParserRuleCall_2_1_0; }

		//customServiceMethods+=ECustomServiceMethods*
		public Assignment getCustomServiceMethodsAssignment_2_2() { return cCustomServiceMethodsAssignment_2_2; }

		//ECustomServiceMethods
		public RuleCall getCustomServiceMethodsECustomServiceMethodsParserRuleCall_2_2_0() { return cCustomServiceMethodsECustomServiceMethodsParserRuleCall_2_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }

		//rest?='rest'
		public Assignment getRestAssignment_3() { return cRestAssignment_3; }

		//'rest'
		public Keyword getRestRestKeyword_3_0() { return cRestRestKeyword_3_0; }
	}

	public class ENamedServiceQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ENamedServiceQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cQueryAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cQueryENamedQueryCrossReference_0_0 = (CrossReference)cQueryAssignment_0.eContents().get(0);
		private final RuleCall cQueryENamedQueryQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cQueryENamedQueryCrossReference_0_0.eContents().get(1);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathSTRINGTerminalRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParametersEServiceParamParserRuleCall_4_1_0 = (RuleCall)cParametersAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cGreedyKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cGreedyAttributePathListAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cGreedyAttributePathListEGreedyAttributePathParserRuleCall_4_2_2_0 = (RuleCall)cGreedyAttributePathListAssignment_4_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2_3 = (Keyword)cGroup_4_2.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//ENamedServiceQuery:
		//	query=[ENamedQuery|QualifiedName] 'as' name=ID path=STRING ('{'
		//	parameters+=EServiceParam* ('greedy' '{'
		//	greedyAttributePathList+=EGreedyAttributePath+
		//	'}')?
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }

		//query=[ENamedQuery|QualifiedName] 'as' name=ID path=STRING ('{' parameters+=EServiceParam* ('greedy' '{'
		//greedyAttributePathList+=EGreedyAttributePath+ '}')? '}')?
		public Group getGroup() { return cGroup; }

		//query=[ENamedQuery|QualifiedName]
		public Assignment getQueryAssignment_0() { return cQueryAssignment_0; }

		//[ENamedQuery|QualifiedName]
		public CrossReference getQueryENamedQueryCrossReference_0_0() { return cQueryENamedQueryCrossReference_0_0; }

		//QualifiedName
		public RuleCall getQueryENamedQueryQualifiedNameParserRuleCall_0_0_1() { return cQueryENamedQueryQualifiedNameParserRuleCall_0_0_1; }

		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//path=STRING
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }

		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_3_0() { return cPathSTRINGTerminalRuleCall_3_0; }

		//('{' parameters+=EServiceParam* ('greedy' '{' greedyAttributePathList+=EGreedyAttributePath+ '}')? '}')?
		public Group getGroup_4() { return cGroup_4; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//parameters+=EServiceParam*
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }

		//EServiceParam
		public RuleCall getParametersEServiceParamParserRuleCall_4_1_0() { return cParametersEServiceParamParserRuleCall_4_1_0; }

		//('greedy' '{' greedyAttributePathList+=EGreedyAttributePath+ '}')?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//'greedy'
		public Keyword getGreedyKeyword_4_2_0() { return cGreedyKeyword_4_2_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_2_1() { return cLeftCurlyBracketKeyword_4_2_1; }

		//greedyAttributePathList+=EGreedyAttributePath+
		public Assignment getGreedyAttributePathListAssignment_4_2_2() { return cGreedyAttributePathListAssignment_4_2_2; }

		//EGreedyAttributePath
		public RuleCall getGreedyAttributePathListEGreedyAttributePathParserRuleCall_4_2_2_0() { return cGreedyAttributePathListEGreedyAttributePathParserRuleCall_4_2_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4_2_3() { return cRightCurlyBracketKeyword_4_2_3; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
	}

	public class ECustomServiceMethodsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ECustomServiceMethods");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCustomKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathSTRINGTerminalRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParametersEParameterParserRuleCall_4_1_0 = (RuleCall)cParametersAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//ECustomServiceMethods:
		//	'custom' 'as' name=ID path=STRING ('{' parameters+=EParameter* '}')?;
		@Override public ParserRule getRule() { return rule; }

		//'custom' 'as' name=ID path=STRING ('{' parameters+=EParameter* '}')?
		public Group getGroup() { return cGroup; }

		//'custom'
		public Keyword getCustomKeyword_0() { return cCustomKeyword_0; }

		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//path=STRING
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }

		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_3_0() { return cPathSTRINGTerminalRuleCall_3_0; }

		//('{' parameters+=EParameter* '}')?
		public Group getGroup_4() { return cGroup_4; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//parameters+=EParameter*
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }

		//EParameter
		public RuleCall getParametersEParameterParserRuleCall_4_1_0() { return cParametersEParameterParserRuleCall_4_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }
	}

	public class EGreedyAttributePathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EGreedyAttributePath");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cGreedyAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cGreedyAttributeEAttributeCrossReference_0_0 = (CrossReference)cGreedyAttributeAssignment_0.eContents().get(0);
		private final RuleCall cGreedyAttributeEAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cGreedyAttributeEAttributeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSubPathListAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSubPathListEGreedyAttributePathParserRuleCall_1_1_0 = (RuleCall)cSubPathListAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//EGreedyAttributePath:
		//	greedyAttribute=[EAttribute|QualifiedName] ('{'
		//	subPathList+=EGreedyAttributePath+
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }

		//greedyAttribute=[EAttribute|QualifiedName] ('{' subPathList+=EGreedyAttributePath+ '}')?
		public Group getGroup() { return cGroup; }

		//greedyAttribute=[EAttribute|QualifiedName]
		public Assignment getGreedyAttributeAssignment_0() { return cGreedyAttributeAssignment_0; }

		//[EAttribute|QualifiedName]
		public CrossReference getGreedyAttributeEAttributeCrossReference_0_0() { return cGreedyAttributeEAttributeCrossReference_0_0; }

		//QualifiedName
		public RuleCall getGreedyAttributeEAttributeQualifiedNameParserRuleCall_0_0_1() { return cGreedyAttributeEAttributeQualifiedNameParserRuleCall_0_0_1; }

		//('{' subPathList+=EGreedyAttributePath+ '}')?
		public Group getGroup_1() { return cGroup_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }

		//subPathList+=EGreedyAttributePath+
		public Assignment getSubPathListAssignment_1_1() { return cSubPathListAssignment_1_1; }

		//EGreedyAttributePath
		public RuleCall getSubPathListEGreedyAttributePathParserRuleCall_1_1_0() { return cSubPathListEGreedyAttributePathParserRuleCall_1_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}

	public class EServiceParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EServiceParam");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEPathParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEQueryParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EServiceParam:
		//	EPathParam | EQueryParam;
		@Override public ParserRule getRule() { return rule; }

		//EPathParam | EQueryParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//EPathParam
		public RuleCall getEPathParamParserRuleCall_0() { return cEPathParamParserRuleCall_0; }

		//EQueryParam
		public RuleCall getEQueryParamParserRuleCall_1() { return cEQueryParamParserRuleCall_1; }
	}

	public class EPathParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EPathParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPathParamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParamAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cParamEParameterCrossReference_1_0 = (CrossReference)cParamAssignment_1.eContents().get(0);
		private final RuleCall cParamEParameterQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cParamEParameterCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNamedKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		
		//EPathParam:
		//	'path-param' param=[EParameter|QualifiedName] ('named' name=ID)?;
		@Override public ParserRule getRule() { return rule; }

		//'path-param' param=[EParameter|QualifiedName] ('named' name=ID)?
		public Group getGroup() { return cGroup; }

		//'path-param'
		public Keyword getPathParamKeyword_0() { return cPathParamKeyword_0; }

		//param=[EParameter|QualifiedName]
		public Assignment getParamAssignment_1() { return cParamAssignment_1; }

		//[EParameter|QualifiedName]
		public CrossReference getParamEParameterCrossReference_1_0() { return cParamEParameterCrossReference_1_0; }

		//QualifiedName
		public RuleCall getParamEParameterQualifiedNameParserRuleCall_1_0_1() { return cParamEParameterQualifiedNameParserRuleCall_1_0_1; }

		//('named' name=ID)?
		public Group getGroup_2() { return cGroup_2; }

		//'named'
		public Keyword getNamedKeyword_2_0() { return cNamedKeyword_2_0; }

		//name=ID
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_1_0() { return cNameIDTerminalRuleCall_2_1_0; }
	}

	public class EQueryParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EQueryParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQueryParamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParamAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cParamEParameterCrossReference_1_0 = (CrossReference)cParamAssignment_1.eContents().get(0);
		private final RuleCall cParamEParameterQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cParamEParameterCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNamedKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		
		//EQueryParam:
		//	'query-param' param=[EParameter|QualifiedName] ('named' name=ID)?;
		@Override public ParserRule getRule() { return rule; }

		//'query-param' param=[EParameter|QualifiedName] ('named' name=ID)?
		public Group getGroup() { return cGroup; }

		//'query-param'
		public Keyword getQueryParamKeyword_0() { return cQueryParamKeyword_0; }

		//param=[EParameter|QualifiedName]
		public Assignment getParamAssignment_1() { return cParamAssignment_1; }

		//[EParameter|QualifiedName]
		public CrossReference getParamEParameterCrossReference_1_0() { return cParamEParameterCrossReference_1_0; }

		//QualifiedName
		public RuleCall getParamEParameterQualifiedNameParserRuleCall_1_0_1() { return cParamEParameterQualifiedNameParserRuleCall_1_0_1; }

		//('named' name=ID)?
		public Group getGroup_2() { return cGroup_2; }

		//'named'
		public Keyword getNamedKeyword_2_0() { return cNamedKeyword_2_0; }

		//name=ID
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_1_0() { return cNameIDTerminalRuleCall_2_1_0; }
	}

	public class EMappingEntityDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EMappingEntityDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPackageAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPackagePackageDeclarationParserRuleCall_0_0 = (RuleCall)cPackageAssignment_0.eContents().get(0);
		private final Assignment cImportsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportsImportParserRuleCall_1_0 = (RuleCall)cImportsAssignment_1.eContents().get(0);
		private final Assignment cEntityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEntityEMappingEntityParserRuleCall_2_0 = (RuleCall)cEntityAssignment_2.eContents().get(0);
		
		//EMappingEntityDef:
		//	package=PackageDeclaration
		//	imports+=Import*
		//	entity=EMappingEntity;
		@Override public ParserRule getRule() { return rule; }

		//package=PackageDeclaration imports+=Import* entity=EMappingEntity
		public Group getGroup() { return cGroup; }

		//package=PackageDeclaration
		public Assignment getPackageAssignment_0() { return cPackageAssignment_0; }

		//PackageDeclaration
		public RuleCall getPackagePackageDeclarationParserRuleCall_0_0() { return cPackagePackageDeclarationParserRuleCall_0_0; }

		//imports+=Import*
		public Assignment getImportsAssignment_1() { return cImportsAssignment_1; }

		//Import
		public RuleCall getImportsImportParserRuleCall_1_0() { return cImportsImportParserRuleCall_1_0; }

		//entity=EMappingEntity
		public Assignment getEntityAssignment_2() { return cEntityAssignment_2; }

		//EMappingEntity
		public RuleCall getEntityEMappingEntityParserRuleCall_2_0() { return cEntityEMappingEntityParserRuleCall_2_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cImportedNamespaceAlternatives_1_0 = (Alternatives)cImportedNamespaceAssignment_1.eContents().get(0);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0 = (RuleCall)cImportedNamespaceAlternatives_1_0.eContents().get(0);
		private final RuleCall cImportedNamespaceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cImportedNamespaceAlternatives_1_0.eContents().get(1);
		
		//Import:
		//	'import' importedNamespace=(QualifiedNameWithWildcard | QualifiedName);
		@Override public ParserRule getRule() { return rule; }

		//'import' importedNamespace=(QualifiedNameWithWildcard | QualifiedName)
		public Group getGroup() { return cGroup; }

		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=(QualifiedNameWithWildcard | QualifiedName)
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//(QualifiedNameWithWildcard | QualifiedName)
		public Alternatives getImportedNamespaceAlternatives_1_0() { return cImportedNamespaceAlternatives_1_0; }

		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0; }

		//QualifiedName
		public RuleCall getImportedNamespaceQualifiedNameParserRuleCall_1_0_1() { return cImportedNamespaceQualifiedNameParserRuleCall_1_0_1; }
	}

	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//PackageDeclaration:
		//	'package' name=QualifiedName ';';
		@Override public ParserRule getRule() { return rule; }

		//'package' name=QualifiedName ';'
		public Group getGroup() { return cGroup; }

		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class FQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.FQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//FQN:
		//	ID (=> '.' ID)*;
		@Override public ParserRule getRule() { return rule; }

		//ID (=> '.' ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//(=> '.' ID)*
		public Group getGroup_1() { return cGroup_1; }

		//=> '.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class EMappingEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EMappingEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cAbstractAbstractKeyword_0_0 = (Keyword)cAbstractAssignment_0.eContents().get(0);
		private final Keyword cEntityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cExtensionTypeAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Alternatives cExtensionTypeAlternatives_3_0_0 = (Alternatives)cExtensionTypeAssignment_3_0.eContents().get(0);
		private final Keyword cExtensionTypeExtendsKeyword_3_0_0_0 = (Keyword)cExtensionTypeAlternatives_3_0_0.eContents().get(0);
		private final Keyword cExtensionTypeDerivedKeyword_3_0_0_1 = (Keyword)cExtensionTypeAlternatives_3_0_0.eContents().get(1);
		private final Assignment cParentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cParentEMappingEntityCrossReference_3_1_0 = (CrossReference)cParentAssignment_3_1.eContents().get(0);
		private final RuleCall cParentEMappingEntityQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cParentEMappingEntityCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEtypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEtypeETypeParserRuleCall_5_0 = (RuleCall)cEtypeAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAttributesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cAttributesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cAttributesEAttributeParserRuleCall_6_2_0 = (RuleCall)cAttributesAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cAttributesAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cAttributesEAttributeParserRuleCall_6_3_1_0 = (RuleCall)cAttributesAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cQueriesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Alternatives cAlternatives_7_2 = (Alternatives)cGroup_7.eContents().get(2);
		private final Assignment cNamedQueriesAssignment_7_2_0 = (Assignment)cAlternatives_7_2.eContents().get(0);
		private final RuleCall cNamedQueriesENamedQueryParserRuleCall_7_2_0_0 = (RuleCall)cNamedQueriesAssignment_7_2_0.eContents().get(0);
		private final Assignment cNamedCustomQueriesAssignment_7_2_1 = (Assignment)cAlternatives_7_2.eContents().get(1);
		private final RuleCall cNamedCustomQueriesENamedCustomQueryParserRuleCall_7_2_1_0 = (RuleCall)cNamedCustomQueriesAssignment_7_2_1.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Alternatives cAlternatives_7_3_1 = (Alternatives)cGroup_7_3.eContents().get(1);
		private final Assignment cNamedQueriesAssignment_7_3_1_0 = (Assignment)cAlternatives_7_3_1.eContents().get(0);
		private final RuleCall cNamedQueriesENamedQueryParserRuleCall_7_3_1_0_0 = (RuleCall)cNamedQueriesAssignment_7_3_1_0.eContents().get(0);
		private final Assignment cNamedCustomQueriesAssignment_7_3_1_1 = (Assignment)cAlternatives_7_3_1.eContents().get(1);
		private final RuleCall cNamedCustomQueriesENamedCustomQueryParserRuleCall_7_3_1_1_0 = (RuleCall)cNamedCustomQueriesAssignment_7_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cAsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cTableNameAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cTableNameIDTerminalRuleCall_9_1_0 = (RuleCall)cTableNameAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cDescriminatedbyKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cDescriminationColumnAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cDescriminationColumnIDTerminalRuleCall_10_1_0 = (RuleCall)cDescriminationColumnAssignment_10_1.eContents().get(0);
		
		//EMappingEntity:
		//	abstract?='abstract'? 'entity' name=ID (extensionType=('extends' | 'derived') parent=[EMappingEntity|QualifiedName])?
		//	'{'
		//	etype=EType ('attributes'
		//	'{'
		//	attributes+=EAttribute (',' attributes+=EAttribute)*
		//	'}')? ('queries'
		//	'{' (namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery) (',' (namedQueries+=ENamedQuery |
		//	namedCustomQueries+=ENamedCustomQuery))*
		//	'}')?
		//	'}' ('as' tableName=ID)? ('descriminatedby' descriminationColumn=ID)?;
		@Override public ParserRule getRule() { return rule; }

		//abstract?='abstract'? 'entity' name=ID (extensionType=('extends' | 'derived') parent=[EMappingEntity|QualifiedName])?
		//'{' etype=EType ('attributes' '{' attributes+=EAttribute (',' attributes+=EAttribute)* '}')? ('queries' '{'
		//(namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery) (',' (namedQueries+=ENamedQuery |
		//namedCustomQueries+=ENamedCustomQuery))* '}')? '}' ('as' tableName=ID)? ('descriminatedby' descriminationColumn=ID)?
		public Group getGroup() { return cGroup; }

		//abstract?='abstract'?
		public Assignment getAbstractAssignment_0() { return cAbstractAssignment_0; }

		//'abstract'
		public Keyword getAbstractAbstractKeyword_0_0() { return cAbstractAbstractKeyword_0_0; }

		//'entity'
		public Keyword getEntityKeyword_1() { return cEntityKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(extensionType=('extends' | 'derived') parent=[EMappingEntity|QualifiedName])?
		public Group getGroup_3() { return cGroup_3; }

		//extensionType=('extends' | 'derived')
		public Assignment getExtensionTypeAssignment_3_0() { return cExtensionTypeAssignment_3_0; }

		//('extends' | 'derived')
		public Alternatives getExtensionTypeAlternatives_3_0_0() { return cExtensionTypeAlternatives_3_0_0; }

		//'extends'
		public Keyword getExtensionTypeExtendsKeyword_3_0_0_0() { return cExtensionTypeExtendsKeyword_3_0_0_0; }

		//'derived'
		public Keyword getExtensionTypeDerivedKeyword_3_0_0_1() { return cExtensionTypeDerivedKeyword_3_0_0_1; }

		//parent=[EMappingEntity|QualifiedName]
		public Assignment getParentAssignment_3_1() { return cParentAssignment_3_1; }

		//[EMappingEntity|QualifiedName]
		public CrossReference getParentEMappingEntityCrossReference_3_1_0() { return cParentEMappingEntityCrossReference_3_1_0; }

		//QualifiedName
		public RuleCall getParentEMappingEntityQualifiedNameParserRuleCall_3_1_0_1() { return cParentEMappingEntityQualifiedNameParserRuleCall_3_1_0_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//etype=EType
		public Assignment getEtypeAssignment_5() { return cEtypeAssignment_5; }

		//EType
		public RuleCall getEtypeETypeParserRuleCall_5_0() { return cEtypeETypeParserRuleCall_5_0; }

		//('attributes' '{' attributes+=EAttribute (',' attributes+=EAttribute)* '}')?
		public Group getGroup_6() { return cGroup_6; }

		//'attributes'
		public Keyword getAttributesKeyword_6_0() { return cAttributesKeyword_6_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//attributes+=EAttribute
		public Assignment getAttributesAssignment_6_2() { return cAttributesAssignment_6_2; }

		//EAttribute
		public RuleCall getAttributesEAttributeParserRuleCall_6_2_0() { return cAttributesEAttributeParserRuleCall_6_2_0; }

		//(',' attributes+=EAttribute)*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//','
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//attributes+=EAttribute
		public Assignment getAttributesAssignment_6_3_1() { return cAttributesAssignment_6_3_1; }

		//EAttribute
		public RuleCall getAttributesEAttributeParserRuleCall_6_3_1_0() { return cAttributesEAttributeParserRuleCall_6_3_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }

		//('queries' '{' (namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery) (',' (namedQueries+=ENamedQuery |
		//namedCustomQueries+=ENamedCustomQuery))* '}')?
		public Group getGroup_7() { return cGroup_7; }

		//'queries'
		public Keyword getQueriesKeyword_7_0() { return cQueriesKeyword_7_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//(namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery)
		public Alternatives getAlternatives_7_2() { return cAlternatives_7_2; }

		//namedQueries+=ENamedQuery
		public Assignment getNamedQueriesAssignment_7_2_0() { return cNamedQueriesAssignment_7_2_0; }

		//ENamedQuery
		public RuleCall getNamedQueriesENamedQueryParserRuleCall_7_2_0_0() { return cNamedQueriesENamedQueryParserRuleCall_7_2_0_0; }

		//namedCustomQueries+=ENamedCustomQuery
		public Assignment getNamedCustomQueriesAssignment_7_2_1() { return cNamedCustomQueriesAssignment_7_2_1; }

		//ENamedCustomQuery
		public RuleCall getNamedCustomQueriesENamedCustomQueryParserRuleCall_7_2_1_0() { return cNamedCustomQueriesENamedCustomQueryParserRuleCall_7_2_1_0; }

		//(',' (namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery))*
		public Group getGroup_7_3() { return cGroup_7_3; }

		//','
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }

		//(namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery)
		public Alternatives getAlternatives_7_3_1() { return cAlternatives_7_3_1; }

		//namedQueries+=ENamedQuery
		public Assignment getNamedQueriesAssignment_7_3_1_0() { return cNamedQueriesAssignment_7_3_1_0; }

		//ENamedQuery
		public RuleCall getNamedQueriesENamedQueryParserRuleCall_7_3_1_0_0() { return cNamedQueriesENamedQueryParserRuleCall_7_3_1_0_0; }

		//namedCustomQueries+=ENamedCustomQuery
		public Assignment getNamedCustomQueriesAssignment_7_3_1_1() { return cNamedCustomQueriesAssignment_7_3_1_1; }

		//ENamedCustomQuery
		public RuleCall getNamedCustomQueriesENamedCustomQueryParserRuleCall_7_3_1_1_0() { return cNamedCustomQueriesENamedCustomQueryParserRuleCall_7_3_1_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }

		//('as' tableName=ID)?
		public Group getGroup_9() { return cGroup_9; }

		//'as'
		public Keyword getAsKeyword_9_0() { return cAsKeyword_9_0; }

		//tableName=ID
		public Assignment getTableNameAssignment_9_1() { return cTableNameAssignment_9_1; }

		//ID
		public RuleCall getTableNameIDTerminalRuleCall_9_1_0() { return cTableNameIDTerminalRuleCall_9_1_0; }

		//('descriminatedby' descriminationColumn=ID)?
		public Group getGroup_10() { return cGroup_10; }

		//'descriminatedby'
		public Keyword getDescriminatedbyKeyword_10_0() { return cDescriminatedbyKeyword_10_0; }

		//descriminationColumn=ID
		public Assignment getDescriminationColumnAssignment_10_1() { return cDescriminationColumnAssignment_10_1; }

		//ID
		public RuleCall getDescriminationColumnIDTerminalRuleCall_10_1_0() { return cDescriminationColumnIDTerminalRuleCall_10_1_0; }
	}

	public class EAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cPkAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cPkPrimarykeyKeyword_0_0_0 = (Keyword)cPkAssignment_0_0.eContents().get(0);
		private final Assignment cForcedFkAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cForcedFkForcedFkKeyword_0_1_0 = (Keyword)cForcedFkAssignment_0_1.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cColumnNameAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cColumnNameIDTerminalRuleCall_3_0_0_0 = (RuleCall)cColumnNameAssignment_3_0_0.eContents().get(0);
		private final Group cGroup_3_0_1 = (Group)cGroup_3_0.eContents().get(1);
		private final Keyword cGeneratedbyKeyword_3_0_1_0 = (Keyword)cGroup_3_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_0_1_1 = (Keyword)cGroup_3_0_1.eContents().get(1);
		private final Assignment cValueGeneratorsAssignment_3_0_1_2 = (Assignment)cGroup_3_0_1.eContents().get(2);
		private final RuleCall cValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_2_0 = (RuleCall)cValueGeneratorsAssignment_3_0_1_2.eContents().get(0);
		private final Group cGroup_3_0_1_3 = (Group)cGroup_3_0_1.eContents().get(3);
		private final Keyword cCommaKeyword_3_0_1_3_0 = (Keyword)cGroup_3_0_1_3.eContents().get(0);
		private final Assignment cValueGeneratorsAssignment_3_0_1_3_1 = (Assignment)cGroup_3_0_1_3.eContents().get(1);
		private final RuleCall cValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_3_1_0 = (RuleCall)cValueGeneratorsAssignment_3_0_1_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_0_1_4 = (Keyword)cGroup_3_0_1.eContents().get(4);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cResolvedAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final Keyword cResolvedResolveKeyword_3_1_0_0 = (Keyword)cResolvedAssignment_3_1_0.eContents().get(0);
		private final Assignment cQueryAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cQueryENamedQueryCrossReference_3_1_1_0 = (CrossReference)cQueryAssignment_3_1_1.eContents().get(0);
		private final RuleCall cQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1 = (RuleCall)cQueryENamedQueryCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Assignment cParametersAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cParametersIDTerminalRuleCall_3_1_3_0 = (RuleCall)cParametersAssignment_3_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_1_4 = (Keyword)cGroup_3_1.eContents().get(4);
		private final Group cGroup_3_1_5 = (Group)cGroup_3_1.eContents().get(5);
		private final Assignment cOppositeAssignment_3_1_5_0 = (Assignment)cGroup_3_1_5.eContents().get(0);
		private final CrossReference cOppositeEAttributeCrossReference_3_1_5_0_0 = (CrossReference)cOppositeAssignment_3_1_5_0.eContents().get(0);
		private final RuleCall cOppositeEAttributeQualifiedNameParserRuleCall_3_1_5_0_0_1 = (RuleCall)cOppositeEAttributeCrossReference_3_1_5_0_0.eContents().get(1);
		private final Keyword cOnKeyword_3_1_5_1 = (Keyword)cGroup_3_1_5.eContents().get(1);
		private final Assignment cRelationTableAssignment_3_1_5_2 = (Assignment)cGroup_3_1_5.eContents().get(2);
		private final RuleCall cRelationTableIDTerminalRuleCall_3_1_5_2_0 = (RuleCall)cRelationTableAssignment_3_1_5_2.eContents().get(0);
		private final Group cGroup_3_1_5_3 = (Group)cGroup_3_1_5.eContents().get(3);
		private final Keyword cFullStopKeyword_3_1_5_3_0 = (Keyword)cGroup_3_1_5_3.eContents().get(0);
		private final Assignment cRelationColumnAssignment_3_1_5_3_1 = (Assignment)cGroup_3_1_5_3.eContents().get(1);
		private final RuleCall cRelationColumnIDTerminalRuleCall_3_1_5_3_1_0 = (RuleCall)cRelationColumnAssignment_3_1_5_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSizeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSizeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSizeSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cSizeAssignment_4_1.eContents().get(0);
		
		//EAttribute:
		//	(pk?='primarykey'? | forcedFk?='forced-fk') name=ID '=>' (columnName=ID ('generatedby' '{'
		//	valueGenerators+=EValueGenerator (',' valueGenerators+=EValueGenerator)* '}')? | resolved?='resolve'
		//	query=[ENamedQuery|QualifiedName] '(' parameters+=ID ')' (opposite=[EAttribute|QualifiedName] 'on' relationTable=ID
		//	('.' relationColumn=ID)?)?) ('size' size=STRING)?;
		@Override public ParserRule getRule() { return rule; }

		//(pk?='primarykey'? | forcedFk?='forced-fk') name=ID '=>' (columnName=ID ('generatedby' '{'
		//valueGenerators+=EValueGenerator (',' valueGenerators+=EValueGenerator)* '}')? | resolved?='resolve'
		//query=[ENamedQuery|QualifiedName] '(' parameters+=ID ')' (opposite=[EAttribute|QualifiedName] 'on' relationTable=ID
		//('.' relationColumn=ID)?)?) ('size' size=STRING)?
		public Group getGroup() { return cGroup; }

		//(pk?='primarykey'? | forcedFk?='forced-fk')
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//pk?='primarykey'?
		public Assignment getPkAssignment_0_0() { return cPkAssignment_0_0; }

		//'primarykey'
		public Keyword getPkPrimarykeyKeyword_0_0_0() { return cPkPrimarykeyKeyword_0_0_0; }

		//forcedFk?='forced-fk'
		public Assignment getForcedFkAssignment_0_1() { return cForcedFkAssignment_0_1; }

		//'forced-fk'
		public Keyword getForcedFkForcedFkKeyword_0_1_0() { return cForcedFkForcedFkKeyword_0_1_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_2() { return cEqualsSignGreaterThanSignKeyword_2; }

		//(columnName=ID ('generatedby' '{' valueGenerators+=EValueGenerator (',' valueGenerators+=EValueGenerator)* '}')? |
		//resolved?='resolve' query=[ENamedQuery|QualifiedName] '(' parameters+=ID ')' (opposite=[EAttribute|QualifiedName] 'on'
		//relationTable=ID ('.' relationColumn=ID)?)?)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//columnName=ID ('generatedby' '{' valueGenerators+=EValueGenerator (',' valueGenerators+=EValueGenerator)* '}')?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//columnName=ID
		public Assignment getColumnNameAssignment_3_0_0() { return cColumnNameAssignment_3_0_0; }

		//ID
		public RuleCall getColumnNameIDTerminalRuleCall_3_0_0_0() { return cColumnNameIDTerminalRuleCall_3_0_0_0; }

		//('generatedby' '{' valueGenerators+=EValueGenerator (',' valueGenerators+=EValueGenerator)* '}')?
		public Group getGroup_3_0_1() { return cGroup_3_0_1; }

		//'generatedby'
		public Keyword getGeneratedbyKeyword_3_0_1_0() { return cGeneratedbyKeyword_3_0_1_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0_1_1() { return cLeftCurlyBracketKeyword_3_0_1_1; }

		//valueGenerators+=EValueGenerator
		public Assignment getValueGeneratorsAssignment_3_0_1_2() { return cValueGeneratorsAssignment_3_0_1_2; }

		//EValueGenerator
		public RuleCall getValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_2_0() { return cValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_2_0; }

		//(',' valueGenerators+=EValueGenerator)*
		public Group getGroup_3_0_1_3() { return cGroup_3_0_1_3; }

		//','
		public Keyword getCommaKeyword_3_0_1_3_0() { return cCommaKeyword_3_0_1_3_0; }

		//valueGenerators+=EValueGenerator
		public Assignment getValueGeneratorsAssignment_3_0_1_3_1() { return cValueGeneratorsAssignment_3_0_1_3_1; }

		//EValueGenerator
		public RuleCall getValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_3_1_0() { return cValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_3_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_3_0_1_4() { return cRightCurlyBracketKeyword_3_0_1_4; }

		//resolved?='resolve' query=[ENamedQuery|QualifiedName] '(' parameters+=ID ')' (opposite=[EAttribute|QualifiedName] 'on'
		//relationTable=ID ('.' relationColumn=ID)?)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//resolved?='resolve'
		public Assignment getResolvedAssignment_3_1_0() { return cResolvedAssignment_3_1_0; }

		//'resolve'
		public Keyword getResolvedResolveKeyword_3_1_0_0() { return cResolvedResolveKeyword_3_1_0_0; }

		//query=[ENamedQuery|QualifiedName]
		public Assignment getQueryAssignment_3_1_1() { return cQueryAssignment_3_1_1; }

		//[ENamedQuery|QualifiedName]
		public CrossReference getQueryENamedQueryCrossReference_3_1_1_0() { return cQueryENamedQueryCrossReference_3_1_1_0; }

		//QualifiedName
		public RuleCall getQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1() { return cQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1; }

		//'('
		public Keyword getLeftParenthesisKeyword_3_1_2() { return cLeftParenthesisKeyword_3_1_2; }

		//parameters+=ID
		public Assignment getParametersAssignment_3_1_3() { return cParametersAssignment_3_1_3; }

		//ID
		public RuleCall getParametersIDTerminalRuleCall_3_1_3_0() { return cParametersIDTerminalRuleCall_3_1_3_0; }

		//')'
		public Keyword getRightParenthesisKeyword_3_1_4() { return cRightParenthesisKeyword_3_1_4; }

		//(opposite=[EAttribute|QualifiedName] 'on' relationTable=ID ('.' relationColumn=ID)?)?
		public Group getGroup_3_1_5() { return cGroup_3_1_5; }

		//opposite=[EAttribute|QualifiedName]
		public Assignment getOppositeAssignment_3_1_5_0() { return cOppositeAssignment_3_1_5_0; }

		//[EAttribute|QualifiedName]
		public CrossReference getOppositeEAttributeCrossReference_3_1_5_0_0() { return cOppositeEAttributeCrossReference_3_1_5_0_0; }

		//QualifiedName
		public RuleCall getOppositeEAttributeQualifiedNameParserRuleCall_3_1_5_0_0_1() { return cOppositeEAttributeQualifiedNameParserRuleCall_3_1_5_0_0_1; }

		//'on'
		public Keyword getOnKeyword_3_1_5_1() { return cOnKeyword_3_1_5_1; }

		//relationTable=ID
		public Assignment getRelationTableAssignment_3_1_5_2() { return cRelationTableAssignment_3_1_5_2; }

		//ID
		public RuleCall getRelationTableIDTerminalRuleCall_3_1_5_2_0() { return cRelationTableIDTerminalRuleCall_3_1_5_2_0; }

		//('.' relationColumn=ID)?
		public Group getGroup_3_1_5_3() { return cGroup_3_1_5_3; }

		//'.'
		public Keyword getFullStopKeyword_3_1_5_3_0() { return cFullStopKeyword_3_1_5_3_0; }

		//relationColumn=ID
		public Assignment getRelationColumnAssignment_3_1_5_3_1() { return cRelationColumnAssignment_3_1_5_3_1; }

		//ID
		public RuleCall getRelationColumnIDTerminalRuleCall_3_1_5_3_1_0() { return cRelationColumnIDTerminalRuleCall_3_1_5_3_1_0; }

		//('size' size=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//'size'
		public Keyword getSizeKeyword_4_0() { return cSizeKeyword_4_0; }

		//size=STRING
		public Assignment getSizeAssignment_4_1() { return cSizeAssignment_4_1; }

		//STRING
		public RuleCall getSizeSTRINGTerminalRuleCall_4_1_0() { return cSizeSTRINGTerminalRuleCall_4_1_0; }
	}

	public class EValueGeneratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EValueGenerator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbTypeSTRINGTerminalRuleCall_0_0 = (RuleCall)cDbTypeAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cAutokeyAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cAutokeyAutokeyKeyword_1_0_0 = (Keyword)cAutokeyAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cQueryKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cQueryAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cQuerySTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cQueryAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Keyword cSeqnextKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cSequenceAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cSequenceSTRINGTerminalRuleCall_1_2_1_0 = (RuleCall)cSequenceAssignment_1_2_1.eContents().get(0);
		
		//EValueGenerator:
		//	dbType=STRING (autokey?='autokey' | 'query' query=STRING | 'seqnext' sequence=STRING);
		@Override public ParserRule getRule() { return rule; }

		//dbType=STRING (autokey?='autokey' | 'query' query=STRING | 'seqnext' sequence=STRING)
		public Group getGroup() { return cGroup; }

		//dbType=STRING
		public Assignment getDbTypeAssignment_0() { return cDbTypeAssignment_0; }

		//STRING
		public RuleCall getDbTypeSTRINGTerminalRuleCall_0_0() { return cDbTypeSTRINGTerminalRuleCall_0_0; }

		//(autokey?='autokey' | 'query' query=STRING | 'seqnext' sequence=STRING)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//autokey?='autokey'
		public Assignment getAutokeyAssignment_1_0() { return cAutokeyAssignment_1_0; }

		//'autokey'
		public Keyword getAutokeyAutokeyKeyword_1_0_0() { return cAutokeyAutokeyKeyword_1_0_0; }

		//'query' query=STRING
		public Group getGroup_1_1() { return cGroup_1_1; }

		//'query'
		public Keyword getQueryKeyword_1_1_0() { return cQueryKeyword_1_1_0; }

		//query=STRING
		public Assignment getQueryAssignment_1_1_1() { return cQueryAssignment_1_1_1; }

		//STRING
		public RuleCall getQuerySTRINGTerminalRuleCall_1_1_1_0() { return cQuerySTRINGTerminalRuleCall_1_1_1_0; }

		//'seqnext' sequence=STRING
		public Group getGroup_1_2() { return cGroup_1_2; }

		//'seqnext'
		public Keyword getSeqnextKeyword_1_2_0() { return cSeqnextKeyword_1_2_0; }

		//sequence=STRING
		public Assignment getSequenceAssignment_1_2_1() { return cSequenceAssignment_1_2_1; }

		//STRING
		public RuleCall getSequenceSTRINGTerminalRuleCall_1_2_1_0() { return cSequenceSTRINGTerminalRuleCall_1_2_1_0; }
	}

	public class ENamedQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ENamedQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReturnTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cReturnTypeReturnTypeEnumRuleCall_0_0 = (RuleCall)cReturnTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Assignment cParametersAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cParametersEParameterParserRuleCall_2_1_0_0 = (RuleCall)cParametersAssignment_2_1_0.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cGroup_2_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cParametersEParameterParserRuleCall_2_1_1_1_0 = (RuleCall)cParametersAssignment_2_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cQueriesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cQueriesEQueryParserRuleCall_4_0 = (RuleCall)cQueriesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cQueriesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cQueriesEQueryParserRuleCall_5_1_0 = (RuleCall)cQueriesAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ENamedQuery:
		//	returnType=ReturnType? name=ID ('(' (parameters+=EParameter (',' parameters+=EParameter)*)? ')')? '{'
		//	queries+=EQuery (',' queries+=EQuery)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//returnType=ReturnType? name=ID ('(' (parameters+=EParameter (',' parameters+=EParameter)*)? ')')? '{' queries+=EQuery
		//(',' queries+=EQuery)* '}'
		public Group getGroup() { return cGroup; }

		//returnType=ReturnType?
		public Assignment getReturnTypeAssignment_0() { return cReturnTypeAssignment_0; }

		//ReturnType
		public RuleCall getReturnTypeReturnTypeEnumRuleCall_0_0() { return cReturnTypeReturnTypeEnumRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//('(' (parameters+=EParameter (',' parameters+=EParameter)*)? ')')?
		public Group getGroup_2() { return cGroup_2; }

		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//(parameters+=EParameter (',' parameters+=EParameter)*)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//parameters+=EParameter
		public Assignment getParametersAssignment_2_1_0() { return cParametersAssignment_2_1_0; }

		//EParameter
		public RuleCall getParametersEParameterParserRuleCall_2_1_0_0() { return cParametersEParameterParserRuleCall_2_1_0_0; }

		//(',' parameters+=EParameter)*
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }

		//','
		public Keyword getCommaKeyword_2_1_1_0() { return cCommaKeyword_2_1_1_0; }

		//parameters+=EParameter
		public Assignment getParametersAssignment_2_1_1_1() { return cParametersAssignment_2_1_1_1; }

		//EParameter
		public RuleCall getParametersEParameterParserRuleCall_2_1_1_1_0() { return cParametersEParameterParserRuleCall_2_1_1_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//queries+=EQuery
		public Assignment getQueriesAssignment_4() { return cQueriesAssignment_4; }

		//EQuery
		public RuleCall getQueriesEQueryParserRuleCall_4_0() { return cQueriesEQueryParserRuleCall_4_0; }

		//(',' queries+=EQuery)*
		public Group getGroup_5() { return cGroup_5; }

		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//queries+=EQuery
		public Assignment getQueriesAssignment_5_1() { return cQueriesAssignment_5_1; }

		//EQuery
		public RuleCall getQueriesEQueryParserRuleCall_5_1_0() { return cQueriesEQueryParserRuleCall_5_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EPrimtiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EPrimtiveType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cIntKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cLongKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDoubleKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cFloatKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cBooleanKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final RuleCall cFQNParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//EPrimtiveType:
		//	'int' | 'long' | 'double' | 'float' | 'boolean' | FQN;
		@Override public ParserRule getRule() { return rule; }

		//'int' | 'long' | 'double' | 'float' | 'boolean' | FQN
		public Alternatives getAlternatives() { return cAlternatives; }

		//'int'
		public Keyword getIntKeyword_0() { return cIntKeyword_0; }

		//'long'
		public Keyword getLongKeyword_1() { return cLongKeyword_1; }

		//'double'
		public Keyword getDoubleKeyword_2() { return cDoubleKeyword_2; }

		//'float'
		public Keyword getFloatKeyword_3() { return cFloatKeyword_3; }

		//'boolean'
		public Keyword getBooleanKeyword_4() { return cBooleanKeyword_4; }

		//FQN
		public RuleCall getFQNParserRuleCall_5() { return cFQNParserRuleCall_5; }
	}

	public class EMapTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EMapType");
		private final Keyword cMapKeyword = (Keyword)rule.eContents().get(1);
		
		//EMapType:
		//	'map';
		@Override public ParserRule getRule() { return rule; }

		//'map'
		public Keyword getMapKeyword() { return cMapKeyword; }
	}

	public class ENamedCustomQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ENamedCustomQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cReturnTypeAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cReturnTypeEReturnTypeParserRuleCall_0_0_0 = (RuleCall)cReturnTypeAssignment_0_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Assignment cListAssignment_0_1_0 = (Assignment)cGroup_0_1.eContents().get(0);
		private final Keyword cListLeftSquareBracketKeyword_0_1_0_0 = (Keyword)cListAssignment_0_1_0.eContents().get(0);
		private final Assignment cReturnTypeAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cReturnTypeEReturnTypeParserRuleCall_0_1_1_0 = (RuleCall)cReturnTypeAssignment_0_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_0_1_2 = (Keyword)cGroup_0_1.eContents().get(2);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Assignment cParametersAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cParametersEParameterParserRuleCall_2_1_0_0 = (RuleCall)cParametersAssignment_2_1_0.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cGroup_2_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cParametersEParameterParserRuleCall_2_1_1_1_0 = (RuleCall)cParametersAssignment_2_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cQueriesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cQueriesECustomQueryParserRuleCall_4_0 = (RuleCall)cQueriesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cQueriesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cQueriesECustomQueryParserRuleCall_5_1_0 = (RuleCall)cQueriesAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ENamedCustomQuery:
		//	(returnType=EReturnType | list?='[' returnType=EReturnType ']') name=ID ('(' (parameters+=EParameter (','
		//	parameters+=EParameter)*)? ')')? '{'
		//	queries+=ECustomQuery (',' queries+=ECustomQuery)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//(returnType=EReturnType | list?='[' returnType=EReturnType ']') name=ID ('(' (parameters+=EParameter (','
		//parameters+=EParameter)*)? ')')? '{' queries+=ECustomQuery (',' queries+=ECustomQuery)* '}'
		public Group getGroup() { return cGroup; }

		//(returnType=EReturnType | list?='[' returnType=EReturnType ']')
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//returnType=EReturnType
		public Assignment getReturnTypeAssignment_0_0() { return cReturnTypeAssignment_0_0; }

		//EReturnType
		public RuleCall getReturnTypeEReturnTypeParserRuleCall_0_0_0() { return cReturnTypeEReturnTypeParserRuleCall_0_0_0; }

		//list?='[' returnType=EReturnType ']'
		public Group getGroup_0_1() { return cGroup_0_1; }

		//list?='['
		public Assignment getListAssignment_0_1_0() { return cListAssignment_0_1_0; }

		//'['
		public Keyword getListLeftSquareBracketKeyword_0_1_0_0() { return cListLeftSquareBracketKeyword_0_1_0_0; }

		//returnType=EReturnType
		public Assignment getReturnTypeAssignment_0_1_1() { return cReturnTypeAssignment_0_1_1; }

		//EReturnType
		public RuleCall getReturnTypeEReturnTypeParserRuleCall_0_1_1_0() { return cReturnTypeEReturnTypeParserRuleCall_0_1_1_0; }

		//']'
		public Keyword getRightSquareBracketKeyword_0_1_2() { return cRightSquareBracketKeyword_0_1_2; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//('(' (parameters+=EParameter (',' parameters+=EParameter)*)? ')')?
		public Group getGroup_2() { return cGroup_2; }

		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//(parameters+=EParameter (',' parameters+=EParameter)*)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//parameters+=EParameter
		public Assignment getParametersAssignment_2_1_0() { return cParametersAssignment_2_1_0; }

		//EParameter
		public RuleCall getParametersEParameterParserRuleCall_2_1_0_0() { return cParametersEParameterParserRuleCall_2_1_0_0; }

		//(',' parameters+=EParameter)*
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }

		//','
		public Keyword getCommaKeyword_2_1_1_0() { return cCommaKeyword_2_1_1_0; }

		//parameters+=EParameter
		public Assignment getParametersAssignment_2_1_1_1() { return cParametersAssignment_2_1_1_1; }

		//EParameter
		public RuleCall getParametersEParameterParserRuleCall_2_1_1_1_0() { return cParametersEParameterParserRuleCall_2_1_1_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//queries+=ECustomQuery
		public Assignment getQueriesAssignment_4() { return cQueriesAssignment_4; }

		//ECustomQuery
		public RuleCall getQueriesECustomQueryParserRuleCall_4_0() { return cQueriesECustomQueryParserRuleCall_4_0; }

		//(',' queries+=ECustomQuery)*
		public Group getGroup_5() { return cGroup_5; }

		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//queries+=ECustomQuery
		public Assignment getQueriesAssignment_5_1() { return cQueriesAssignment_5_1; }

		//ECustomQuery
		public RuleCall getQueriesECustomQueryParserRuleCall_5_1_0() { return cQueriesECustomQueryParserRuleCall_5_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EReturnTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EReturnType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEPredefinedTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cETypeDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEModelTypeDefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//EReturnType:
		//	EPredefinedType | ETypeDef | EModelTypeDef;
		@Override public ParserRule getRule() { return rule; }

		//EPredefinedType | ETypeDef | EModelTypeDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//EPredefinedType
		public RuleCall getEPredefinedTypeParserRuleCall_0() { return cEPredefinedTypeParserRuleCall_0; }

		//ETypeDef
		public RuleCall getETypeDefParserRuleCall_1() { return cETypeDefParserRuleCall_1; }

		//EModelTypeDef
		public RuleCall getEModelTypeDefParserRuleCall_2() { return cEModelTypeDefParserRuleCall_2; }
	}

	public class EPredefinedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EPredefinedType");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cRefAlternatives_0 = (Alternatives)cRefAssignment.eContents().get(0);
		private final RuleCall cRefEMapTypeParserRuleCall_0_0 = (RuleCall)cRefAlternatives_0.eContents().get(0);
		private final RuleCall cRefEPrimtiveTypeParserRuleCall_0_1 = (RuleCall)cRefAlternatives_0.eContents().get(1);
		
		//EPredefinedType:
		//	ref=(EMapType | EPrimtiveType);
		@Override public ParserRule getRule() { return rule; }

		//ref=(EMapType | EPrimtiveType)
		public Assignment getRefAssignment() { return cRefAssignment; }

		//(EMapType | EPrimtiveType)
		public Alternatives getRefAlternatives_0() { return cRefAlternatives_0; }

		//EMapType
		public RuleCall getRefEMapTypeParserRuleCall_0_0() { return cRefEMapTypeParserRuleCall_0_0; }

		//EPrimtiveType
		public RuleCall getRefEPrimtiveTypeParserRuleCall_0_1() { return cRefEPrimtiveTypeParserRuleCall_0_1; }
	}

	public class ETypeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ETypeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypedefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameFQNParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypesEValueTypeAttributeParserRuleCall_3_0 = (RuleCall)cTypesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypesEValueTypeAttributeParserRuleCall_4_1_0 = (RuleCall)cTypesAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ETypeDef:
		//	'typedef' name=FQN '(' types+=EValueTypeAttribute (',' types+=EValueTypeAttribute)* ')';
		@Override public ParserRule getRule() { return rule; }

		//'typedef' name=FQN '(' types+=EValueTypeAttribute (',' types+=EValueTypeAttribute)* ')'
		public Group getGroup() { return cGroup; }

		//'typedef'
		public Keyword getTypedefKeyword_0() { return cTypedefKeyword_0; }

		//name=FQN
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//FQN
		public RuleCall getNameFQNParserRuleCall_1_0() { return cNameFQNParserRuleCall_1_0; }

		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//types+=EValueTypeAttribute
		public Assignment getTypesAssignment_3() { return cTypesAssignment_3; }

		//EValueTypeAttribute
		public RuleCall getTypesEValueTypeAttributeParserRuleCall_3_0() { return cTypesEValueTypeAttributeParserRuleCall_3_0; }

		//(',' types+=EValueTypeAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//types+=EValueTypeAttribute
		public Assignment getTypesAssignment_4_1() { return cTypesAssignment_4_1; }

		//EValueTypeAttribute
		public RuleCall getTypesEValueTypeAttributeParserRuleCall_4_1_0() { return cTypesEValueTypeAttributeParserRuleCall_4_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class EModelTypeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EModelTypeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEclassDefAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cEclassDefETypeParserRuleCall_0_0 = (RuleCall)cEclassDefAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributesEModelTypeAttributeParserRuleCall_2_0 = (RuleCall)cAttributesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAttributesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAttributesEModelTypeAttributeParserRuleCall_3_1_0 = (RuleCall)cAttributesAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//EModelTypeDef:
		//	eclassDef=EType '(' attributes+=EModelTypeAttribute (',' attributes+=EModelTypeAttribute)* ')';
		@Override public ParserRule getRule() { return rule; }

		//eclassDef=EType '(' attributes+=EModelTypeAttribute (',' attributes+=EModelTypeAttribute)* ')'
		public Group getGroup() { return cGroup; }

		//eclassDef=EType
		public Assignment getEclassDefAssignment_0() { return cEclassDefAssignment_0; }

		//EType
		public RuleCall getEclassDefETypeParserRuleCall_0_0() { return cEclassDefETypeParserRuleCall_0_0; }

		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//attributes+=EModelTypeAttribute
		public Assignment getAttributesAssignment_2() { return cAttributesAssignment_2; }

		//EModelTypeAttribute
		public RuleCall getAttributesEModelTypeAttributeParserRuleCall_2_0() { return cAttributesEModelTypeAttributeParserRuleCall_2_0; }

		//(',' attributes+=EModelTypeAttribute)*
		public Group getGroup_3() { return cGroup_3; }

		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//attributes+=EModelTypeAttribute
		public Assignment getAttributesAssignment_3_1() { return cAttributesAssignment_3_1; }

		//EModelTypeAttribute
		public RuleCall getAttributesEModelTypeAttributeParserRuleCall_3_1_0() { return cAttributesEModelTypeAttributeParserRuleCall_3_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class EModelTypeAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EModelTypeAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cResolveKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cQueryAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cQueryENamedCustomQueryCrossReference_1_1_0 = (CrossReference)cQueryAssignment_1_1.eContents().get(0);
		private final RuleCall cQueryENamedCustomQueryQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cQueryENamedCustomQueryCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Group cGroup_1_2_1 = (Group)cGroup_1_2.eContents().get(1);
		private final Assignment cParametersAssignment_1_2_1_0 = (Assignment)cGroup_1_2_1.eContents().get(0);
		private final RuleCall cParametersIDTerminalRuleCall_1_2_1_0_0 = (RuleCall)cParametersAssignment_1_2_1_0.eContents().get(0);
		private final Group cGroup_1_2_1_1 = (Group)cGroup_1_2_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_2_1_1_0 = (Keyword)cGroup_1_2_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_1_2_1_1_1 = (Assignment)cGroup_1_2_1_1.eContents().get(1);
		private final RuleCall cParametersIDTerminalRuleCall_1_2_1_1_1_0 = (RuleCall)cParametersAssignment_1_2_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_2_2 = (Keyword)cGroup_1_2.eContents().get(2);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Assignment cCachedAssignment_1_3_0 = (Assignment)cGroup_1_3.eContents().get(0);
		private final Keyword cCachedCachedKeyword_1_3_0_0 = (Keyword)cCachedAssignment_1_3_0.eContents().get(0);
		private final Assignment cCacheNameAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cCacheNameIDTerminalRuleCall_1_3_1_0 = (RuleCall)cCacheNameAssignment_1_3_1.eContents().get(0);
		
		//EModelTypeAttribute:
		//	name=ID ('resolve' query=[ENamedCustomQuery|QualifiedName] ('(' (parameters+=ID (',' parameters+=ID)*)? ')')?
		//	(cached?='cached' cacheName=ID?)?)?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID ('resolve' query=[ENamedCustomQuery|QualifiedName] ('(' (parameters+=ID (',' parameters+=ID)*)? ')')?
		//(cached?='cached' cacheName=ID?)?)?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//('resolve' query=[ENamedCustomQuery|QualifiedName] ('(' (parameters+=ID (',' parameters+=ID)*)? ')')? (cached?='cached'
		//cacheName=ID?)?)?
		public Group getGroup_1() { return cGroup_1; }

		//'resolve'
		public Keyword getResolveKeyword_1_0() { return cResolveKeyword_1_0; }

		//query=[ENamedCustomQuery|QualifiedName]
		public Assignment getQueryAssignment_1_1() { return cQueryAssignment_1_1; }

		//[ENamedCustomQuery|QualifiedName]
		public CrossReference getQueryENamedCustomQueryCrossReference_1_1_0() { return cQueryENamedCustomQueryCrossReference_1_1_0; }

		//QualifiedName
		public RuleCall getQueryENamedCustomQueryQualifiedNameParserRuleCall_1_1_0_1() { return cQueryENamedCustomQueryQualifiedNameParserRuleCall_1_1_0_1; }

		//('(' (parameters+=ID (',' parameters+=ID)*)? ')')?
		public Group getGroup_1_2() { return cGroup_1_2; }

		//'('
		public Keyword getLeftParenthesisKeyword_1_2_0() { return cLeftParenthesisKeyword_1_2_0; }

		//(parameters+=ID (',' parameters+=ID)*)?
		public Group getGroup_1_2_1() { return cGroup_1_2_1; }

		//parameters+=ID
		public Assignment getParametersAssignment_1_2_1_0() { return cParametersAssignment_1_2_1_0; }

		//ID
		public RuleCall getParametersIDTerminalRuleCall_1_2_1_0_0() { return cParametersIDTerminalRuleCall_1_2_1_0_0; }

		//(',' parameters+=ID)*
		public Group getGroup_1_2_1_1() { return cGroup_1_2_1_1; }

		//','
		public Keyword getCommaKeyword_1_2_1_1_0() { return cCommaKeyword_1_2_1_1_0; }

		//parameters+=ID
		public Assignment getParametersAssignment_1_2_1_1_1() { return cParametersAssignment_1_2_1_1_1; }

		//ID
		public RuleCall getParametersIDTerminalRuleCall_1_2_1_1_1_0() { return cParametersIDTerminalRuleCall_1_2_1_1_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_1_2_2() { return cRightParenthesisKeyword_1_2_2; }

		//(cached?='cached' cacheName=ID?)?
		public Group getGroup_1_3() { return cGroup_1_3; }

		//cached?='cached'
		public Assignment getCachedAssignment_1_3_0() { return cCachedAssignment_1_3_0; }

		//'cached'
		public Keyword getCachedCachedKeyword_1_3_0_0() { return cCachedCachedKeyword_1_3_0_0; }

		//cacheName=ID?
		public Assignment getCacheNameAssignment_1_3_1() { return cCacheNameAssignment_1_3_1; }

		//ID
		public RuleCall getCacheNameIDTerminalRuleCall_1_3_1_0() { return cCacheNameIDTerminalRuleCall_1_3_1_0; }
	}

	public class EValueTypeAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EValueTypeAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeEPrimtiveTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//EValueTypeAttribute:
		//	type=EPrimtiveType name=ID;
		@Override public ParserRule getRule() { return rule; }

		//type=EPrimtiveType name=ID
		public Group getGroup() { return cGroup; }

		//type=EPrimtiveType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//EPrimtiveType
		public RuleCall getTypeEPrimtiveTypeParserRuleCall_0_0() { return cTypeEPrimtiveTypeParserRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class EParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIdPrimarykeyKeyword_0_0 = (Keyword)cIdAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cTypeEPrimtiveTypeParserRuleCall_1_0_0 = (RuleCall)cTypeAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cListAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final Keyword cListLeftSquareBracketKeyword_1_1_0_0 = (Keyword)cListAssignment_1_1_0.eContents().get(0);
		private final Assignment cTypeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cTypeEPrimtiveTypeParserRuleCall_1_1_1_0 = (RuleCall)cTypeAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//EParameter:
		//	id?='primarykey'? (type=EPrimtiveType | list?='[' type=EPrimtiveType ']') name=ID;
		@Override public ParserRule getRule() { return rule; }

		//id?='primarykey'? (type=EPrimtiveType | list?='[' type=EPrimtiveType ']') name=ID
		public Group getGroup() { return cGroup; }

		//id?='primarykey'?
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }

		//'primarykey'
		public Keyword getIdPrimarykeyKeyword_0_0() { return cIdPrimarykeyKeyword_0_0; }

		//(type=EPrimtiveType | list?='[' type=EPrimtiveType ']')
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//type=EPrimtiveType
		public Assignment getTypeAssignment_1_0() { return cTypeAssignment_1_0; }

		//EPrimtiveType
		public RuleCall getTypeEPrimtiveTypeParserRuleCall_1_0_0() { return cTypeEPrimtiveTypeParserRuleCall_1_0_0; }

		//list?='[' type=EPrimtiveType ']'
		public Group getGroup_1_1() { return cGroup_1_1; }

		//list?='['
		public Assignment getListAssignment_1_1_0() { return cListAssignment_1_1_0; }

		//'['
		public Keyword getListLeftSquareBracketKeyword_1_1_0_0() { return cListLeftSquareBracketKeyword_1_1_0_0; }

		//type=EPrimtiveType
		public Assignment getTypeAssignment_1_1_1() { return cTypeAssignment_1_1_1; }

		//EPrimtiveType
		public RuleCall getTypeEPrimtiveTypeParserRuleCall_1_1_1_0() { return cTypeEPrimtiveTypeParserRuleCall_1_1_1_0; }

		//']'
		public Keyword getRightSquareBracketKeyword_1_1_2() { return cRightSquareBracketKeyword_1_1_2; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class EQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cDbTypeAlternatives_0_0 = (Alternatives)cDbTypeAssignment_0.eContents().get(0);
		private final Keyword cDbTypeDefaultKeyword_0_0_0 = (Keyword)cDbTypeAlternatives_0_0.eContents().get(0);
		private final RuleCall cDbTypeSTRINGTerminalRuleCall_0_0_1 = (RuleCall)cDbTypeAlternatives_0_0.eContents().get(1);
		private final Assignment cMappingAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMappingEObjectSectionParserRuleCall_1_0 = (RuleCall)cMappingAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cFROMKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cFromAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cFromSTRINGTerminalRuleCall_2_0_1_0 = (RuleCall)cFromAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_0_2 = (Group)cGroup_2_0.eContents().get(2);
		private final Keyword cWHEREKeyword_2_0_2_0 = (Keyword)cGroup_2_0_2.eContents().get(0);
		private final Assignment cWhereAssignment_2_0_2_1 = (Assignment)cGroup_2_0_2.eContents().get(1);
		private final RuleCall cWhereSTRINGTerminalRuleCall_2_0_2_1_0 = (RuleCall)cWhereAssignment_2_0_2_1.eContents().get(0);
		private final Group cGroup_2_0_3 = (Group)cGroup_2_0.eContents().get(3);
		private final Keyword cGROUPBYKeyword_2_0_3_0 = (Keyword)cGroup_2_0_3.eContents().get(0);
		private final Assignment cGroupByAssignment_2_0_3_1 = (Assignment)cGroup_2_0_3.eContents().get(1);
		private final RuleCall cGroupBySTRINGTerminalRuleCall_2_0_3_1_0 = (RuleCall)cGroupByAssignment_2_0_3_1.eContents().get(0);
		private final Group cGroup_2_0_4 = (Group)cGroup_2_0.eContents().get(4);
		private final Keyword cORDERBYKeyword_2_0_4_0 = (Keyword)cGroup_2_0_4.eContents().get(0);
		private final Assignment cOrderbyAssignment_2_0_4_1 = (Assignment)cGroup_2_0_4.eContents().get(1);
		private final RuleCall cOrderbySTRINGTerminalRuleCall_2_0_4_1_0 = (RuleCall)cOrderbyAssignment_2_0_4_1.eContents().get(0);
		private final Assignment cAllAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cAllSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cAllAssignment_2_1.eContents().get(0);
		
		//EQuery:
		//	dbType=('default' | STRING) mapping=EObjectSection ('FROM' from=STRING ('WHERE' where=STRING)? ('GROUP BY'
		//	groupBy=STRING)? ('ORDER BY' orderby=STRING)? | all=STRING);
		@Override public ParserRule getRule() { return rule; }

		//dbType=('default' | STRING) mapping=EObjectSection ('FROM' from=STRING ('WHERE' where=STRING)? ('GROUP BY'
		//groupBy=STRING)? ('ORDER BY' orderby=STRING)? | all=STRING)
		public Group getGroup() { return cGroup; }

		//dbType=('default' | STRING)
		public Assignment getDbTypeAssignment_0() { return cDbTypeAssignment_0; }

		//('default' | STRING)
		public Alternatives getDbTypeAlternatives_0_0() { return cDbTypeAlternatives_0_0; }

		//'default'
		public Keyword getDbTypeDefaultKeyword_0_0_0() { return cDbTypeDefaultKeyword_0_0_0; }

		//STRING
		public RuleCall getDbTypeSTRINGTerminalRuleCall_0_0_1() { return cDbTypeSTRINGTerminalRuleCall_0_0_1; }

		//mapping=EObjectSection
		public Assignment getMappingAssignment_1() { return cMappingAssignment_1; }

		//EObjectSection
		public RuleCall getMappingEObjectSectionParserRuleCall_1_0() { return cMappingEObjectSectionParserRuleCall_1_0; }

		//('FROM' from=STRING ('WHERE' where=STRING)? ('GROUP BY' groupBy=STRING)? ('ORDER BY' orderby=STRING)? | all=STRING)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//'FROM' from=STRING ('WHERE' where=STRING)? ('GROUP BY' groupBy=STRING)? ('ORDER BY' orderby=STRING)?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//'FROM'
		public Keyword getFROMKeyword_2_0_0() { return cFROMKeyword_2_0_0; }

		//from=STRING
		public Assignment getFromAssignment_2_0_1() { return cFromAssignment_2_0_1; }

		//STRING
		public RuleCall getFromSTRINGTerminalRuleCall_2_0_1_0() { return cFromSTRINGTerminalRuleCall_2_0_1_0; }

		//('WHERE' where=STRING)?
		public Group getGroup_2_0_2() { return cGroup_2_0_2; }

		//'WHERE'
		public Keyword getWHEREKeyword_2_0_2_0() { return cWHEREKeyword_2_0_2_0; }

		//where=STRING
		public Assignment getWhereAssignment_2_0_2_1() { return cWhereAssignment_2_0_2_1; }

		//STRING
		public RuleCall getWhereSTRINGTerminalRuleCall_2_0_2_1_0() { return cWhereSTRINGTerminalRuleCall_2_0_2_1_0; }

		//('GROUP BY' groupBy=STRING)?
		public Group getGroup_2_0_3() { return cGroup_2_0_3; }

		//'GROUP BY'
		public Keyword getGROUPBYKeyword_2_0_3_0() { return cGROUPBYKeyword_2_0_3_0; }

		//groupBy=STRING
		public Assignment getGroupByAssignment_2_0_3_1() { return cGroupByAssignment_2_0_3_1; }

		//STRING
		public RuleCall getGroupBySTRINGTerminalRuleCall_2_0_3_1_0() { return cGroupBySTRINGTerminalRuleCall_2_0_3_1_0; }

		//('ORDER BY' orderby=STRING)?
		public Group getGroup_2_0_4() { return cGroup_2_0_4; }

		//'ORDER BY'
		public Keyword getORDERBYKeyword_2_0_4_0() { return cORDERBYKeyword_2_0_4_0; }

		//orderby=STRING
		public Assignment getOrderbyAssignment_2_0_4_1() { return cOrderbyAssignment_2_0_4_1; }

		//STRING
		public RuleCall getOrderbySTRINGTerminalRuleCall_2_0_4_1_0() { return cOrderbySTRINGTerminalRuleCall_2_0_4_1_0; }

		//all=STRING
		public Assignment getAllAssignment_2_1() { return cAllAssignment_2_1; }

		//STRING
		public RuleCall getAllSTRINGTerminalRuleCall_2_1_0() { return cAllSTRINGTerminalRuleCall_2_1_0; }
	}

	public class ECustomQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ECustomQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cDbTypeAlternatives_0_0 = (Alternatives)cDbTypeAssignment_0.eContents().get(0);
		private final Keyword cDbTypeDefaultKeyword_0_0_0 = (Keyword)cDbTypeAlternatives_0_0.eContents().get(0);
		private final RuleCall cDbTypeSTRINGTerminalRuleCall_0_0_1 = (RuleCall)cDbTypeAlternatives_0_0.eContents().get(1);
		private final Assignment cColumnsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cColumnsSTRINGTerminalRuleCall_1_0 = (RuleCall)cColumnsAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cFROMKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cFromAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cFromSTRINGTerminalRuleCall_2_0_1_0 = (RuleCall)cFromAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_0_2 = (Group)cGroup_2_0.eContents().get(2);
		private final Keyword cWHEREKeyword_2_0_2_0 = (Keyword)cGroup_2_0_2.eContents().get(0);
		private final Assignment cWhereAssignment_2_0_2_1 = (Assignment)cGroup_2_0_2.eContents().get(1);
		private final RuleCall cWhereSTRINGTerminalRuleCall_2_0_2_1_0 = (RuleCall)cWhereAssignment_2_0_2_1.eContents().get(0);
		private final Group cGroup_2_0_3 = (Group)cGroup_2_0.eContents().get(3);
		private final Keyword cGROUPBYKeyword_2_0_3_0 = (Keyword)cGroup_2_0_3.eContents().get(0);
		private final Assignment cGroupByAssignment_2_0_3_1 = (Assignment)cGroup_2_0_3.eContents().get(1);
		private final RuleCall cGroupBySTRINGTerminalRuleCall_2_0_3_1_0 = (RuleCall)cGroupByAssignment_2_0_3_1.eContents().get(0);
		private final Group cGroup_2_0_4 = (Group)cGroup_2_0.eContents().get(4);
		private final Keyword cORDERBYKeyword_2_0_4_0 = (Keyword)cGroup_2_0_4.eContents().get(0);
		private final Assignment cOrderbyAssignment_2_0_4_1 = (Assignment)cGroup_2_0_4.eContents().get(1);
		private final RuleCall cOrderbySTRINGTerminalRuleCall_2_0_4_1_0 = (RuleCall)cOrderbyAssignment_2_0_4_1.eContents().get(0);
		private final Assignment cAllAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cAllSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cAllAssignment_2_1.eContents().get(0);
		
		//ECustomQuery:
		//	dbType=('default' | STRING) columns=STRING ('FROM' from=STRING ('WHERE' where=STRING)? ('GROUP BY' groupBy=STRING)?
		//	('ORDER BY' orderby=STRING)? | all=STRING);
		@Override public ParserRule getRule() { return rule; }

		//dbType=('default' | STRING) columns=STRING ('FROM' from=STRING ('WHERE' where=STRING)? ('GROUP BY' groupBy=STRING)?
		//('ORDER BY' orderby=STRING)? | all=STRING)
		public Group getGroup() { return cGroup; }

		//dbType=('default' | STRING)
		public Assignment getDbTypeAssignment_0() { return cDbTypeAssignment_0; }

		//('default' | STRING)
		public Alternatives getDbTypeAlternatives_0_0() { return cDbTypeAlternatives_0_0; }

		//'default'
		public Keyword getDbTypeDefaultKeyword_0_0_0() { return cDbTypeDefaultKeyword_0_0_0; }

		//STRING
		public RuleCall getDbTypeSTRINGTerminalRuleCall_0_0_1() { return cDbTypeSTRINGTerminalRuleCall_0_0_1; }

		//columns=STRING
		public Assignment getColumnsAssignment_1() { return cColumnsAssignment_1; }

		//STRING
		public RuleCall getColumnsSTRINGTerminalRuleCall_1_0() { return cColumnsSTRINGTerminalRuleCall_1_0; }

		//('FROM' from=STRING ('WHERE' where=STRING)? ('GROUP BY' groupBy=STRING)? ('ORDER BY' orderby=STRING)? | all=STRING)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//'FROM' from=STRING ('WHERE' where=STRING)? ('GROUP BY' groupBy=STRING)? ('ORDER BY' orderby=STRING)?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//'FROM'
		public Keyword getFROMKeyword_2_0_0() { return cFROMKeyword_2_0_0; }

		//from=STRING
		public Assignment getFromAssignment_2_0_1() { return cFromAssignment_2_0_1; }

		//STRING
		public RuleCall getFromSTRINGTerminalRuleCall_2_0_1_0() { return cFromSTRINGTerminalRuleCall_2_0_1_0; }

		//('WHERE' where=STRING)?
		public Group getGroup_2_0_2() { return cGroup_2_0_2; }

		//'WHERE'
		public Keyword getWHEREKeyword_2_0_2_0() { return cWHEREKeyword_2_0_2_0; }

		//where=STRING
		public Assignment getWhereAssignment_2_0_2_1() { return cWhereAssignment_2_0_2_1; }

		//STRING
		public RuleCall getWhereSTRINGTerminalRuleCall_2_0_2_1_0() { return cWhereSTRINGTerminalRuleCall_2_0_2_1_0; }

		//('GROUP BY' groupBy=STRING)?
		public Group getGroup_2_0_3() { return cGroup_2_0_3; }

		//'GROUP BY'
		public Keyword getGROUPBYKeyword_2_0_3_0() { return cGROUPBYKeyword_2_0_3_0; }

		//groupBy=STRING
		public Assignment getGroupByAssignment_2_0_3_1() { return cGroupByAssignment_2_0_3_1; }

		//STRING
		public RuleCall getGroupBySTRINGTerminalRuleCall_2_0_3_1_0() { return cGroupBySTRINGTerminalRuleCall_2_0_3_1_0; }

		//('ORDER BY' orderby=STRING)?
		public Group getGroup_2_0_4() { return cGroup_2_0_4; }

		//'ORDER BY'
		public Keyword getORDERBYKeyword_2_0_4_0() { return cORDERBYKeyword_2_0_4_0; }

		//orderby=STRING
		public Assignment getOrderbyAssignment_2_0_4_1() { return cOrderbyAssignment_2_0_4_1; }

		//STRING
		public RuleCall getOrderbySTRINGTerminalRuleCall_2_0_4_1_0() { return cOrderbySTRINGTerminalRuleCall_2_0_4_1_0; }

		//all=STRING
		public Assignment getAllAssignment_2_1() { return cAllAssignment_2_1; }

		//STRING
		public RuleCall getAllSTRINGTerminalRuleCall_2_1_0() { return cAllSTRINGTerminalRuleCall_2_1_0; }
	}

	public class EObjectSectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EObjectSection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEntityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cEntityEMappingEntityCrossReference_0_0 = (CrossReference)cEntityAssignment_0.eContents().get(0);
		private final RuleCall cEntityEMappingEntityIDTerminalRuleCall_0_0_1 = (RuleCall)cEntityEMappingEntityCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDescriminatedTypesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cDescriminatedTypesEMappingEntityCrossReference_1_1_0 = (CrossReference)cDescriminatedTypesAssignment_1_1.eContents().get(0);
		private final RuleCall cDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_1_0_1 = (RuleCall)cDescriminatedTypesEMappingEntityCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cDescriminatedTypesAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final CrossReference cDescriminatedTypesEMappingEntityCrossReference_1_2_1_0 = (CrossReference)cDescriminatedTypesAssignment_1_2_1.eContents().get(0);
		private final RuleCall cDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_2_1_0_1 = (RuleCall)cDescriminatedTypesEMappingEntityCrossReference_1_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cPrefixAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cPrefixIDTerminalRuleCall_2_0_0 = (RuleCall)cPrefixAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cAttributesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cAttributesEMappingAttributeParserRuleCall_2_1_1_0 = (RuleCall)cAttributesAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cAttributesAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cAttributesEMappingAttributeParserRuleCall_2_1_2_1_0 = (RuleCall)cAttributesAssignment_2_1_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_3 = (Keyword)cGroup_2_1.eContents().get(3);
		
		//EObjectSection:
		//	entity=[EMappingEntity] ('(' descriminatedTypes+=[EMappingEntity] (',' descriminatedTypes+=[EMappingEntity])+ ')')?
		//	(prefix=ID ('{'
		//	attributes+=EMappingAttribute (',' attributes+=EMappingAttribute)*
		//	'}')?)? // ('exclude' '{' excludedProperties+=QualifiedName (',' excludedProperties+=QualifiedName)* '}' )?
		//;
		@Override public ParserRule getRule() { return rule; }

		////	noreferences?='noreferences'?
		//entity=[EMappingEntity] ('(' descriminatedTypes+=[EMappingEntity] (',' descriminatedTypes+=[EMappingEntity])+ ')')?
		//(prefix=ID ('{' attributes+=EMappingAttribute (',' attributes+=EMappingAttribute)* '}')?)?
		public Group getGroup() { return cGroup; }

		////	noreferences?='noreferences'?
		//entity=[EMappingEntity]
		public Assignment getEntityAssignment_0() { return cEntityAssignment_0; }

		//[EMappingEntity]
		public CrossReference getEntityEMappingEntityCrossReference_0_0() { return cEntityEMappingEntityCrossReference_0_0; }

		//ID
		public RuleCall getEntityEMappingEntityIDTerminalRuleCall_0_0_1() { return cEntityEMappingEntityIDTerminalRuleCall_0_0_1; }

		//('(' descriminatedTypes+=[EMappingEntity] (',' descriminatedTypes+=[EMappingEntity])+ ')')?
		public Group getGroup_1() { return cGroup_1; }

		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }

		//descriminatedTypes+=[EMappingEntity]
		public Assignment getDescriminatedTypesAssignment_1_1() { return cDescriminatedTypesAssignment_1_1; }

		//[EMappingEntity]
		public CrossReference getDescriminatedTypesEMappingEntityCrossReference_1_1_0() { return cDescriminatedTypesEMappingEntityCrossReference_1_1_0; }

		//ID
		public RuleCall getDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_1_0_1() { return cDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_1_0_1; }

		//(',' descriminatedTypes+=[EMappingEntity])+
		public Group getGroup_1_2() { return cGroup_1_2; }

		//','
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }

		//descriminatedTypes+=[EMappingEntity]
		public Assignment getDescriminatedTypesAssignment_1_2_1() { return cDescriminatedTypesAssignment_1_2_1; }

		//[EMappingEntity]
		public CrossReference getDescriminatedTypesEMappingEntityCrossReference_1_2_1_0() { return cDescriminatedTypesEMappingEntityCrossReference_1_2_1_0; }

		//ID
		public RuleCall getDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_2_1_0_1() { return cDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_2_1_0_1; }

		//')'
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }

		//(prefix=ID ('{' attributes+=EMappingAttribute (',' attributes+=EMappingAttribute)* '}')?)?
		public Group getGroup_2() { return cGroup_2; }

		//prefix=ID
		public Assignment getPrefixAssignment_2_0() { return cPrefixAssignment_2_0; }

		//ID
		public RuleCall getPrefixIDTerminalRuleCall_2_0_0() { return cPrefixIDTerminalRuleCall_2_0_0; }

		//('{' attributes+=EMappingAttribute (',' attributes+=EMappingAttribute)* '}')?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1_0() { return cLeftCurlyBracketKeyword_2_1_0; }

		//attributes+=EMappingAttribute
		public Assignment getAttributesAssignment_2_1_1() { return cAttributesAssignment_2_1_1; }

		//EMappingAttribute
		public RuleCall getAttributesEMappingAttributeParserRuleCall_2_1_1_0() { return cAttributesEMappingAttributeParserRuleCall_2_1_1_0; }

		//(',' attributes+=EMappingAttribute)*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//','
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }

		//attributes+=EMappingAttribute
		public Assignment getAttributesAssignment_2_1_2_1() { return cAttributesAssignment_2_1_2_1; }

		//EMappingAttribute
		public RuleCall getAttributesEMappingAttributeParserRuleCall_2_1_2_1_0() { return cAttributesEMappingAttributeParserRuleCall_2_1_2_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_2_1_3() { return cRightCurlyBracketKeyword_2_1_3; }
	}

	public class EMappingAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EMappingAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPkAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPkPrimarykeyKeyword_0_0 = (Keyword)cPkAssignment_0.eContents().get(0);
		private final Assignment cPropertyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPropertyQualifiedNameParserRuleCall_1_0 = (RuleCall)cPropertyAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cColumnNameAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cColumnNameIDTerminalRuleCall_3_0_0 = (RuleCall)cColumnNameAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cResolvedAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final Keyword cResolvedResolveKeyword_3_1_0_0 = (Keyword)cResolvedAssignment_3_1_0.eContents().get(0);
		private final Assignment cQueryAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cQueryENamedQueryCrossReference_3_1_1_0 = (CrossReference)cQueryAssignment_3_1_1.eContents().get(0);
		private final RuleCall cQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1 = (RuleCall)cQueryENamedQueryCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Assignment cParametersAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cParametersIDTerminalRuleCall_3_1_3_0 = (RuleCall)cParametersAssignment_3_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_1_4 = (Keyword)cGroup_3_1.eContents().get(4);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Assignment cMappedAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final Keyword cMappedMapKeyword_3_2_0_0 = (Keyword)cMappedAssignment_3_2_0.eContents().get(0);
		private final Assignment cMapAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cMapEObjectSectionParserRuleCall_3_2_1_0 = (RuleCall)cMapAssignment_3_2_1.eContents().get(0);
		
		//EMappingAttribute:
		//	pk?='primarykey'? property=QualifiedName '=>' (columnName=ID | resolved?='resolve' query=[ENamedQuery|QualifiedName]
		//	'(' parameters+=ID ')' | mapped?='map' map=EObjectSection);
		@Override public ParserRule getRule() { return rule; }

		//pk?='primarykey'? property=QualifiedName '=>' (columnName=ID | resolved?='resolve' query=[ENamedQuery|QualifiedName] '('
		//parameters+=ID ')' | mapped?='map' map=EObjectSection)
		public Group getGroup() { return cGroup; }

		//pk?='primarykey'?
		public Assignment getPkAssignment_0() { return cPkAssignment_0; }

		//'primarykey'
		public Keyword getPkPrimarykeyKeyword_0_0() { return cPkPrimarykeyKeyword_0_0; }

		//property=QualifiedName
		public Assignment getPropertyAssignment_1() { return cPropertyAssignment_1; }

		//QualifiedName
		public RuleCall getPropertyQualifiedNameParserRuleCall_1_0() { return cPropertyQualifiedNameParserRuleCall_1_0; }

		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_2() { return cEqualsSignGreaterThanSignKeyword_2; }

		//(columnName=ID | resolved?='resolve' query=[ENamedQuery|QualifiedName] '(' parameters+=ID ')' | mapped?='map'
		//map=EObjectSection)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//columnName=ID
		public Assignment getColumnNameAssignment_3_0() { return cColumnNameAssignment_3_0; }

		//ID
		public RuleCall getColumnNameIDTerminalRuleCall_3_0_0() { return cColumnNameIDTerminalRuleCall_3_0_0; }

		//resolved?='resolve' query=[ENamedQuery|QualifiedName] '(' parameters+=ID ')'
		public Group getGroup_3_1() { return cGroup_3_1; }

		//resolved?='resolve'
		public Assignment getResolvedAssignment_3_1_0() { return cResolvedAssignment_3_1_0; }

		//'resolve'
		public Keyword getResolvedResolveKeyword_3_1_0_0() { return cResolvedResolveKeyword_3_1_0_0; }

		//query=[ENamedQuery|QualifiedName]
		public Assignment getQueryAssignment_3_1_1() { return cQueryAssignment_3_1_1; }

		//[ENamedQuery|QualifiedName]
		public CrossReference getQueryENamedQueryCrossReference_3_1_1_0() { return cQueryENamedQueryCrossReference_3_1_1_0; }

		//QualifiedName
		public RuleCall getQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1() { return cQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1; }

		//'('
		public Keyword getLeftParenthesisKeyword_3_1_2() { return cLeftParenthesisKeyword_3_1_2; }

		//parameters+=ID
		public Assignment getParametersAssignment_3_1_3() { return cParametersAssignment_3_1_3; }

		//ID
		public RuleCall getParametersIDTerminalRuleCall_3_1_3_0() { return cParametersIDTerminalRuleCall_3_1_3_0; }

		//')'
		public Keyword getRightParenthesisKeyword_3_1_4() { return cRightParenthesisKeyword_3_1_4; }

		//mapped?='map' map=EObjectSection
		public Group getGroup_3_2() { return cGroup_3_2; }

		//mapped?='map'
		public Assignment getMappedAssignment_3_2_0() { return cMappedAssignment_3_2_0; }

		//'map'
		public Keyword getMappedMapKeyword_3_2_0_0() { return cMappedMapKeyword_3_2_0_0; }

		//map=EObjectSection
		public Assignment getMapAssignment_3_2_1() { return cMapAssignment_3_2_1; }

		//EObjectSection
		public RuleCall getMapEObjectSectionParserRuleCall_3_2_1_0() { return cMapEObjectSectionParserRuleCall_3_2_1_0; }
	}

	public class ETypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.EType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEtypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cUrlAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUrlSTRINGTerminalRuleCall_1_0 = (RuleCall)cUrlAssignment_1.eContents().get(0);
		private final Keyword cNumberSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//EType:
		//	'etype' url=STRING '#' name=ID;
		@Override public ParserRule getRule() { return rule; }

		//'etype' url=STRING '#' name=ID
		public Group getGroup() { return cGroup; }

		//'etype'
		public Keyword getEtypeKeyword_0() { return cEtypeKeyword_0; }

		//url=STRING
		public Assignment getUrlAssignment_1() { return cUrlAssignment_1; }

		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_1_0() { return cUrlSTRINGTerminalRuleCall_1_0; }

		//'#'
		public Keyword getNumberSignKeyword_2() { return cNumberSignKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID (=> '.' ID)*;
		@Override public ParserRule getRule() { return rule; }

		//ID (=> '.' ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//(=> '.' ID)*
		public Group getGroup_1() { return cGroup_1; }

		//=> '.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName '.' '*';
		@Override public ParserRule getRule() { return rule; }

		//QualifiedName '.' '*'
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//'*'
		public Keyword getAsteriskKeyword_2() { return cAsteriskKeyword_2; }
	}
	
	
	public class ColSortElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ColSort");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEMAPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEMAPEMAPKeyword_0_0 = (Keyword)cEMAPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cECOREEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cECOREECOREKeyword_1_0 = (Keyword)cECOREEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cECORE_REVERSEDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cECORE_REVERSEDECORE_REVERSEDKeyword_2_0 = (Keyword)cECORE_REVERSEDEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cALPHABETICEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cALPHABETICALPHABETICKeyword_3_0 = (Keyword)cALPHABETICEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum ColSort:
		//	EMAP | ECORE | ECORE_REVERSED | ALPHABETIC;
		public EnumRule getRule() { return rule; }

		//EMAP | ECORE | ECORE_REVERSED | ALPHABETIC
		public Alternatives getAlternatives() { return cAlternatives; }

		//EMAP
		public EnumLiteralDeclaration getEMAPEnumLiteralDeclaration_0() { return cEMAPEnumLiteralDeclaration_0; }

		//"EMAP"
		public Keyword getEMAPEMAPKeyword_0_0() { return cEMAPEMAPKeyword_0_0; }

		//ECORE
		public EnumLiteralDeclaration getECOREEnumLiteralDeclaration_1() { return cECOREEnumLiteralDeclaration_1; }

		//"ECORE"
		public Keyword getECOREECOREKeyword_1_0() { return cECOREECOREKeyword_1_0; }

		//ECORE_REVERSED
		public EnumLiteralDeclaration getECORE_REVERSEDEnumLiteralDeclaration_2() { return cECORE_REVERSEDEnumLiteralDeclaration_2; }

		//"ECORE_REVERSED"
		public Keyword getECORE_REVERSEDECORE_REVERSEDKeyword_2_0() { return cECORE_REVERSEDECORE_REVERSEDKeyword_2_0; }

		//ALPHABETIC
		public EnumLiteralDeclaration getALPHABETICEnumLiteralDeclaration_3() { return cALPHABETICEnumLiteralDeclaration_3; }

		//"ALPHABETIC"
		public Keyword getALPHABETICALPHABETICKeyword_3_0() { return cALPHABETICALPHABETICKeyword_3_0; }
	}

	public class ReturnTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "at.bestsolution.persistence.emap.EMap.ReturnType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cListEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cListListKeyword_0_0 = (Keyword)cListEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSingleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSingleSingleKeyword_1_0 = (Keyword)cSingleEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ReturnType:
		//	list | single;
		public EnumRule getRule() { return rule; }

		//list | single
		public Alternatives getAlternatives() { return cAlternatives; }

		//list
		public EnumLiteralDeclaration getListEnumLiteralDeclaration_0() { return cListEnumLiteralDeclaration_0; }

		//"list"
		public Keyword getListListKeyword_0_0() { return cListListKeyword_0_0; }

		//single
		public EnumLiteralDeclaration getSingleEnumLiteralDeclaration_1() { return cSingleEnumLiteralDeclaration_1; }

		//"single"
		public Keyword getSingleSingleKeyword_1_0() { return cSingleSingleKeyword_1_0; }
	}
	
	private final EMappingElements pEMapping;
	private final EMappingBundleElements pEMappingBundle;
	private final EPredefElements pEPredef;
	private final EGeneratorDefElements pEGeneratorDef;
	private final EGeneratorConfigValueElements pEGeneratorConfigValue;
	private final ColSortElements eColSort;
	private final EBundleEntityElements pEBundleEntity;
	private final EIndexElements pEIndex;
	private final EFkConstraintElements pEFkConstraint;
	private final EUniqueConstraintElements pEUniqueConstraint;
	private final ESQLAttTypeDefElements pESQLAttTypeDef;
	private final ESQLTypeDefElements pESQLTypeDef;
	private final ESQLDbTypeElements pESQLDbType;
	private final ERestServiceMappingElements pERestServiceMapping;
	private final ENamedServiceQueryElements pENamedServiceQuery;
	private final ECustomServiceMethodsElements pECustomServiceMethods;
	private final EGreedyAttributePathElements pEGreedyAttributePath;
	private final EServiceParamElements pEServiceParam;
	private final EPathParamElements pEPathParam;
	private final EQueryParamElements pEQueryParam;
	private final EMappingEntityDefElements pEMappingEntityDef;
	private final ImportElements pImport;
	private final PackageDeclarationElements pPackageDeclaration;
	private final FQNElements pFQN;
	private final EMappingEntityElements pEMappingEntity;
	private final EAttributeElements pEAttribute;
	private final EValueGeneratorElements pEValueGenerator;
	private final ENamedQueryElements pENamedQuery;
	private final EPrimtiveTypeElements pEPrimtiveType;
	private final EMapTypeElements pEMapType;
	private final ENamedCustomQueryElements pENamedCustomQuery;
	private final EReturnTypeElements pEReturnType;
	private final EPredefinedTypeElements pEPredefinedType;
	private final ETypeDefElements pETypeDef;
	private final EModelTypeDefElements pEModelTypeDef;
	private final EModelTypeAttributeElements pEModelTypeAttribute;
	private final EValueTypeAttributeElements pEValueTypeAttribute;
	private final ReturnTypeElements eReturnType;
	private final EParameterElements pEParameter;
	private final EQueryElements pEQuery;
	private final ECustomQueryElements pECustomQuery;
	private final EObjectSectionElements pEObjectSection;
	private final EMappingAttributeElements pEMappingAttribute;
	private final ETypeElements pEType;
	private final QualifiedNameElements pQualifiedName;
	private final QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EMapGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pEMapping = new EMappingElements();
		this.pEMappingBundle = new EMappingBundleElements();
		this.pEPredef = new EPredefElements();
		this.pEGeneratorDef = new EGeneratorDefElements();
		this.pEGeneratorConfigValue = new EGeneratorConfigValueElements();
		this.eColSort = new ColSortElements();
		this.pEBundleEntity = new EBundleEntityElements();
		this.pEIndex = new EIndexElements();
		this.pEFkConstraint = new EFkConstraintElements();
		this.pEUniqueConstraint = new EUniqueConstraintElements();
		this.pESQLAttTypeDef = new ESQLAttTypeDefElements();
		this.pESQLTypeDef = new ESQLTypeDefElements();
		this.pESQLDbType = new ESQLDbTypeElements();
		this.pERestServiceMapping = new ERestServiceMappingElements();
		this.pENamedServiceQuery = new ENamedServiceQueryElements();
		this.pECustomServiceMethods = new ECustomServiceMethodsElements();
		this.pEGreedyAttributePath = new EGreedyAttributePathElements();
		this.pEServiceParam = new EServiceParamElements();
		this.pEPathParam = new EPathParamElements();
		this.pEQueryParam = new EQueryParamElements();
		this.pEMappingEntityDef = new EMappingEntityDefElements();
		this.pImport = new ImportElements();
		this.pPackageDeclaration = new PackageDeclarationElements();
		this.pFQN = new FQNElements();
		this.pEMappingEntity = new EMappingEntityElements();
		this.pEAttribute = new EAttributeElements();
		this.pEValueGenerator = new EValueGeneratorElements();
		this.pENamedQuery = new ENamedQueryElements();
		this.pEPrimtiveType = new EPrimtiveTypeElements();
		this.pEMapType = new EMapTypeElements();
		this.pENamedCustomQuery = new ENamedCustomQueryElements();
		this.pEReturnType = new EReturnTypeElements();
		this.pEPredefinedType = new EPredefinedTypeElements();
		this.pETypeDef = new ETypeDefElements();
		this.pEModelTypeDef = new EModelTypeDefElements();
		this.pEModelTypeAttribute = new EModelTypeAttributeElements();
		this.pEValueTypeAttribute = new EValueTypeAttributeElements();
		this.eReturnType = new ReturnTypeElements();
		this.pEParameter = new EParameterElements();
		this.pEQuery = new EQueryElements();
		this.pECustomQuery = new ECustomQueryElements();
		this.pEObjectSection = new EObjectSectionElements();
		this.pEMappingAttribute = new EMappingAttributeElements();
		this.pEType = new ETypeElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.bestsolution.persistence.emap.EMap".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//EMapping:
	//	root=(EMappingBundle | EMappingEntityDef);
	public EMappingElements getEMappingAccess() {
		return pEMapping;
	}
	
	public ParserRule getEMappingRule() {
		return getEMappingAccess().getRule();
	}

	//EMappingBundle:
	//	imports+=Import*
	//	'bundle' name=ID ('extends' parentBundle=[EMappingBundle|QualifiedName])? '{' ('predefined' '{' predef+=EPredef (','
	//	predef+=EPredef)* '}')?
	//	entities+=EBundleEntity (',' entities+=EBundleEntity)*
	//	typeDefs+=ESQLTypeDef* ('generator' '{'
	//	generators+=EGeneratorDef+
	//	'}')?
	//	'}' ('databases' databases+=STRING (',' databases+=STRING)*)? ('colsort' colSort=ColSort)?;
	public EMappingBundleElements getEMappingBundleAccess() {
		return pEMappingBundle;
	}
	
	public ParserRule getEMappingBundleRule() {
		return getEMappingBundleAccess().getRule();
	}

	//EPredef:
	//	{EPredefSequence} 'sequence' name=STRING | {EPredefTable} 'table' name=STRING;
	public EPredefElements getEPredefAccess() {
		return pEPredef;
	}
	
	public ParserRule getEPredefRule() {
		return getEPredefAccess().getRule();
	}

	//EGeneratorDef:
	//	name=ID ('{'
	//	parameters+=EGeneratorConfigValue+
	//	'}')?;
	public EGeneratorDefElements getEGeneratorDefAccess() {
		return pEGeneratorDef;
	}
	
	public ParserRule getEGeneratorDefRule() {
		return getEGeneratorDefAccess().getRule();
	}

	//EGeneratorConfigValue:
	//	key=ID ':' (simpleValue=STRING | '{'
	//	children+=EGeneratorConfigValue+
	//	'}');
	public EGeneratorConfigValueElements getEGeneratorConfigValueAccess() {
		return pEGeneratorConfigValue;
	}
	
	public ParserRule getEGeneratorConfigValueRule() {
		return getEGeneratorConfigValueAccess().getRule();
	}

	//enum ColSort:
	//	EMAP | ECORE | ECORE_REVERSED | ALPHABETIC;
	public ColSortElements getColSortAccess() {
		return eColSort;
	}
	
	public EnumRule getColSortRule() {
		return getColSortAccess().getRule();
	}

	//EBundleEntity:
	//	entity=[EMappingEntity] ('{' ('pk-constraint' pkConstraintName=STRING)? (fkConstraints+=EFkConstraint (','
	//	fkConstraints+=EFkConstraint)*)? (uniqueContraints+=EUniqueConstraint (',' uniqueContraints+=EUniqueConstraint)*)?
	//	(indices+=EIndex (',' indices+=EIndex)*)? (typeDefs+=ESQLAttTypeDef (',' typeDefs+=ESQLAttTypeDef)*)?
	//	rest=ERestServiceMapping?
	//	'}')?;
	public EBundleEntityElements getEBundleEntityAccess() {
		return pEBundleEntity;
	}
	
	public ParserRule getEBundleEntityRule() {
		return getEBundleEntityAccess().getRule();
	}

	//EIndex:
	//	'index' name=STRING '(' attributes+=[EAttribute|QualifiedName] (',' attributes+=[EAttribute|QualifiedName])* ')';
	public EIndexElements getEIndexAccess() {
		return pEIndex;
	}
	
	public ParserRule getEIndexRule() {
		return getEIndexAccess().getRule();
	}

	//EFkConstraint:
	//	'fk-constraint' attribute=[EAttribute|QualifiedName] name=STRING;
	public EFkConstraintElements getEFkConstraintAccess() {
		return pEFkConstraint;
	}
	
	public ParserRule getEFkConstraintRule() {
		return getEFkConstraintAccess().getRule();
	}

	//EUniqueConstraint:
	//	'unique-constraint' name=STRING '(' attributes+=[EAttribute|QualifiedName] (','
	//	attributes+=[EAttribute|QualifiedName])* ')';
	public EUniqueConstraintElements getEUniqueConstraintAccess() {
		return pEUniqueConstraint;
	}
	
	public ParserRule getEUniqueConstraintRule() {
		return getEUniqueConstraintAccess().getRule();
	}

	//ESQLAttTypeDef:
	//	"sql-type-def" attribute=[EAttribute|QualifiedName] '{' dbTypes+=ESQLDbType (',' dbTypes+=ESQLDbType)* '}';
	public ESQLAttTypeDefElements getESQLAttTypeDefAccess() {
		return pESQLAttTypeDef;
	}
	
	public ParserRule getESQLAttTypeDefRule() {
		return getESQLAttTypeDefAccess().getRule();
	}

	//ESQLTypeDef:
	//	"sql-type-def" etype=EType '{' dbTypes+=ESQLDbType (',' dbTypes+=ESQLDbType)* '}';
	public ESQLTypeDefElements getESQLTypeDefAccess() {
		return pESQLTypeDef;
	}
	
	public ParserRule getESQLTypeDefRule() {
		return getESQLTypeDefAccess().getRule();
	}

	//ESQLDbType:
	//	dbType=('default' | STRING) sqlTypeDef=STRING ('size' size=STRING)?;
	public ESQLDbTypeElements getESQLDbTypeAccess() {
		return pESQLDbType;
	}
	
	public ParserRule getESQLDbTypeRule() {
		return getESQLDbTypeAccess().getRule();
	}

	////EServiceMappingList:
	////	'webservice' packageName=QualifiedName '{'
	////		serviceDefinition += EServiceMapping*
	////	'}'
	////;
	//ERestServiceMapping:
	//	'webservice' {ERestServiceMapping} ('{'
	//	serviceMethods+=ENamedServiceQuery*
	//	customServiceMethods+=ECustomServiceMethods*
	//	'}')? rest?='rest';
	public ERestServiceMappingElements getERestServiceMappingAccess() {
		return pERestServiceMapping;
	}
	
	public ParserRule getERestServiceMappingRule() {
		return getERestServiceMappingAccess().getRule();
	}

	//ENamedServiceQuery:
	//	query=[ENamedQuery|QualifiedName] 'as' name=ID path=STRING ('{'
	//	parameters+=EServiceParam* ('greedy' '{'
	//	greedyAttributePathList+=EGreedyAttributePath+
	//	'}')?
	//	'}')?;
	public ENamedServiceQueryElements getENamedServiceQueryAccess() {
		return pENamedServiceQuery;
	}
	
	public ParserRule getENamedServiceQueryRule() {
		return getENamedServiceQueryAccess().getRule();
	}

	//ECustomServiceMethods:
	//	'custom' 'as' name=ID path=STRING ('{' parameters+=EParameter* '}')?;
	public ECustomServiceMethodsElements getECustomServiceMethodsAccess() {
		return pECustomServiceMethods;
	}
	
	public ParserRule getECustomServiceMethodsRule() {
		return getECustomServiceMethodsAccess().getRule();
	}

	//EGreedyAttributePath:
	//	greedyAttribute=[EAttribute|QualifiedName] ('{'
	//	subPathList+=EGreedyAttributePath+
	//	'}')?;
	public EGreedyAttributePathElements getEGreedyAttributePathAccess() {
		return pEGreedyAttributePath;
	}
	
	public ParserRule getEGreedyAttributePathRule() {
		return getEGreedyAttributePathAccess().getRule();
	}

	//EServiceParam:
	//	EPathParam | EQueryParam;
	public EServiceParamElements getEServiceParamAccess() {
		return pEServiceParam;
	}
	
	public ParserRule getEServiceParamRule() {
		return getEServiceParamAccess().getRule();
	}

	//EPathParam:
	//	'path-param' param=[EParameter|QualifiedName] ('named' name=ID)?;
	public EPathParamElements getEPathParamAccess() {
		return pEPathParam;
	}
	
	public ParserRule getEPathParamRule() {
		return getEPathParamAccess().getRule();
	}

	//EQueryParam:
	//	'query-param' param=[EParameter|QualifiedName] ('named' name=ID)?;
	public EQueryParamElements getEQueryParamAccess() {
		return pEQueryParam;
	}
	
	public ParserRule getEQueryParamRule() {
		return getEQueryParamAccess().getRule();
	}

	//EMappingEntityDef:
	//	package=PackageDeclaration
	//	imports+=Import*
	//	entity=EMappingEntity;
	public EMappingEntityDefElements getEMappingEntityDefAccess() {
		return pEMappingEntityDef;
	}
	
	public ParserRule getEMappingEntityDefRule() {
		return getEMappingEntityDefAccess().getRule();
	}

	//Import:
	//	'import' importedNamespace=(QualifiedNameWithWildcard | QualifiedName);
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//PackageDeclaration:
	//	'package' name=QualifiedName ';';
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return pPackageDeclaration;
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}

	//FQN:
	//	ID (=> '.' ID)*;
	public FQNElements getFQNAccess() {
		return pFQN;
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}

	//EMappingEntity:
	//	abstract?='abstract'? 'entity' name=ID (extensionType=('extends' | 'derived') parent=[EMappingEntity|QualifiedName])?
	//	'{'
	//	etype=EType ('attributes'
	//	'{'
	//	attributes+=EAttribute (',' attributes+=EAttribute)*
	//	'}')? ('queries'
	//	'{' (namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery) (',' (namedQueries+=ENamedQuery |
	//	namedCustomQueries+=ENamedCustomQuery))*
	//	'}')?
	//	'}' ('as' tableName=ID)? ('descriminatedby' descriminationColumn=ID)?;
	public EMappingEntityElements getEMappingEntityAccess() {
		return pEMappingEntity;
	}
	
	public ParserRule getEMappingEntityRule() {
		return getEMappingEntityAccess().getRule();
	}

	//EAttribute:
	//	(pk?='primarykey'? | forcedFk?='forced-fk') name=ID '=>' (columnName=ID ('generatedby' '{'
	//	valueGenerators+=EValueGenerator (',' valueGenerators+=EValueGenerator)* '}')? | resolved?='resolve'
	//	query=[ENamedQuery|QualifiedName] '(' parameters+=ID ')' (opposite=[EAttribute|QualifiedName] 'on' relationTable=ID
	//	('.' relationColumn=ID)?)?) ('size' size=STRING)?;
	public EAttributeElements getEAttributeAccess() {
		return pEAttribute;
	}
	
	public ParserRule getEAttributeRule() {
		return getEAttributeAccess().getRule();
	}

	//EValueGenerator:
	//	dbType=STRING (autokey?='autokey' | 'query' query=STRING | 'seqnext' sequence=STRING);
	public EValueGeneratorElements getEValueGeneratorAccess() {
		return pEValueGenerator;
	}
	
	public ParserRule getEValueGeneratorRule() {
		return getEValueGeneratorAccess().getRule();
	}

	//ENamedQuery:
	//	returnType=ReturnType? name=ID ('(' (parameters+=EParameter (',' parameters+=EParameter)*)? ')')? '{'
	//	queries+=EQuery (',' queries+=EQuery)*
	//	'}';
	public ENamedQueryElements getENamedQueryAccess() {
		return pENamedQuery;
	}
	
	public ParserRule getENamedQueryRule() {
		return getENamedQueryAccess().getRule();
	}

	//EPrimtiveType:
	//	'int' | 'long' | 'double' | 'float' | 'boolean' | FQN;
	public EPrimtiveTypeElements getEPrimtiveTypeAccess() {
		return pEPrimtiveType;
	}
	
	public ParserRule getEPrimtiveTypeRule() {
		return getEPrimtiveTypeAccess().getRule();
	}

	//EMapType:
	//	'map';
	public EMapTypeElements getEMapTypeAccess() {
		return pEMapType;
	}
	
	public ParserRule getEMapTypeRule() {
		return getEMapTypeAccess().getRule();
	}

	//ENamedCustomQuery:
	//	(returnType=EReturnType | list?='[' returnType=EReturnType ']') name=ID ('(' (parameters+=EParameter (','
	//	parameters+=EParameter)*)? ')')? '{'
	//	queries+=ECustomQuery (',' queries+=ECustomQuery)*
	//	'}';
	public ENamedCustomQueryElements getENamedCustomQueryAccess() {
		return pENamedCustomQuery;
	}
	
	public ParserRule getENamedCustomQueryRule() {
		return getENamedCustomQueryAccess().getRule();
	}

	//EReturnType:
	//	EPredefinedType | ETypeDef | EModelTypeDef;
	public EReturnTypeElements getEReturnTypeAccess() {
		return pEReturnType;
	}
	
	public ParserRule getEReturnTypeRule() {
		return getEReturnTypeAccess().getRule();
	}

	//EPredefinedType:
	//	ref=(EMapType | EPrimtiveType);
	public EPredefinedTypeElements getEPredefinedTypeAccess() {
		return pEPredefinedType;
	}
	
	public ParserRule getEPredefinedTypeRule() {
		return getEPredefinedTypeAccess().getRule();
	}

	//ETypeDef:
	//	'typedef' name=FQN '(' types+=EValueTypeAttribute (',' types+=EValueTypeAttribute)* ')';
	public ETypeDefElements getETypeDefAccess() {
		return pETypeDef;
	}
	
	public ParserRule getETypeDefRule() {
		return getETypeDefAccess().getRule();
	}

	//EModelTypeDef:
	//	eclassDef=EType '(' attributes+=EModelTypeAttribute (',' attributes+=EModelTypeAttribute)* ')';
	public EModelTypeDefElements getEModelTypeDefAccess() {
		return pEModelTypeDef;
	}
	
	public ParserRule getEModelTypeDefRule() {
		return getEModelTypeDefAccess().getRule();
	}

	//EModelTypeAttribute:
	//	name=ID ('resolve' query=[ENamedCustomQuery|QualifiedName] ('(' (parameters+=ID (',' parameters+=ID)*)? ')')?
	//	(cached?='cached' cacheName=ID?)?)?;
	public EModelTypeAttributeElements getEModelTypeAttributeAccess() {
		return pEModelTypeAttribute;
	}
	
	public ParserRule getEModelTypeAttributeRule() {
		return getEModelTypeAttributeAccess().getRule();
	}

	//EValueTypeAttribute:
	//	type=EPrimtiveType name=ID;
	public EValueTypeAttributeElements getEValueTypeAttributeAccess() {
		return pEValueTypeAttribute;
	}
	
	public ParserRule getEValueTypeAttributeRule() {
		return getEValueTypeAttributeAccess().getRule();
	}

	//enum ReturnType:
	//	list | single;
	public ReturnTypeElements getReturnTypeAccess() {
		return eReturnType;
	}
	
	public EnumRule getReturnTypeRule() {
		return getReturnTypeAccess().getRule();
	}

	//EParameter:
	//	id?='primarykey'? (type=EPrimtiveType | list?='[' type=EPrimtiveType ']') name=ID;
	public EParameterElements getEParameterAccess() {
		return pEParameter;
	}
	
	public ParserRule getEParameterRule() {
		return getEParameterAccess().getRule();
	}

	//EQuery:
	//	dbType=('default' | STRING) mapping=EObjectSection ('FROM' from=STRING ('WHERE' where=STRING)? ('GROUP BY'
	//	groupBy=STRING)? ('ORDER BY' orderby=STRING)? | all=STRING);
	public EQueryElements getEQueryAccess() {
		return pEQuery;
	}
	
	public ParserRule getEQueryRule() {
		return getEQueryAccess().getRule();
	}

	//ECustomQuery:
	//	dbType=('default' | STRING) columns=STRING ('FROM' from=STRING ('WHERE' where=STRING)? ('GROUP BY' groupBy=STRING)?
	//	('ORDER BY' orderby=STRING)? | all=STRING);
	public ECustomQueryElements getECustomQueryAccess() {
		return pECustomQuery;
	}
	
	public ParserRule getECustomQueryRule() {
		return getECustomQueryAccess().getRule();
	}

	//EObjectSection:
	//	entity=[EMappingEntity] ('(' descriminatedTypes+=[EMappingEntity] (',' descriminatedTypes+=[EMappingEntity])+ ')')?
	//	(prefix=ID ('{'
	//	attributes+=EMappingAttribute (',' attributes+=EMappingAttribute)*
	//	'}')?)? // ('exclude' '{' excludedProperties+=QualifiedName (',' excludedProperties+=QualifiedName)* '}' )?
	//;
	public EObjectSectionElements getEObjectSectionAccess() {
		return pEObjectSection;
	}
	
	public ParserRule getEObjectSectionRule() {
		return getEObjectSectionAccess().getRule();
	}

	//EMappingAttribute:
	//	pk?='primarykey'? property=QualifiedName '=>' (columnName=ID | resolved?='resolve' query=[ENamedQuery|QualifiedName]
	//	'(' parameters+=ID ')' | mapped?='map' map=EObjectSection);
	public EMappingAttributeElements getEMappingAttributeAccess() {
		return pEMappingAttribute;
	}
	
	public ParserRule getEMappingAttributeRule() {
		return getEMappingAttributeAccess().getRule();
	}

	//EType:
	//	'etype' url=STRING '#' name=ID;
	public ETypeElements getETypeAccess() {
		return pEType;
	}
	
	public ParserRule getETypeRule() {
		return getETypeAccess().getRule();
	}

	//QualifiedName:
	//	ID (=> '.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName '.' '*';
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return pQualifiedNameWithWildcard;
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
