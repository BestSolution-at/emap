/*
* generated by Xtext
*/
package at.bestsolution.persistence.emap.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class EMapGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class EMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMapping");
		private final Assignment cRootAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cRootAlternatives_0 = (Alternatives)cRootAssignment.eContents().get(0);
		private final RuleCall cRootEMappingBundleParserRuleCall_0_0 = (RuleCall)cRootAlternatives_0.eContents().get(0);
		private final RuleCall cRootEMappingEntityDefParserRuleCall_0_1 = (RuleCall)cRootAlternatives_0.eContents().get(1);
		
		//EMapping:
		//	root=(EMappingBundle | EMappingEntityDef);
		public ParserRule getRule() { return rule; }

		//root=(EMappingBundle | EMappingEntityDef)
		public Assignment getRootAssignment() { return cRootAssignment; }

		//EMappingBundle | EMappingEntityDef
		public Alternatives getRootAlternatives_0() { return cRootAlternatives_0; }

		//EMappingBundle
		public RuleCall getRootEMappingBundleParserRuleCall_0_0() { return cRootEMappingBundleParserRuleCall_0_0; }

		//EMappingEntityDef
		public RuleCall getRootEMappingEntityDefParserRuleCall_0_1() { return cRootEMappingEntityDefParserRuleCall_0_1; }
	}

	public class EMappingBundleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMappingBundle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Keyword cBundleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntitiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cEntitiesEMappingEntityCrossReference_4_0 = (CrossReference)cEntitiesAssignment_4.eContents().get(0);
		private final RuleCall cEntitiesEMappingEntityIDTerminalRuleCall_4_0_1 = (RuleCall)cEntitiesEMappingEntityCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEntitiesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cEntitiesEMappingEntityCrossReference_5_1_0 = (CrossReference)cEntitiesAssignment_5_1.eContents().get(0);
		private final RuleCall cEntitiesEMappingEntityIDTerminalRuleCall_5_1_0_1 = (RuleCall)cEntitiesEMappingEntityCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDatabasesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cDatabasesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDatabasesSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cDatabasesAssignment_7_1.eContents().get(0);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cDatabasesAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final RuleCall cDatabasesSTRINGTerminalRuleCall_7_2_1_0 = (RuleCall)cDatabasesAssignment_7_2_1.eContents().get(0);
		
		//EMappingBundle:
		//	imports+=Import* "bundle" name=ID "{" entities+=[EMappingEntity] ("," entities+=[EMappingEntity])* "}" ("databases"
		//	databases+=STRING ("," databases+=STRING)*)?;
		public ParserRule getRule() { return rule; }

		//imports+=Import* "bundle" name=ID "{" entities+=[EMappingEntity] ("," entities+=[EMappingEntity])* "}" ("databases"
		//databases+=STRING ("," databases+=STRING)*)?
		public Group getGroup() { return cGroup; }

		//imports+=Import*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }

		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }

		//"bundle"
		public Keyword getBundleKeyword_1() { return cBundleKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//entities+=[EMappingEntity]
		public Assignment getEntitiesAssignment_4() { return cEntitiesAssignment_4; }

		//[EMappingEntity]
		public CrossReference getEntitiesEMappingEntityCrossReference_4_0() { return cEntitiesEMappingEntityCrossReference_4_0; }

		//ID
		public RuleCall getEntitiesEMappingEntityIDTerminalRuleCall_4_0_1() { return cEntitiesEMappingEntityIDTerminalRuleCall_4_0_1; }

		//("," entities+=[EMappingEntity])*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//entities+=[EMappingEntity]
		public Assignment getEntitiesAssignment_5_1() { return cEntitiesAssignment_5_1; }

		//[EMappingEntity]
		public CrossReference getEntitiesEMappingEntityCrossReference_5_1_0() { return cEntitiesEMappingEntityCrossReference_5_1_0; }

		//ID
		public RuleCall getEntitiesEMappingEntityIDTerminalRuleCall_5_1_0_1() { return cEntitiesEMappingEntityIDTerminalRuleCall_5_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//("databases" databases+=STRING ("," databases+=STRING)*)?
		public Group getGroup_7() { return cGroup_7; }

		//"databases"
		public Keyword getDatabasesKeyword_7_0() { return cDatabasesKeyword_7_0; }

		//databases+=STRING
		public Assignment getDatabasesAssignment_7_1() { return cDatabasesAssignment_7_1; }

		//STRING
		public RuleCall getDatabasesSTRINGTerminalRuleCall_7_1_0() { return cDatabasesSTRINGTerminalRuleCall_7_1_0; }

		//("," databases+=STRING)*
		public Group getGroup_7_2() { return cGroup_7_2; }

		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }

		//databases+=STRING
		public Assignment getDatabasesAssignment_7_2_1() { return cDatabasesAssignment_7_2_1; }

		//STRING
		public RuleCall getDatabasesSTRINGTerminalRuleCall_7_2_1_0() { return cDatabasesSTRINGTerminalRuleCall_7_2_1_0; }
	}

	public class EMappingEntityDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMappingEntityDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPackageAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPackagePackageDeclarationParserRuleCall_0_0 = (RuleCall)cPackageAssignment_0.eContents().get(0);
		private final Assignment cImportsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportsImportParserRuleCall_1_0 = (RuleCall)cImportsAssignment_1.eContents().get(0);
		private final Assignment cEntityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEntityEMappingEntityParserRuleCall_2_0 = (RuleCall)cEntityAssignment_2.eContents().get(0);
		
		//EMappingEntityDef:
		//	package=PackageDeclaration imports+=Import* entity=EMappingEntity;
		public ParserRule getRule() { return rule; }

		//package=PackageDeclaration imports+=Import* entity=EMappingEntity
		public Group getGroup() { return cGroup; }

		//package=PackageDeclaration
		public Assignment getPackageAssignment_0() { return cPackageAssignment_0; }

		//PackageDeclaration
		public RuleCall getPackagePackageDeclarationParserRuleCall_0_0() { return cPackagePackageDeclarationParserRuleCall_0_0; }

		//imports+=Import*
		public Assignment getImportsAssignment_1() { return cImportsAssignment_1; }

		//Import
		public RuleCall getImportsImportParserRuleCall_1_0() { return cImportsImportParserRuleCall_1_0; }

		//entity=EMappingEntity
		public Assignment getEntityAssignment_2() { return cEntityAssignment_2; }

		//EMappingEntity
		public RuleCall getEntityEMappingEntityParserRuleCall_2_0() { return cEntityEMappingEntityParserRuleCall_2_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cImportedNamespaceAlternatives_1_0 = (Alternatives)cImportedNamespaceAssignment_1.eContents().get(0);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0 = (RuleCall)cImportedNamespaceAlternatives_1_0.eContents().get(0);
		private final RuleCall cImportedNamespaceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cImportedNamespaceAlternatives_1_0.eContents().get(1);
		
		//Import:
		//	"import" importedNamespace=(QualifiedNameWithWildcard | QualifiedName);
		public ParserRule getRule() { return rule; }

		//"import" importedNamespace=(QualifiedNameWithWildcard | QualifiedName)
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=(QualifiedNameWithWildcard | QualifiedName)
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//QualifiedNameWithWildcard | QualifiedName
		public Alternatives getImportedNamespaceAlternatives_1_0() { return cImportedNamespaceAlternatives_1_0; }

		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0; }

		//QualifiedName
		public RuleCall getImportedNamespaceQualifiedNameParserRuleCall_1_0_1() { return cImportedNamespaceQualifiedNameParserRuleCall_1_0_1; }
	}

	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//PackageDeclaration:
		//	"package" name=QualifiedName ";";
		public ParserRule getRule() { return rule; }

		//"package" name=QualifiedName ";"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class FQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//FQN:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//(=> "." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//=> "."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class EMappingEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMappingEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cAbstractAbstractKeyword_0_0 = (Keyword)cAbstractAssignment_0.eContents().get(0);
		private final Keyword cEntityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cExtensionTypeAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Alternatives cExtensionTypeAlternatives_3_0_0 = (Alternatives)cExtensionTypeAssignment_3_0.eContents().get(0);
		private final Keyword cExtensionTypeExtendsKeyword_3_0_0_0 = (Keyword)cExtensionTypeAlternatives_3_0_0.eContents().get(0);
		private final Keyword cExtensionTypeDerivedKeyword_3_0_0_1 = (Keyword)cExtensionTypeAlternatives_3_0_0.eContents().get(1);
		private final Assignment cParentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cParentEMappingEntityCrossReference_3_1_0 = (CrossReference)cParentAssignment_3_1.eContents().get(0);
		private final RuleCall cParentEMappingEntityQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cParentEMappingEntityCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEtypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEtypeETypeParserRuleCall_5_0 = (RuleCall)cEtypeAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAttributesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cAttributesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cAttributesEAttributeParserRuleCall_6_2_0 = (RuleCall)cAttributesAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cAttributesAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cAttributesEAttributeParserRuleCall_6_3_1_0 = (RuleCall)cAttributesAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cQueriesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Alternatives cAlternatives_7_2 = (Alternatives)cGroup_7.eContents().get(2);
		private final Assignment cNamedQueriesAssignment_7_2_0 = (Assignment)cAlternatives_7_2.eContents().get(0);
		private final RuleCall cNamedQueriesENamedQueryParserRuleCall_7_2_0_0 = (RuleCall)cNamedQueriesAssignment_7_2_0.eContents().get(0);
		private final Assignment cNamedCustomQueriesAssignment_7_2_1 = (Assignment)cAlternatives_7_2.eContents().get(1);
		private final RuleCall cNamedCustomQueriesENamedCustomQueryParserRuleCall_7_2_1_0 = (RuleCall)cNamedCustomQueriesAssignment_7_2_1.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Alternatives cAlternatives_7_3_1 = (Alternatives)cGroup_7_3.eContents().get(1);
		private final Assignment cNamedQueriesAssignment_7_3_1_0 = (Assignment)cAlternatives_7_3_1.eContents().get(0);
		private final RuleCall cNamedQueriesENamedQueryParserRuleCall_7_3_1_0_0 = (RuleCall)cNamedQueriesAssignment_7_3_1_0.eContents().get(0);
		private final Assignment cNamedCustomQueriesAssignment_7_3_1_1 = (Assignment)cAlternatives_7_3_1.eContents().get(1);
		private final RuleCall cNamedCustomQueriesENamedCustomQueryParserRuleCall_7_3_1_1_0 = (RuleCall)cNamedCustomQueriesAssignment_7_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cAsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cTableNameAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cTableNameIDTerminalRuleCall_9_1_0 = (RuleCall)cTableNameAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cDescriminatedbyKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cDescriminationColumnAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cDescriminationColumnIDTerminalRuleCall_10_1_0 = (RuleCall)cDescriminationColumnAssignment_10_1.eContents().get(0);
		
		//EMappingEntity:
		//	abstract?="abstract"? "entity" name=ID (extensionType=("extends" | "derived") parent=[EMappingEntity|QualifiedName])?
		//	"{" etype=EType ("attributes" "{" attributes+=EAttribute ("," attributes+=EAttribute)* "}")? ("queries" "{"
		//	(namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery) ("," (namedQueries+=ENamedQuery |
		//	namedCustomQueries+=ENamedCustomQuery))* "}")? "}" ("as" tableName=ID)? ("descriminatedby" descriminationColumn=ID)?;
		public ParserRule getRule() { return rule; }

		//abstract?="abstract"? "entity" name=ID (extensionType=("extends" | "derived") parent=[EMappingEntity|QualifiedName])?
		//"{" etype=EType ("attributes" "{" attributes+=EAttribute ("," attributes+=EAttribute)* "}")? ("queries" "{"
		//(namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery) ("," (namedQueries+=ENamedQuery |
		//namedCustomQueries+=ENamedCustomQuery))* "}")? "}" ("as" tableName=ID)? ("descriminatedby" descriminationColumn=ID)?
		public Group getGroup() { return cGroup; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_0() { return cAbstractAssignment_0; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_0_0() { return cAbstractAbstractKeyword_0_0; }

		//"entity"
		public Keyword getEntityKeyword_1() { return cEntityKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(extensionType=("extends" | "derived") parent=[EMappingEntity|QualifiedName])?
		public Group getGroup_3() { return cGroup_3; }

		//extensionType=("extends" | "derived")
		public Assignment getExtensionTypeAssignment_3_0() { return cExtensionTypeAssignment_3_0; }

		//"extends" | "derived"
		public Alternatives getExtensionTypeAlternatives_3_0_0() { return cExtensionTypeAlternatives_3_0_0; }

		//"extends"
		public Keyword getExtensionTypeExtendsKeyword_3_0_0_0() { return cExtensionTypeExtendsKeyword_3_0_0_0; }

		//"derived"
		public Keyword getExtensionTypeDerivedKeyword_3_0_0_1() { return cExtensionTypeDerivedKeyword_3_0_0_1; }

		//parent=[EMappingEntity|QualifiedName]
		public Assignment getParentAssignment_3_1() { return cParentAssignment_3_1; }

		//[EMappingEntity|QualifiedName]
		public CrossReference getParentEMappingEntityCrossReference_3_1_0() { return cParentEMappingEntityCrossReference_3_1_0; }

		//QualifiedName
		public RuleCall getParentEMappingEntityQualifiedNameParserRuleCall_3_1_0_1() { return cParentEMappingEntityQualifiedNameParserRuleCall_3_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//etype=EType
		public Assignment getEtypeAssignment_5() { return cEtypeAssignment_5; }

		//EType
		public RuleCall getEtypeETypeParserRuleCall_5_0() { return cEtypeETypeParserRuleCall_5_0; }

		//("attributes" "{" attributes+=EAttribute ("," attributes+=EAttribute)* "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"attributes"
		public Keyword getAttributesKeyword_6_0() { return cAttributesKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//attributes+=EAttribute
		public Assignment getAttributesAssignment_6_2() { return cAttributesAssignment_6_2; }

		//EAttribute
		public RuleCall getAttributesEAttributeParserRuleCall_6_2_0() { return cAttributesEAttributeParserRuleCall_6_2_0; }

		//("," attributes+=EAttribute)*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//attributes+=EAttribute
		public Assignment getAttributesAssignment_6_3_1() { return cAttributesAssignment_6_3_1; }

		//EAttribute
		public RuleCall getAttributesEAttributeParserRuleCall_6_3_1_0() { return cAttributesEAttributeParserRuleCall_6_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }

		//("queries" "{" (namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery) ("," (namedQueries+=ENamedQuery |
		//namedCustomQueries+=ENamedCustomQuery))* "}")?
		public Group getGroup_7() { return cGroup_7; }

		//"queries"
		public Keyword getQueriesKeyword_7_0() { return cQueriesKeyword_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery
		public Alternatives getAlternatives_7_2() { return cAlternatives_7_2; }

		//namedQueries+=ENamedQuery
		public Assignment getNamedQueriesAssignment_7_2_0() { return cNamedQueriesAssignment_7_2_0; }

		//ENamedQuery
		public RuleCall getNamedQueriesENamedQueryParserRuleCall_7_2_0_0() { return cNamedQueriesENamedQueryParserRuleCall_7_2_0_0; }

		//namedCustomQueries+=ENamedCustomQuery
		public Assignment getNamedCustomQueriesAssignment_7_2_1() { return cNamedCustomQueriesAssignment_7_2_1; }

		//ENamedCustomQuery
		public RuleCall getNamedCustomQueriesENamedCustomQueryParserRuleCall_7_2_1_0() { return cNamedCustomQueriesENamedCustomQueryParserRuleCall_7_2_1_0; }

		//("," (namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery))*
		public Group getGroup_7_3() { return cGroup_7_3; }

		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }

		//namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery
		public Alternatives getAlternatives_7_3_1() { return cAlternatives_7_3_1; }

		//namedQueries+=ENamedQuery
		public Assignment getNamedQueriesAssignment_7_3_1_0() { return cNamedQueriesAssignment_7_3_1_0; }

		//ENamedQuery
		public RuleCall getNamedQueriesENamedQueryParserRuleCall_7_3_1_0_0() { return cNamedQueriesENamedQueryParserRuleCall_7_3_1_0_0; }

		//namedCustomQueries+=ENamedCustomQuery
		public Assignment getNamedCustomQueriesAssignment_7_3_1_1() { return cNamedCustomQueriesAssignment_7_3_1_1; }

		//ENamedCustomQuery
		public RuleCall getNamedCustomQueriesENamedCustomQueryParserRuleCall_7_3_1_1_0() { return cNamedCustomQueriesENamedCustomQueryParserRuleCall_7_3_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }

		//("as" tableName=ID)?
		public Group getGroup_9() { return cGroup_9; }

		//"as"
		public Keyword getAsKeyword_9_0() { return cAsKeyword_9_0; }

		//tableName=ID
		public Assignment getTableNameAssignment_9_1() { return cTableNameAssignment_9_1; }

		//ID
		public RuleCall getTableNameIDTerminalRuleCall_9_1_0() { return cTableNameIDTerminalRuleCall_9_1_0; }

		//("descriminatedby" descriminationColumn=ID)?
		public Group getGroup_10() { return cGroup_10; }

		//"descriminatedby"
		public Keyword getDescriminatedbyKeyword_10_0() { return cDescriminatedbyKeyword_10_0; }

		//descriminationColumn=ID
		public Assignment getDescriminationColumnAssignment_10_1() { return cDescriminationColumnAssignment_10_1; }

		//ID
		public RuleCall getDescriminationColumnIDTerminalRuleCall_10_1_0() { return cDescriminationColumnIDTerminalRuleCall_10_1_0; }
	}

	public class EAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cPkAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cPkPrimarykeyKeyword_0_0_0 = (Keyword)cPkAssignment_0_0.eContents().get(0);
		private final Assignment cForcedFkAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cForcedFkForcedFkKeyword_0_1_0 = (Keyword)cForcedFkAssignment_0_1.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cColumnNameAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cColumnNameIDTerminalRuleCall_3_0_0_0 = (RuleCall)cColumnNameAssignment_3_0_0.eContents().get(0);
		private final Group cGroup_3_0_1 = (Group)cGroup_3_0.eContents().get(1);
		private final Keyword cGeneratedbyKeyword_3_0_1_0 = (Keyword)cGroup_3_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_0_1_1 = (Keyword)cGroup_3_0_1.eContents().get(1);
		private final Assignment cValueGeneratorsAssignment_3_0_1_2 = (Assignment)cGroup_3_0_1.eContents().get(2);
		private final RuleCall cValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_2_0 = (RuleCall)cValueGeneratorsAssignment_3_0_1_2.eContents().get(0);
		private final Group cGroup_3_0_1_3 = (Group)cGroup_3_0_1.eContents().get(3);
		private final Keyword cCommaKeyword_3_0_1_3_0 = (Keyword)cGroup_3_0_1_3.eContents().get(0);
		private final Assignment cValueGeneratorsAssignment_3_0_1_3_1 = (Assignment)cGroup_3_0_1_3.eContents().get(1);
		private final RuleCall cValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_3_1_0 = (RuleCall)cValueGeneratorsAssignment_3_0_1_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_0_1_4 = (Keyword)cGroup_3_0_1.eContents().get(4);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cResolvedAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final Keyword cResolvedResolveKeyword_3_1_0_0 = (Keyword)cResolvedAssignment_3_1_0.eContents().get(0);
		private final Assignment cQueryAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cQueryENamedQueryCrossReference_3_1_1_0 = (CrossReference)cQueryAssignment_3_1_1.eContents().get(0);
		private final RuleCall cQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1 = (RuleCall)cQueryENamedQueryCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Assignment cParametersAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cParametersIDTerminalRuleCall_3_1_3_0 = (RuleCall)cParametersAssignment_3_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_1_4 = (Keyword)cGroup_3_1.eContents().get(4);
		private final Group cGroup_3_1_5 = (Group)cGroup_3_1.eContents().get(5);
		private final Assignment cOppositeAssignment_3_1_5_0 = (Assignment)cGroup_3_1_5.eContents().get(0);
		private final CrossReference cOppositeEAttributeCrossReference_3_1_5_0_0 = (CrossReference)cOppositeAssignment_3_1_5_0.eContents().get(0);
		private final RuleCall cOppositeEAttributeQualifiedNameParserRuleCall_3_1_5_0_0_1 = (RuleCall)cOppositeEAttributeCrossReference_3_1_5_0_0.eContents().get(1);
		private final Keyword cOnKeyword_3_1_5_1 = (Keyword)cGroup_3_1_5.eContents().get(1);
		private final Assignment cRelationTableAssignment_3_1_5_2 = (Assignment)cGroup_3_1_5.eContents().get(2);
		private final RuleCall cRelationTableIDTerminalRuleCall_3_1_5_2_0 = (RuleCall)cRelationTableAssignment_3_1_5_2.eContents().get(0);
		
		//EAttribute:
		//	(pk?="primarykey"? | forcedFk?="forced-fk") name=ID "=>" (columnName=ID ("generatedby" "{"
		//	valueGenerators+=EValueGenerator ("," valueGenerators+=EValueGenerator)* "}")? | resolved?="resolve"
		//	query=[ENamedQuery|QualifiedName] "(" parameters+=ID ")" (opposite=[EAttribute|QualifiedName] "on"
		//	relationTable=ID)?);
		public ParserRule getRule() { return rule; }

		//(pk?="primarykey"? | forcedFk?="forced-fk") name=ID "=>" (columnName=ID ("generatedby" "{"
		//valueGenerators+=EValueGenerator ("," valueGenerators+=EValueGenerator)* "}")? | resolved?="resolve"
		//query=[ENamedQuery|QualifiedName] "(" parameters+=ID ")" (opposite=[EAttribute|QualifiedName] "on" relationTable=ID)?)
		public Group getGroup() { return cGroup; }

		//pk?="primarykey"? | forcedFk?="forced-fk"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//pk?="primarykey"?
		public Assignment getPkAssignment_0_0() { return cPkAssignment_0_0; }

		//"primarykey"
		public Keyword getPkPrimarykeyKeyword_0_0_0() { return cPkPrimarykeyKeyword_0_0_0; }

		//forcedFk?="forced-fk"
		public Assignment getForcedFkAssignment_0_1() { return cForcedFkAssignment_0_1; }

		//"forced-fk"
		public Keyword getForcedFkForcedFkKeyword_0_1_0() { return cForcedFkForcedFkKeyword_0_1_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_2() { return cEqualsSignGreaterThanSignKeyword_2; }

		//columnName=ID ("generatedby" "{" valueGenerators+=EValueGenerator ("," valueGenerators+=EValueGenerator)* "}")? |
		//resolved?="resolve" query=[ENamedQuery|QualifiedName] "(" parameters+=ID ")" (opposite=[EAttribute|QualifiedName] "on"
		//relationTable=ID)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//columnName=ID ("generatedby" "{" valueGenerators+=EValueGenerator ("," valueGenerators+=EValueGenerator)* "}")?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//columnName=ID
		public Assignment getColumnNameAssignment_3_0_0() { return cColumnNameAssignment_3_0_0; }

		//ID
		public RuleCall getColumnNameIDTerminalRuleCall_3_0_0_0() { return cColumnNameIDTerminalRuleCall_3_0_0_0; }

		//("generatedby" "{" valueGenerators+=EValueGenerator ("," valueGenerators+=EValueGenerator)* "}")?
		public Group getGroup_3_0_1() { return cGroup_3_0_1; }

		//"generatedby"
		public Keyword getGeneratedbyKeyword_3_0_1_0() { return cGeneratedbyKeyword_3_0_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0_1_1() { return cLeftCurlyBracketKeyword_3_0_1_1; }

		//valueGenerators+=EValueGenerator
		public Assignment getValueGeneratorsAssignment_3_0_1_2() { return cValueGeneratorsAssignment_3_0_1_2; }

		//EValueGenerator
		public RuleCall getValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_2_0() { return cValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_2_0; }

		//("," valueGenerators+=EValueGenerator)*
		public Group getGroup_3_0_1_3() { return cGroup_3_0_1_3; }

		//","
		public Keyword getCommaKeyword_3_0_1_3_0() { return cCommaKeyword_3_0_1_3_0; }

		//valueGenerators+=EValueGenerator
		public Assignment getValueGeneratorsAssignment_3_0_1_3_1() { return cValueGeneratorsAssignment_3_0_1_3_1; }

		//EValueGenerator
		public RuleCall getValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_3_1_0() { return cValueGeneratorsEValueGeneratorParserRuleCall_3_0_1_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_0_1_4() { return cRightCurlyBracketKeyword_3_0_1_4; }

		//resolved?="resolve" query=[ENamedQuery|QualifiedName] "(" parameters+=ID ")" (opposite=[EAttribute|QualifiedName] "on"
		//relationTable=ID)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//resolved?="resolve"
		public Assignment getResolvedAssignment_3_1_0() { return cResolvedAssignment_3_1_0; }

		//"resolve"
		public Keyword getResolvedResolveKeyword_3_1_0_0() { return cResolvedResolveKeyword_3_1_0_0; }

		//query=[ENamedQuery|QualifiedName]
		public Assignment getQueryAssignment_3_1_1() { return cQueryAssignment_3_1_1; }

		//[ENamedQuery|QualifiedName]
		public CrossReference getQueryENamedQueryCrossReference_3_1_1_0() { return cQueryENamedQueryCrossReference_3_1_1_0; }

		//QualifiedName
		public RuleCall getQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1() { return cQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1_2() { return cLeftParenthesisKeyword_3_1_2; }

		//parameters+=ID
		public Assignment getParametersAssignment_3_1_3() { return cParametersAssignment_3_1_3; }

		//ID
		public RuleCall getParametersIDTerminalRuleCall_3_1_3_0() { return cParametersIDTerminalRuleCall_3_1_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_1_4() { return cRightParenthesisKeyword_3_1_4; }

		//(opposite=[EAttribute|QualifiedName] "on" relationTable=ID)?
		public Group getGroup_3_1_5() { return cGroup_3_1_5; }

		//opposite=[EAttribute|QualifiedName]
		public Assignment getOppositeAssignment_3_1_5_0() { return cOppositeAssignment_3_1_5_0; }

		//[EAttribute|QualifiedName]
		public CrossReference getOppositeEAttributeCrossReference_3_1_5_0_0() { return cOppositeEAttributeCrossReference_3_1_5_0_0; }

		//QualifiedName
		public RuleCall getOppositeEAttributeQualifiedNameParserRuleCall_3_1_5_0_0_1() { return cOppositeEAttributeQualifiedNameParserRuleCall_3_1_5_0_0_1; }

		//"on"
		public Keyword getOnKeyword_3_1_5_1() { return cOnKeyword_3_1_5_1; }

		//relationTable=ID
		public Assignment getRelationTableAssignment_3_1_5_2() { return cRelationTableAssignment_3_1_5_2; }

		//ID
		public RuleCall getRelationTableIDTerminalRuleCall_3_1_5_2_0() { return cRelationTableIDTerminalRuleCall_3_1_5_2_0; }
	}

	public class EValueGeneratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EValueGenerator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbTypeSTRINGTerminalRuleCall_0_0 = (RuleCall)cDbTypeAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cAutokeyAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cAutokeyAutokeyKeyword_1_0_0 = (Keyword)cAutokeyAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cQueryKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cQueryAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cQuerySTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cQueryAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Keyword cSeqnextKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cSequenceAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cSequenceSTRINGTerminalRuleCall_1_2_1_0 = (RuleCall)cSequenceAssignment_1_2_1.eContents().get(0);
		
		//EValueGenerator:
		//	dbType=STRING (autokey?="autokey" | "query" query=STRING | "seqnext" sequence=STRING);
		public ParserRule getRule() { return rule; }

		//dbType=STRING (autokey?="autokey" | "query" query=STRING | "seqnext" sequence=STRING)
		public Group getGroup() { return cGroup; }

		//dbType=STRING
		public Assignment getDbTypeAssignment_0() { return cDbTypeAssignment_0; }

		//STRING
		public RuleCall getDbTypeSTRINGTerminalRuleCall_0_0() { return cDbTypeSTRINGTerminalRuleCall_0_0; }

		//autokey?="autokey" | "query" query=STRING | "seqnext" sequence=STRING
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//autokey?="autokey"
		public Assignment getAutokeyAssignment_1_0() { return cAutokeyAssignment_1_0; }

		//"autokey"
		public Keyword getAutokeyAutokeyKeyword_1_0_0() { return cAutokeyAutokeyKeyword_1_0_0; }

		//"query" query=STRING
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"query"
		public Keyword getQueryKeyword_1_1_0() { return cQueryKeyword_1_1_0; }

		//query=STRING
		public Assignment getQueryAssignment_1_1_1() { return cQueryAssignment_1_1_1; }

		//STRING
		public RuleCall getQuerySTRINGTerminalRuleCall_1_1_1_0() { return cQuerySTRINGTerminalRuleCall_1_1_1_0; }

		//"seqnext" sequence=STRING
		public Group getGroup_1_2() { return cGroup_1_2; }

		//"seqnext"
		public Keyword getSeqnextKeyword_1_2_0() { return cSeqnextKeyword_1_2_0; }

		//sequence=STRING
		public Assignment getSequenceAssignment_1_2_1() { return cSequenceAssignment_1_2_1; }

		//STRING
		public RuleCall getSequenceSTRINGTerminalRuleCall_1_2_1_0() { return cSequenceSTRINGTerminalRuleCall_1_2_1_0; }
	}

	public class ENamedQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ENamedQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReturnTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cReturnTypeReturnTypeEnumRuleCall_0_0 = (RuleCall)cReturnTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Assignment cParametersAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cParametersEParameterParserRuleCall_2_1_0_0 = (RuleCall)cParametersAssignment_2_1_0.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cGroup_2_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cParametersEParameterParserRuleCall_2_1_1_1_0 = (RuleCall)cParametersAssignment_2_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cQueriesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cQueriesEQueryParserRuleCall_4_0 = (RuleCall)cQueriesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cQueriesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cQueriesEQueryParserRuleCall_5_1_0 = (RuleCall)cQueriesAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ENamedQuery:
		//	returnType=ReturnType? name=ID ("(" (parameters+=EParameter ("," parameters+=EParameter)*)? ")")? "{" queries+=EQuery
		//	("," queries+=EQuery)* "}";
		public ParserRule getRule() { return rule; }

		//returnType=ReturnType? name=ID ("(" (parameters+=EParameter ("," parameters+=EParameter)*)? ")")? "{" queries+=EQuery
		//("," queries+=EQuery)* "}"
		public Group getGroup() { return cGroup; }

		//returnType=ReturnType?
		public Assignment getReturnTypeAssignment_0() { return cReturnTypeAssignment_0; }

		//ReturnType
		public RuleCall getReturnTypeReturnTypeEnumRuleCall_0_0() { return cReturnTypeReturnTypeEnumRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("(" (parameters+=EParameter ("," parameters+=EParameter)*)? ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//(parameters+=EParameter ("," parameters+=EParameter)*)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//parameters+=EParameter
		public Assignment getParametersAssignment_2_1_0() { return cParametersAssignment_2_1_0; }

		//EParameter
		public RuleCall getParametersEParameterParserRuleCall_2_1_0_0() { return cParametersEParameterParserRuleCall_2_1_0_0; }

		//("," parameters+=EParameter)*
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }

		//","
		public Keyword getCommaKeyword_2_1_1_0() { return cCommaKeyword_2_1_1_0; }

		//parameters+=EParameter
		public Assignment getParametersAssignment_2_1_1_1() { return cParametersAssignment_2_1_1_1; }

		//EParameter
		public RuleCall getParametersEParameterParserRuleCall_2_1_1_1_0() { return cParametersEParameterParserRuleCall_2_1_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//queries+=EQuery
		public Assignment getQueriesAssignment_4() { return cQueriesAssignment_4; }

		//EQuery
		public RuleCall getQueriesEQueryParserRuleCall_4_0() { return cQueriesEQueryParserRuleCall_4_0; }

		//("," queries+=EQuery)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//queries+=EQuery
		public Assignment getQueriesAssignment_5_1() { return cQueriesAssignment_5_1; }

		//EQuery
		public RuleCall getQueriesEQueryParserRuleCall_5_1_0() { return cQueriesEQueryParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EPrimtiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EPrimtiveType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cIntKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cLongKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDoubleKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cFloatKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cBooleanKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final RuleCall cFQNParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//EPrimtiveType:
		//	"int" | "long" | "double" | "float" | "boolean" | FQN;
		public ParserRule getRule() { return rule; }

		//"int" | "long" | "double" | "float" | "boolean" | FQN
		public Alternatives getAlternatives() { return cAlternatives; }

		//"int"
		public Keyword getIntKeyword_0() { return cIntKeyword_0; }

		//"long"
		public Keyword getLongKeyword_1() { return cLongKeyword_1; }

		//"double"
		public Keyword getDoubleKeyword_2() { return cDoubleKeyword_2; }

		//"float"
		public Keyword getFloatKeyword_3() { return cFloatKeyword_3; }

		//"boolean"
		public Keyword getBooleanKeyword_4() { return cBooleanKeyword_4; }

		//FQN
		public RuleCall getFQNParserRuleCall_5() { return cFQNParserRuleCall_5; }
	}

	public class EMapTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMapType");
		private final Keyword cMapKeyword = (Keyword)rule.eContents().get(1);
		
		//EMapType:
		//	"map";
		public ParserRule getRule() { return rule; }

		//"map"
		public Keyword getMapKeyword() { return cMapKeyword; }
	}

	public class ENamedCustomQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ENamedCustomQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cReturnTypeAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cReturnTypeEReturnTypeParserRuleCall_0_0_0 = (RuleCall)cReturnTypeAssignment_0_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Assignment cListAssignment_0_1_0 = (Assignment)cGroup_0_1.eContents().get(0);
		private final Keyword cListLeftSquareBracketKeyword_0_1_0_0 = (Keyword)cListAssignment_0_1_0.eContents().get(0);
		private final Assignment cReturnTypeAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cReturnTypeEReturnTypeParserRuleCall_0_1_1_0 = (RuleCall)cReturnTypeAssignment_0_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_0_1_2 = (Keyword)cGroup_0_1.eContents().get(2);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Assignment cParametersAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cParametersEParameterParserRuleCall_2_1_0_0 = (RuleCall)cParametersAssignment_2_1_0.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cGroup_2_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cParametersEParameterParserRuleCall_2_1_1_1_0 = (RuleCall)cParametersAssignment_2_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cQueriesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cQueriesECustomQueryParserRuleCall_4_0 = (RuleCall)cQueriesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ENamedCustomQuery:
		//	(returnType=EReturnType | list?="[" returnType=EReturnType "]") name=ID ("(" (parameters+=EParameter (","
		//	parameters+=EParameter)*)? ")")? "{" queries+=ECustomQuery "}";
		public ParserRule getRule() { return rule; }

		//(returnType=EReturnType | list?="[" returnType=EReturnType "]") name=ID ("(" (parameters+=EParameter (","
		//parameters+=EParameter)*)? ")")? "{" queries+=ECustomQuery "}"
		public Group getGroup() { return cGroup; }

		//returnType=EReturnType | list?="[" returnType=EReturnType "]"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//returnType=EReturnType
		public Assignment getReturnTypeAssignment_0_0() { return cReturnTypeAssignment_0_0; }

		//EReturnType
		public RuleCall getReturnTypeEReturnTypeParserRuleCall_0_0_0() { return cReturnTypeEReturnTypeParserRuleCall_0_0_0; }

		//list?="[" returnType=EReturnType "]"
		public Group getGroup_0_1() { return cGroup_0_1; }

		//list?="["
		public Assignment getListAssignment_0_1_0() { return cListAssignment_0_1_0; }

		//"["
		public Keyword getListLeftSquareBracketKeyword_0_1_0_0() { return cListLeftSquareBracketKeyword_0_1_0_0; }

		//returnType=EReturnType
		public Assignment getReturnTypeAssignment_0_1_1() { return cReturnTypeAssignment_0_1_1; }

		//EReturnType
		public RuleCall getReturnTypeEReturnTypeParserRuleCall_0_1_1_0() { return cReturnTypeEReturnTypeParserRuleCall_0_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_0_1_2() { return cRightSquareBracketKeyword_0_1_2; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("(" (parameters+=EParameter ("," parameters+=EParameter)*)? ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//(parameters+=EParameter ("," parameters+=EParameter)*)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//parameters+=EParameter
		public Assignment getParametersAssignment_2_1_0() { return cParametersAssignment_2_1_0; }

		//EParameter
		public RuleCall getParametersEParameterParserRuleCall_2_1_0_0() { return cParametersEParameterParserRuleCall_2_1_0_0; }

		//("," parameters+=EParameter)*
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }

		//","
		public Keyword getCommaKeyword_2_1_1_0() { return cCommaKeyword_2_1_1_0; }

		//parameters+=EParameter
		public Assignment getParametersAssignment_2_1_1_1() { return cParametersAssignment_2_1_1_1; }

		//EParameter
		public RuleCall getParametersEParameterParserRuleCall_2_1_1_1_0() { return cParametersEParameterParserRuleCall_2_1_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//queries+=ECustomQuery
		public Assignment getQueriesAssignment_4() { return cQueriesAssignment_4; }

		//ECustomQuery
		public RuleCall getQueriesECustomQueryParserRuleCall_4_0() { return cQueriesECustomQueryParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EReturnTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EReturnType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEPredefinedTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cETypeDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EReturnType:
		//	EPredefinedType | ETypeDef;
		public ParserRule getRule() { return rule; }

		//EPredefinedType | ETypeDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//EPredefinedType
		public RuleCall getEPredefinedTypeParserRuleCall_0() { return cEPredefinedTypeParserRuleCall_0; }

		//ETypeDef
		public RuleCall getETypeDefParserRuleCall_1() { return cETypeDefParserRuleCall_1; }
	}

	public class EPredefinedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EPredefinedType");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cRefAlternatives_0 = (Alternatives)cRefAssignment.eContents().get(0);
		private final RuleCall cRefEMapTypeParserRuleCall_0_0 = (RuleCall)cRefAlternatives_0.eContents().get(0);
		private final RuleCall cRefEPrimtiveTypeParserRuleCall_0_1 = (RuleCall)cRefAlternatives_0.eContents().get(1);
		
		//EPredefinedType:
		//	ref=(EMapType | EPrimtiveType);
		public ParserRule getRule() { return rule; }

		//ref=(EMapType | EPrimtiveType)
		public Assignment getRefAssignment() { return cRefAssignment; }

		//EMapType | EPrimtiveType
		public Alternatives getRefAlternatives_0() { return cRefAlternatives_0; }

		//EMapType
		public RuleCall getRefEMapTypeParserRuleCall_0_0() { return cRefEMapTypeParserRuleCall_0_0; }

		//EPrimtiveType
		public RuleCall getRefEPrimtiveTypeParserRuleCall_0_1() { return cRefEPrimtiveTypeParserRuleCall_0_1; }
	}

	public class ETypeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ETypeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypedefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameFQNParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypesEValueTypeAttributeParserRuleCall_3_0 = (RuleCall)cTypesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypesEValueTypeAttributeParserRuleCall_4_1_0 = (RuleCall)cTypesAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ETypeDef:
		//	"typedef" name=FQN "(" types+=EValueTypeAttribute ("," types+=EValueTypeAttribute)* ")";
		public ParserRule getRule() { return rule; }

		//"typedef" name=FQN "(" types+=EValueTypeAttribute ("," types+=EValueTypeAttribute)* ")"
		public Group getGroup() { return cGroup; }

		//"typedef"
		public Keyword getTypedefKeyword_0() { return cTypedefKeyword_0; }

		//name=FQN
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//FQN
		public RuleCall getNameFQNParserRuleCall_1_0() { return cNameFQNParserRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//types+=EValueTypeAttribute
		public Assignment getTypesAssignment_3() { return cTypesAssignment_3; }

		//EValueTypeAttribute
		public RuleCall getTypesEValueTypeAttributeParserRuleCall_3_0() { return cTypesEValueTypeAttributeParserRuleCall_3_0; }

		//("," types+=EValueTypeAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//types+=EValueTypeAttribute
		public Assignment getTypesAssignment_4_1() { return cTypesAssignment_4_1; }

		//EValueTypeAttribute
		public RuleCall getTypesEValueTypeAttributeParserRuleCall_4_1_0() { return cTypesEValueTypeAttributeParserRuleCall_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class EValueTypeAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EValueTypeAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeEPrimtiveTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//EValueTypeAttribute:
		//	type=EPrimtiveType name=ID;
		public ParserRule getRule() { return rule; }

		//type=EPrimtiveType name=ID
		public Group getGroup() { return cGroup; }

		//type=EPrimtiveType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//EPrimtiveType
		public RuleCall getTypeEPrimtiveTypeParserRuleCall_0_0() { return cTypeEPrimtiveTypeParserRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class EParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIdPrimarykeyKeyword_0_0 = (Keyword)cIdAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeEPrimtiveTypeParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//EParameter:
		//	id?="primarykey"? type=EPrimtiveType name=ID;
		public ParserRule getRule() { return rule; }

		//id?="primarykey"? type=EPrimtiveType name=ID
		public Group getGroup() { return cGroup; }

		//id?="primarykey"?
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }

		//"primarykey"
		public Keyword getIdPrimarykeyKeyword_0_0() { return cIdPrimarykeyKeyword_0_0; }

		//type=EPrimtiveType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//EPrimtiveType
		public RuleCall getTypeEPrimtiveTypeParserRuleCall_1_0() { return cTypeEPrimtiveTypeParserRuleCall_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class EQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cDbTypeAlternatives_0_0 = (Alternatives)cDbTypeAssignment_0.eContents().get(0);
		private final Keyword cDbTypeDefaultKeyword_0_0_0 = (Keyword)cDbTypeAlternatives_0_0.eContents().get(0);
		private final RuleCall cDbTypeSTRINGTerminalRuleCall_0_0_1 = (RuleCall)cDbTypeAlternatives_0_0.eContents().get(1);
		private final Assignment cMappingAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMappingEObjectSectionParserRuleCall_1_0 = (RuleCall)cMappingAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cFROMKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cFromAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cFromSTRINGTerminalRuleCall_2_0_1_0 = (RuleCall)cFromAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_0_2 = (Group)cGroup_2_0.eContents().get(2);
		private final Keyword cWHEREKeyword_2_0_2_0 = (Keyword)cGroup_2_0_2.eContents().get(0);
		private final Assignment cWhereAssignment_2_0_2_1 = (Assignment)cGroup_2_0_2.eContents().get(1);
		private final RuleCall cWhereSTRINGTerminalRuleCall_2_0_2_1_0 = (RuleCall)cWhereAssignment_2_0_2_1.eContents().get(0);
		private final Group cGroup_2_0_3 = (Group)cGroup_2_0.eContents().get(3);
		private final Keyword cGROUPBYKeyword_2_0_3_0 = (Keyword)cGroup_2_0_3.eContents().get(0);
		private final Assignment cGroupByAssignment_2_0_3_1 = (Assignment)cGroup_2_0_3.eContents().get(1);
		private final RuleCall cGroupBySTRINGTerminalRuleCall_2_0_3_1_0 = (RuleCall)cGroupByAssignment_2_0_3_1.eContents().get(0);
		private final Group cGroup_2_0_4 = (Group)cGroup_2_0.eContents().get(4);
		private final Keyword cORDERBYKeyword_2_0_4_0 = (Keyword)cGroup_2_0_4.eContents().get(0);
		private final Assignment cOrderbyAssignment_2_0_4_1 = (Assignment)cGroup_2_0_4.eContents().get(1);
		private final RuleCall cOrderbySTRINGTerminalRuleCall_2_0_4_1_0 = (RuleCall)cOrderbyAssignment_2_0_4_1.eContents().get(0);
		private final Assignment cAllAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cAllSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cAllAssignment_2_1.eContents().get(0);
		
		//EQuery:
		//	dbType=("default" | STRING) mapping=EObjectSection ("FROM" from=STRING ("WHERE" where=STRING)? ("GROUP BY"
		//	groupBy=STRING)? ("ORDER BY" orderby=STRING)? | all=STRING);
		public ParserRule getRule() { return rule; }

		//dbType=("default" | STRING) mapping=EObjectSection ("FROM" from=STRING ("WHERE" where=STRING)? ("GROUP BY"
		//groupBy=STRING)? ("ORDER BY" orderby=STRING)? | all=STRING)
		public Group getGroup() { return cGroup; }

		//dbType=("default" | STRING)
		public Assignment getDbTypeAssignment_0() { return cDbTypeAssignment_0; }

		//"default" | STRING
		public Alternatives getDbTypeAlternatives_0_0() { return cDbTypeAlternatives_0_0; }

		//"default"
		public Keyword getDbTypeDefaultKeyword_0_0_0() { return cDbTypeDefaultKeyword_0_0_0; }

		//STRING
		public RuleCall getDbTypeSTRINGTerminalRuleCall_0_0_1() { return cDbTypeSTRINGTerminalRuleCall_0_0_1; }

		//mapping=EObjectSection
		public Assignment getMappingAssignment_1() { return cMappingAssignment_1; }

		//EObjectSection
		public RuleCall getMappingEObjectSectionParserRuleCall_1_0() { return cMappingEObjectSectionParserRuleCall_1_0; }

		//"FROM" from=STRING ("WHERE" where=STRING)? ("GROUP BY" groupBy=STRING)? ("ORDER BY" orderby=STRING)? | all=STRING
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"FROM" from=STRING ("WHERE" where=STRING)? ("GROUP BY" groupBy=STRING)? ("ORDER BY" orderby=STRING)?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"FROM"
		public Keyword getFROMKeyword_2_0_0() { return cFROMKeyword_2_0_0; }

		//from=STRING
		public Assignment getFromAssignment_2_0_1() { return cFromAssignment_2_0_1; }

		//STRING
		public RuleCall getFromSTRINGTerminalRuleCall_2_0_1_0() { return cFromSTRINGTerminalRuleCall_2_0_1_0; }

		//("WHERE" where=STRING)?
		public Group getGroup_2_0_2() { return cGroup_2_0_2; }

		//"WHERE"
		public Keyword getWHEREKeyword_2_0_2_0() { return cWHEREKeyword_2_0_2_0; }

		//where=STRING
		public Assignment getWhereAssignment_2_0_2_1() { return cWhereAssignment_2_0_2_1; }

		//STRING
		public RuleCall getWhereSTRINGTerminalRuleCall_2_0_2_1_0() { return cWhereSTRINGTerminalRuleCall_2_0_2_1_0; }

		//("GROUP BY" groupBy=STRING)?
		public Group getGroup_2_0_3() { return cGroup_2_0_3; }

		//"GROUP BY"
		public Keyword getGROUPBYKeyword_2_0_3_0() { return cGROUPBYKeyword_2_0_3_0; }

		//groupBy=STRING
		public Assignment getGroupByAssignment_2_0_3_1() { return cGroupByAssignment_2_0_3_1; }

		//STRING
		public RuleCall getGroupBySTRINGTerminalRuleCall_2_0_3_1_0() { return cGroupBySTRINGTerminalRuleCall_2_0_3_1_0; }

		//("ORDER BY" orderby=STRING)?
		public Group getGroup_2_0_4() { return cGroup_2_0_4; }

		//"ORDER BY"
		public Keyword getORDERBYKeyword_2_0_4_0() { return cORDERBYKeyword_2_0_4_0; }

		//orderby=STRING
		public Assignment getOrderbyAssignment_2_0_4_1() { return cOrderbyAssignment_2_0_4_1; }

		//STRING
		public RuleCall getOrderbySTRINGTerminalRuleCall_2_0_4_1_0() { return cOrderbySTRINGTerminalRuleCall_2_0_4_1_0; }

		//all=STRING
		public Assignment getAllAssignment_2_1() { return cAllAssignment_2_1; }

		//STRING
		public RuleCall getAllSTRINGTerminalRuleCall_2_1_0() { return cAllSTRINGTerminalRuleCall_2_1_0; }
	}

	public class ECustomQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ECustomQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cDbTypeAlternatives_0_0 = (Alternatives)cDbTypeAssignment_0.eContents().get(0);
		private final Keyword cDbTypeDefaultKeyword_0_0_0 = (Keyword)cDbTypeAlternatives_0_0.eContents().get(0);
		private final RuleCall cDbTypeSTRINGTerminalRuleCall_0_0_1 = (RuleCall)cDbTypeAlternatives_0_0.eContents().get(1);
		private final Assignment cColumnsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cColumnsSTRINGTerminalRuleCall_1_0 = (RuleCall)cColumnsAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cFROMKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cFromAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cFromSTRINGTerminalRuleCall_2_0_1_0 = (RuleCall)cFromAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_0_2 = (Group)cGroup_2_0.eContents().get(2);
		private final Keyword cWHEREKeyword_2_0_2_0 = (Keyword)cGroup_2_0_2.eContents().get(0);
		private final Assignment cWhereAssignment_2_0_2_1 = (Assignment)cGroup_2_0_2.eContents().get(1);
		private final RuleCall cWhereSTRINGTerminalRuleCall_2_0_2_1_0 = (RuleCall)cWhereAssignment_2_0_2_1.eContents().get(0);
		private final Group cGroup_2_0_3 = (Group)cGroup_2_0.eContents().get(3);
		private final Keyword cGROUPBYKeyword_2_0_3_0 = (Keyword)cGroup_2_0_3.eContents().get(0);
		private final Assignment cGroupByAssignment_2_0_3_1 = (Assignment)cGroup_2_0_3.eContents().get(1);
		private final RuleCall cGroupBySTRINGTerminalRuleCall_2_0_3_1_0 = (RuleCall)cGroupByAssignment_2_0_3_1.eContents().get(0);
		private final Group cGroup_2_0_4 = (Group)cGroup_2_0.eContents().get(4);
		private final Keyword cORDERBYKeyword_2_0_4_0 = (Keyword)cGroup_2_0_4.eContents().get(0);
		private final Assignment cOrderbyAssignment_2_0_4_1 = (Assignment)cGroup_2_0_4.eContents().get(1);
		private final RuleCall cOrderbySTRINGTerminalRuleCall_2_0_4_1_0 = (RuleCall)cOrderbyAssignment_2_0_4_1.eContents().get(0);
		private final Assignment cAllAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cAllSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cAllAssignment_2_1.eContents().get(0);
		
		//ECustomQuery:
		//	dbType=("default" | STRING) columns=STRING ("FROM" from=STRING ("WHERE" where=STRING)? ("GROUP BY" groupBy=STRING)?
		//	("ORDER BY" orderby=STRING)? | all=STRING);
		public ParserRule getRule() { return rule; }

		//dbType=("default" | STRING) columns=STRING ("FROM" from=STRING ("WHERE" where=STRING)? ("GROUP BY" groupBy=STRING)?
		//("ORDER BY" orderby=STRING)? | all=STRING)
		public Group getGroup() { return cGroup; }

		//dbType=("default" | STRING)
		public Assignment getDbTypeAssignment_0() { return cDbTypeAssignment_0; }

		//"default" | STRING
		public Alternatives getDbTypeAlternatives_0_0() { return cDbTypeAlternatives_0_0; }

		//"default"
		public Keyword getDbTypeDefaultKeyword_0_0_0() { return cDbTypeDefaultKeyword_0_0_0; }

		//STRING
		public RuleCall getDbTypeSTRINGTerminalRuleCall_0_0_1() { return cDbTypeSTRINGTerminalRuleCall_0_0_1; }

		//columns=STRING
		public Assignment getColumnsAssignment_1() { return cColumnsAssignment_1; }

		//STRING
		public RuleCall getColumnsSTRINGTerminalRuleCall_1_0() { return cColumnsSTRINGTerminalRuleCall_1_0; }

		//"FROM" from=STRING ("WHERE" where=STRING)? ("GROUP BY" groupBy=STRING)? ("ORDER BY" orderby=STRING)? | all=STRING
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"FROM" from=STRING ("WHERE" where=STRING)? ("GROUP BY" groupBy=STRING)? ("ORDER BY" orderby=STRING)?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"FROM"
		public Keyword getFROMKeyword_2_0_0() { return cFROMKeyword_2_0_0; }

		//from=STRING
		public Assignment getFromAssignment_2_0_1() { return cFromAssignment_2_0_1; }

		//STRING
		public RuleCall getFromSTRINGTerminalRuleCall_2_0_1_0() { return cFromSTRINGTerminalRuleCall_2_0_1_0; }

		//("WHERE" where=STRING)?
		public Group getGroup_2_0_2() { return cGroup_2_0_2; }

		//"WHERE"
		public Keyword getWHEREKeyword_2_0_2_0() { return cWHEREKeyword_2_0_2_0; }

		//where=STRING
		public Assignment getWhereAssignment_2_0_2_1() { return cWhereAssignment_2_0_2_1; }

		//STRING
		public RuleCall getWhereSTRINGTerminalRuleCall_2_0_2_1_0() { return cWhereSTRINGTerminalRuleCall_2_0_2_1_0; }

		//("GROUP BY" groupBy=STRING)?
		public Group getGroup_2_0_3() { return cGroup_2_0_3; }

		//"GROUP BY"
		public Keyword getGROUPBYKeyword_2_0_3_0() { return cGROUPBYKeyword_2_0_3_0; }

		//groupBy=STRING
		public Assignment getGroupByAssignment_2_0_3_1() { return cGroupByAssignment_2_0_3_1; }

		//STRING
		public RuleCall getGroupBySTRINGTerminalRuleCall_2_0_3_1_0() { return cGroupBySTRINGTerminalRuleCall_2_0_3_1_0; }

		//("ORDER BY" orderby=STRING)?
		public Group getGroup_2_0_4() { return cGroup_2_0_4; }

		//"ORDER BY"
		public Keyword getORDERBYKeyword_2_0_4_0() { return cORDERBYKeyword_2_0_4_0; }

		//orderby=STRING
		public Assignment getOrderbyAssignment_2_0_4_1() { return cOrderbyAssignment_2_0_4_1; }

		//STRING
		public RuleCall getOrderbySTRINGTerminalRuleCall_2_0_4_1_0() { return cOrderbySTRINGTerminalRuleCall_2_0_4_1_0; }

		//all=STRING
		public Assignment getAllAssignment_2_1() { return cAllAssignment_2_1; }

		//STRING
		public RuleCall getAllSTRINGTerminalRuleCall_2_1_0() { return cAllSTRINGTerminalRuleCall_2_1_0; }
	}

	public class EObjectSectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EObjectSection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEntityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cEntityEMappingEntityCrossReference_0_0 = (CrossReference)cEntityAssignment_0.eContents().get(0);
		private final RuleCall cEntityEMappingEntityIDTerminalRuleCall_0_0_1 = (RuleCall)cEntityEMappingEntityCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDescriminatedTypesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cDescriminatedTypesEMappingEntityCrossReference_1_1_0 = (CrossReference)cDescriminatedTypesAssignment_1_1.eContents().get(0);
		private final RuleCall cDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_1_0_1 = (RuleCall)cDescriminatedTypesEMappingEntityCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cDescriminatedTypesAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final CrossReference cDescriminatedTypesEMappingEntityCrossReference_1_2_1_0 = (CrossReference)cDescriminatedTypesAssignment_1_2_1.eContents().get(0);
		private final RuleCall cDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_2_1_0_1 = (RuleCall)cDescriminatedTypesEMappingEntityCrossReference_1_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cPrefixAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cPrefixIDTerminalRuleCall_2_0_0 = (RuleCall)cPrefixAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cAttributesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cAttributesEMappingAttributeParserRuleCall_2_1_1_0 = (RuleCall)cAttributesAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cAttributesAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cAttributesEMappingAttributeParserRuleCall_2_1_2_1_0 = (RuleCall)cAttributesAssignment_2_1_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_3 = (Keyword)cGroup_2_1.eContents().get(3);
		
		//EObjectSection: //	noreferences?='noreferences'?
		//	entity=[EMappingEntity] ("(" descriminatedTypes+=[EMappingEntity] ("," descriminatedTypes+=[EMappingEntity])+ ")")?
		//	(prefix=ID ("{" attributes+=EMappingAttribute ("," attributes+=EMappingAttribute)* "}")?)? // ('exclude' '{' excludedProperties+=QualifiedName (',' excludedProperties+=QualifiedName)* '}' )?
		//;
		public ParserRule getRule() { return rule; }

		////	noreferences?='noreferences'?
		//entity=[EMappingEntity] ("(" descriminatedTypes+=[EMappingEntity] ("," descriminatedTypes+=[EMappingEntity])+ ")")?
		//(prefix=ID ("{" attributes+=EMappingAttribute ("," attributes+=EMappingAttribute)* "}")?)? // ('exclude' '{' excludedProperties+=QualifiedName (',' excludedProperties+=QualifiedName)* '}' )?
		public Group getGroup() { return cGroup; }

		////	noreferences?='noreferences'?
		//entity=[EMappingEntity]
		public Assignment getEntityAssignment_0() { return cEntityAssignment_0; }

		//[EMappingEntity]
		public CrossReference getEntityEMappingEntityCrossReference_0_0() { return cEntityEMappingEntityCrossReference_0_0; }

		//ID
		public RuleCall getEntityEMappingEntityIDTerminalRuleCall_0_0_1() { return cEntityEMappingEntityIDTerminalRuleCall_0_0_1; }

		//("(" descriminatedTypes+=[EMappingEntity] ("," descriminatedTypes+=[EMappingEntity])+ ")")?
		public Group getGroup_1() { return cGroup_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }

		//descriminatedTypes+=[EMappingEntity]
		public Assignment getDescriminatedTypesAssignment_1_1() { return cDescriminatedTypesAssignment_1_1; }

		//[EMappingEntity]
		public CrossReference getDescriminatedTypesEMappingEntityCrossReference_1_1_0() { return cDescriminatedTypesEMappingEntityCrossReference_1_1_0; }

		//ID
		public RuleCall getDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_1_0_1() { return cDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_1_0_1; }

		//("," descriminatedTypes+=[EMappingEntity])+
		public Group getGroup_1_2() { return cGroup_1_2; }

		//","
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }

		//descriminatedTypes+=[EMappingEntity]
		public Assignment getDescriminatedTypesAssignment_1_2_1() { return cDescriminatedTypesAssignment_1_2_1; }

		//[EMappingEntity]
		public CrossReference getDescriminatedTypesEMappingEntityCrossReference_1_2_1_0() { return cDescriminatedTypesEMappingEntityCrossReference_1_2_1_0; }

		//ID
		public RuleCall getDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_2_1_0_1() { return cDescriminatedTypesEMappingEntityIDTerminalRuleCall_1_2_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }

		//(prefix=ID ("{" attributes+=EMappingAttribute ("," attributes+=EMappingAttribute)* "}")?)?
		public Group getGroup_2() { return cGroup_2; }

		//prefix=ID
		public Assignment getPrefixAssignment_2_0() { return cPrefixAssignment_2_0; }

		//ID
		public RuleCall getPrefixIDTerminalRuleCall_2_0_0() { return cPrefixIDTerminalRuleCall_2_0_0; }

		//("{" attributes+=EMappingAttribute ("," attributes+=EMappingAttribute)* "}")?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1_0() { return cLeftCurlyBracketKeyword_2_1_0; }

		//attributes+=EMappingAttribute
		public Assignment getAttributesAssignment_2_1_1() { return cAttributesAssignment_2_1_1; }

		//EMappingAttribute
		public RuleCall getAttributesEMappingAttributeParserRuleCall_2_1_1_0() { return cAttributesEMappingAttributeParserRuleCall_2_1_1_0; }

		//("," attributes+=EMappingAttribute)*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }

		//attributes+=EMappingAttribute
		public Assignment getAttributesAssignment_2_1_2_1() { return cAttributesAssignment_2_1_2_1; }

		//EMappingAttribute
		public RuleCall getAttributesEMappingAttributeParserRuleCall_2_1_2_1_0() { return cAttributesEMappingAttributeParserRuleCall_2_1_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_1_3() { return cRightCurlyBracketKeyword_2_1_3; }
	}

	public class EMappingAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMappingAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPkAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPkPrimarykeyKeyword_0_0 = (Keyword)cPkAssignment_0.eContents().get(0);
		private final Assignment cPropertyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPropertyQualifiedNameParserRuleCall_1_0 = (RuleCall)cPropertyAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cColumnNameAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cColumnNameIDTerminalRuleCall_3_0_0 = (RuleCall)cColumnNameAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cResolvedAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final Keyword cResolvedResolveKeyword_3_1_0_0 = (Keyword)cResolvedAssignment_3_1_0.eContents().get(0);
		private final Assignment cQueryAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cQueryENamedQueryCrossReference_3_1_1_0 = (CrossReference)cQueryAssignment_3_1_1.eContents().get(0);
		private final RuleCall cQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1 = (RuleCall)cQueryENamedQueryCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Assignment cParametersAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cParametersIDTerminalRuleCall_3_1_3_0 = (RuleCall)cParametersAssignment_3_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_1_4 = (Keyword)cGroup_3_1.eContents().get(4);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Assignment cMappedAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final Keyword cMappedMapKeyword_3_2_0_0 = (Keyword)cMappedAssignment_3_2_0.eContents().get(0);
		private final Assignment cMapAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cMapEObjectSectionParserRuleCall_3_2_1_0 = (RuleCall)cMapAssignment_3_2_1.eContents().get(0);
		
		//EMappingAttribute:
		//	pk?="primarykey"? property=QualifiedName "=>" (columnName=ID | resolved?="resolve" query=[ENamedQuery|QualifiedName]
		//	"(" parameters+=ID ")" | mapped?="map" map=EObjectSection);
		public ParserRule getRule() { return rule; }

		//pk?="primarykey"? property=QualifiedName "=>" (columnName=ID | resolved?="resolve" query=[ENamedQuery|QualifiedName] "("
		//parameters+=ID ")" | mapped?="map" map=EObjectSection)
		public Group getGroup() { return cGroup; }

		//pk?="primarykey"?
		public Assignment getPkAssignment_0() { return cPkAssignment_0; }

		//"primarykey"
		public Keyword getPkPrimarykeyKeyword_0_0() { return cPkPrimarykeyKeyword_0_0; }

		//property=QualifiedName
		public Assignment getPropertyAssignment_1() { return cPropertyAssignment_1; }

		//QualifiedName
		public RuleCall getPropertyQualifiedNameParserRuleCall_1_0() { return cPropertyQualifiedNameParserRuleCall_1_0; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_2() { return cEqualsSignGreaterThanSignKeyword_2; }

		//columnName=ID | resolved?="resolve" query=[ENamedQuery|QualifiedName] "(" parameters+=ID ")" | mapped?="map"
		//map=EObjectSection
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//columnName=ID
		public Assignment getColumnNameAssignment_3_0() { return cColumnNameAssignment_3_0; }

		//ID
		public RuleCall getColumnNameIDTerminalRuleCall_3_0_0() { return cColumnNameIDTerminalRuleCall_3_0_0; }

		//resolved?="resolve" query=[ENamedQuery|QualifiedName] "(" parameters+=ID ")"
		public Group getGroup_3_1() { return cGroup_3_1; }

		//resolved?="resolve"
		public Assignment getResolvedAssignment_3_1_0() { return cResolvedAssignment_3_1_0; }

		//"resolve"
		public Keyword getResolvedResolveKeyword_3_1_0_0() { return cResolvedResolveKeyword_3_1_0_0; }

		//query=[ENamedQuery|QualifiedName]
		public Assignment getQueryAssignment_3_1_1() { return cQueryAssignment_3_1_1; }

		//[ENamedQuery|QualifiedName]
		public CrossReference getQueryENamedQueryCrossReference_3_1_1_0() { return cQueryENamedQueryCrossReference_3_1_1_0; }

		//QualifiedName
		public RuleCall getQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1() { return cQueryENamedQueryQualifiedNameParserRuleCall_3_1_1_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1_2() { return cLeftParenthesisKeyword_3_1_2; }

		//parameters+=ID
		public Assignment getParametersAssignment_3_1_3() { return cParametersAssignment_3_1_3; }

		//ID
		public RuleCall getParametersIDTerminalRuleCall_3_1_3_0() { return cParametersIDTerminalRuleCall_3_1_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_1_4() { return cRightParenthesisKeyword_3_1_4; }

		//mapped?="map" map=EObjectSection
		public Group getGroup_3_2() { return cGroup_3_2; }

		//mapped?="map"
		public Assignment getMappedAssignment_3_2_0() { return cMappedAssignment_3_2_0; }

		//"map"
		public Keyword getMappedMapKeyword_3_2_0_0() { return cMappedMapKeyword_3_2_0_0; }

		//map=EObjectSection
		public Assignment getMapAssignment_3_2_1() { return cMapAssignment_3_2_1; }

		//EObjectSection
		public RuleCall getMapEObjectSectionParserRuleCall_3_2_1_0() { return cMapEObjectSectionParserRuleCall_3_2_1_0; }
	}

	public class ETypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEtypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cUrlAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUrlSTRINGTerminalRuleCall_1_0 = (RuleCall)cUrlAssignment_1.eContents().get(0);
		private final Keyword cNumberSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//EType:
		//	"etype" url=STRING "#" name=ID;
		public ParserRule getRule() { return rule; }

		//"etype" url=STRING "#" name=ID
		public Group getGroup() { return cGroup; }

		//"etype"
		public Keyword getEtypeKeyword_0() { return cEtypeKeyword_0; }

		//url=STRING
		public Assignment getUrlAssignment_1() { return cUrlAssignment_1; }

		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_1_0() { return cUrlSTRINGTerminalRuleCall_1_0; }

		//"#"
		public Keyword getNumberSignKeyword_2() { return cNumberSignKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//(=> "." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//=> "."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName "." "*";
		public ParserRule getRule() { return rule; }

		//QualifiedName "." "*"
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//"*"
		public Keyword getAsteriskKeyword_2() { return cAsteriskKeyword_2; }
	}
	
	
	public class ReturnTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ReturnType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cListEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cListListKeyword_0_0 = (Keyword)cListEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSingleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSingleSingleKeyword_1_0 = (Keyword)cSingleEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ReturnType:
		//	list | single;
		public EnumRule getRule() { return rule; }

		//list | single
		public Alternatives getAlternatives() { return cAlternatives; }

		//list
		public EnumLiteralDeclaration getListEnumLiteralDeclaration_0() { return cListEnumLiteralDeclaration_0; }

		//"list"
		public Keyword getListListKeyword_0_0() { return cListListKeyword_0_0; }

		//single
		public EnumLiteralDeclaration getSingleEnumLiteralDeclaration_1() { return cSingleEnumLiteralDeclaration_1; }

		//"single"
		public Keyword getSingleSingleKeyword_1_0() { return cSingleSingleKeyword_1_0; }
	}
	
	private EMappingElements pEMapping;
	private EMappingBundleElements pEMappingBundle;
	private EMappingEntityDefElements pEMappingEntityDef;
	private ImportElements pImport;
	private PackageDeclarationElements pPackageDeclaration;
	private FQNElements pFQN;
	private EMappingEntityElements pEMappingEntity;
	private EAttributeElements pEAttribute;
	private EValueGeneratorElements pEValueGenerator;
	private ENamedQueryElements pENamedQuery;
	private EPrimtiveTypeElements pEPrimtiveType;
	private EMapTypeElements pEMapType;
	private ENamedCustomQueryElements pENamedCustomQuery;
	private EReturnTypeElements pEReturnType;
	private EPredefinedTypeElements pEPredefinedType;
	private ETypeDefElements pETypeDef;
	private EValueTypeAttributeElements pEValueTypeAttribute;
	private ReturnTypeElements unknownRuleReturnType;
	private EParameterElements pEParameter;
	private EQueryElements pEQuery;
	private ECustomQueryElements pECustomQuery;
	private EObjectSectionElements pEObjectSection;
	private EMappingAttributeElements pEMappingAttribute;
	private ETypeElements pEType;
	private QualifiedNameElements pQualifiedName;
	private QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public EMapGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.bestsolution.persistence.emap.EMap".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//EMapping:
	//	root=(EMappingBundle | EMappingEntityDef);
	public EMappingElements getEMappingAccess() {
		return (pEMapping != null) ? pEMapping : (pEMapping = new EMappingElements());
	}
	
	public ParserRule getEMappingRule() {
		return getEMappingAccess().getRule();
	}

	//EMappingBundle:
	//	imports+=Import* "bundle" name=ID "{" entities+=[EMappingEntity] ("," entities+=[EMappingEntity])* "}" ("databases"
	//	databases+=STRING ("," databases+=STRING)*)?;
	public EMappingBundleElements getEMappingBundleAccess() {
		return (pEMappingBundle != null) ? pEMappingBundle : (pEMappingBundle = new EMappingBundleElements());
	}
	
	public ParserRule getEMappingBundleRule() {
		return getEMappingBundleAccess().getRule();
	}

	//EMappingEntityDef:
	//	package=PackageDeclaration imports+=Import* entity=EMappingEntity;
	public EMappingEntityDefElements getEMappingEntityDefAccess() {
		return (pEMappingEntityDef != null) ? pEMappingEntityDef : (pEMappingEntityDef = new EMappingEntityDefElements());
	}
	
	public ParserRule getEMappingEntityDefRule() {
		return getEMappingEntityDefAccess().getRule();
	}

	//Import:
	//	"import" importedNamespace=(QualifiedNameWithWildcard | QualifiedName);
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//PackageDeclaration:
	//	"package" name=QualifiedName ";";
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return (pPackageDeclaration != null) ? pPackageDeclaration : (pPackageDeclaration = new PackageDeclarationElements());
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}

	//FQN:
	//	ID ("." ID)*;
	public FQNElements getFQNAccess() {
		return (pFQN != null) ? pFQN : (pFQN = new FQNElements());
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}

	//EMappingEntity:
	//	abstract?="abstract"? "entity" name=ID (extensionType=("extends" | "derived") parent=[EMappingEntity|QualifiedName])?
	//	"{" etype=EType ("attributes" "{" attributes+=EAttribute ("," attributes+=EAttribute)* "}")? ("queries" "{"
	//	(namedQueries+=ENamedQuery | namedCustomQueries+=ENamedCustomQuery) ("," (namedQueries+=ENamedQuery |
	//	namedCustomQueries+=ENamedCustomQuery))* "}")? "}" ("as" tableName=ID)? ("descriminatedby" descriminationColumn=ID)?;
	public EMappingEntityElements getEMappingEntityAccess() {
		return (pEMappingEntity != null) ? pEMappingEntity : (pEMappingEntity = new EMappingEntityElements());
	}
	
	public ParserRule getEMappingEntityRule() {
		return getEMappingEntityAccess().getRule();
	}

	//EAttribute:
	//	(pk?="primarykey"? | forcedFk?="forced-fk") name=ID "=>" (columnName=ID ("generatedby" "{"
	//	valueGenerators+=EValueGenerator ("," valueGenerators+=EValueGenerator)* "}")? | resolved?="resolve"
	//	query=[ENamedQuery|QualifiedName] "(" parameters+=ID ")" (opposite=[EAttribute|QualifiedName] "on"
	//	relationTable=ID)?);
	public EAttributeElements getEAttributeAccess() {
		return (pEAttribute != null) ? pEAttribute : (pEAttribute = new EAttributeElements());
	}
	
	public ParserRule getEAttributeRule() {
		return getEAttributeAccess().getRule();
	}

	//EValueGenerator:
	//	dbType=STRING (autokey?="autokey" | "query" query=STRING | "seqnext" sequence=STRING);
	public EValueGeneratorElements getEValueGeneratorAccess() {
		return (pEValueGenerator != null) ? pEValueGenerator : (pEValueGenerator = new EValueGeneratorElements());
	}
	
	public ParserRule getEValueGeneratorRule() {
		return getEValueGeneratorAccess().getRule();
	}

	//ENamedQuery:
	//	returnType=ReturnType? name=ID ("(" (parameters+=EParameter ("," parameters+=EParameter)*)? ")")? "{" queries+=EQuery
	//	("," queries+=EQuery)* "}";
	public ENamedQueryElements getENamedQueryAccess() {
		return (pENamedQuery != null) ? pENamedQuery : (pENamedQuery = new ENamedQueryElements());
	}
	
	public ParserRule getENamedQueryRule() {
		return getENamedQueryAccess().getRule();
	}

	//EPrimtiveType:
	//	"int" | "long" | "double" | "float" | "boolean" | FQN;
	public EPrimtiveTypeElements getEPrimtiveTypeAccess() {
		return (pEPrimtiveType != null) ? pEPrimtiveType : (pEPrimtiveType = new EPrimtiveTypeElements());
	}
	
	public ParserRule getEPrimtiveTypeRule() {
		return getEPrimtiveTypeAccess().getRule();
	}

	//EMapType:
	//	"map";
	public EMapTypeElements getEMapTypeAccess() {
		return (pEMapType != null) ? pEMapType : (pEMapType = new EMapTypeElements());
	}
	
	public ParserRule getEMapTypeRule() {
		return getEMapTypeAccess().getRule();
	}

	//ENamedCustomQuery:
	//	(returnType=EReturnType | list?="[" returnType=EReturnType "]") name=ID ("(" (parameters+=EParameter (","
	//	parameters+=EParameter)*)? ")")? "{" queries+=ECustomQuery "}";
	public ENamedCustomQueryElements getENamedCustomQueryAccess() {
		return (pENamedCustomQuery != null) ? pENamedCustomQuery : (pENamedCustomQuery = new ENamedCustomQueryElements());
	}
	
	public ParserRule getENamedCustomQueryRule() {
		return getENamedCustomQueryAccess().getRule();
	}

	//EReturnType:
	//	EPredefinedType | ETypeDef;
	public EReturnTypeElements getEReturnTypeAccess() {
		return (pEReturnType != null) ? pEReturnType : (pEReturnType = new EReturnTypeElements());
	}
	
	public ParserRule getEReturnTypeRule() {
		return getEReturnTypeAccess().getRule();
	}

	//EPredefinedType:
	//	ref=(EMapType | EPrimtiveType);
	public EPredefinedTypeElements getEPredefinedTypeAccess() {
		return (pEPredefinedType != null) ? pEPredefinedType : (pEPredefinedType = new EPredefinedTypeElements());
	}
	
	public ParserRule getEPredefinedTypeRule() {
		return getEPredefinedTypeAccess().getRule();
	}

	//ETypeDef:
	//	"typedef" name=FQN "(" types+=EValueTypeAttribute ("," types+=EValueTypeAttribute)* ")";
	public ETypeDefElements getETypeDefAccess() {
		return (pETypeDef != null) ? pETypeDef : (pETypeDef = new ETypeDefElements());
	}
	
	public ParserRule getETypeDefRule() {
		return getETypeDefAccess().getRule();
	}

	//EValueTypeAttribute:
	//	type=EPrimtiveType name=ID;
	public EValueTypeAttributeElements getEValueTypeAttributeAccess() {
		return (pEValueTypeAttribute != null) ? pEValueTypeAttribute : (pEValueTypeAttribute = new EValueTypeAttributeElements());
	}
	
	public ParserRule getEValueTypeAttributeRule() {
		return getEValueTypeAttributeAccess().getRule();
	}

	//enum ReturnType:
	//	list | single;
	public ReturnTypeElements getReturnTypeAccess() {
		return (unknownRuleReturnType != null) ? unknownRuleReturnType : (unknownRuleReturnType = new ReturnTypeElements());
	}
	
	public EnumRule getReturnTypeRule() {
		return getReturnTypeAccess().getRule();
	}

	//EParameter:
	//	id?="primarykey"? type=EPrimtiveType name=ID;
	public EParameterElements getEParameterAccess() {
		return (pEParameter != null) ? pEParameter : (pEParameter = new EParameterElements());
	}
	
	public ParserRule getEParameterRule() {
		return getEParameterAccess().getRule();
	}

	//EQuery:
	//	dbType=("default" | STRING) mapping=EObjectSection ("FROM" from=STRING ("WHERE" where=STRING)? ("GROUP BY"
	//	groupBy=STRING)? ("ORDER BY" orderby=STRING)? | all=STRING);
	public EQueryElements getEQueryAccess() {
		return (pEQuery != null) ? pEQuery : (pEQuery = new EQueryElements());
	}
	
	public ParserRule getEQueryRule() {
		return getEQueryAccess().getRule();
	}

	//ECustomQuery:
	//	dbType=("default" | STRING) columns=STRING ("FROM" from=STRING ("WHERE" where=STRING)? ("GROUP BY" groupBy=STRING)?
	//	("ORDER BY" orderby=STRING)? | all=STRING);
	public ECustomQueryElements getECustomQueryAccess() {
		return (pECustomQuery != null) ? pECustomQuery : (pECustomQuery = new ECustomQueryElements());
	}
	
	public ParserRule getECustomQueryRule() {
		return getECustomQueryAccess().getRule();
	}

	//EObjectSection: //	noreferences?='noreferences'?
	//	entity=[EMappingEntity] ("(" descriminatedTypes+=[EMappingEntity] ("," descriminatedTypes+=[EMappingEntity])+ ")")?
	//	(prefix=ID ("{" attributes+=EMappingAttribute ("," attributes+=EMappingAttribute)* "}")?)? // ('exclude' '{' excludedProperties+=QualifiedName (',' excludedProperties+=QualifiedName)* '}' )?
	//;
	public EObjectSectionElements getEObjectSectionAccess() {
		return (pEObjectSection != null) ? pEObjectSection : (pEObjectSection = new EObjectSectionElements());
	}
	
	public ParserRule getEObjectSectionRule() {
		return getEObjectSectionAccess().getRule();
	}

	//EMappingAttribute:
	//	pk?="primarykey"? property=QualifiedName "=>" (columnName=ID | resolved?="resolve" query=[ENamedQuery|QualifiedName]
	//	"(" parameters+=ID ")" | mapped?="map" map=EObjectSection);
	public EMappingAttributeElements getEMappingAttributeAccess() {
		return (pEMappingAttribute != null) ? pEMappingAttribute : (pEMappingAttribute = new EMappingAttributeElements());
	}
	
	public ParserRule getEMappingAttributeRule() {
		return getEMappingAttributeAccess().getRule();
	}

	//EType:
	//	"etype" url=STRING "#" name=ID;
	public ETypeElements getETypeAccess() {
		return (pEType != null) ? pEType : (pEType = new ETypeElements());
	}
	
	public ParserRule getETypeRule() {
		return getETypeAccess().getRule();
	}

	//QualifiedName:
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName "." "*";
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return (pQualifiedNameWithWildcard != null) ? pQualifiedNameWithWildcard : (pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements());
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
